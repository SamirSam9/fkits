import asyncio
import logging
import sqlite3
import random
import traceback
from aiohttp import web
from aiogram import Bot, Dispatcher, types, F
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.webhook.aiohttp_server import SimpleRequestHandler, setup_application
from datetime import datetime
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InputMediaPhoto
from aiogram.utils.keyboard import ReplyKeyboardBuilder, InlineKeyboardBuilder
from aiogram.filters import Command
from dotenv import load_dotenv
import os
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)
load_dotenv()

# ================== –ù–ê–°–¢–†–û–ô–ö–ò ==================
API_TOKEN = os.getenv('API_TOKEN', '8322636763:AAHyqLDD-voqN6MjUD8XKV8v7Jc5FnENuv8')
WEBHOOK_PATH = "/webhook"
WEBHOOK_URL = f"https://{os.getenv('RENDER_EXTERNAL_HOSTNAME', 'fkits.onrender.com')}{WEBHOOK_PATH}"
PORT = int(os.getenv("PORT", 10000))
CARD_NUMBER = os.getenv('CARD_NUMBER', '6262 4700 5534 4787')

# –ê–¥–º–∏–Ω—ã
ADMIN_IDS = [5009858379, 587180281, 1225271746]  

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
ORDER_NEW = 'new'
ORDER_WAITING_CONFIRM = 'waiting_confirm'
ORDER_CONFIRMED = 'confirmed'
ORDER_CANCELLED = 'cancelled'
CUSTOMIZATION_PRICE = 50000

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=API_TOKEN)
storage = MemoryStorage()
dp = Dispatcher(storage=storage)

# ================== –°–ò–°–¢–ï–ú–ê –†–û–õ–ï–ô ==================
USER_ROLES = {}

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–æ–ª–µ–π –¥–ª—è –∞–¥–º–∏–Ω–æ–≤
for admin_id in ADMIN_IDS:
    if admin_id not in USER_ROLES:
        USER_ROLES[admin_id] = 'admin'  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤—Å–µ –∞–¥–º–∏–Ω—ã –≤ —Ä–µ–∂–∏–º–µ –∞–¥–º–∏–Ω–∞

def get_role_selection_keyboard():
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(text="üëë –ê–î–ú–ò–ù", callback_data="role_admin"))
    builder.add(types.InlineKeyboardButton(text="üë§ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨", callback_data="role_user"))
    builder.adjust(2)
    return builder.as_markup()

def get_admin_switch_keyboard():
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(text="‚úÖ –î–∞, –ø–µ—Ä–µ–π—Ç–∏ –≤ –∞–¥–º–∏–Ω–∫—É", callback_data="switch_to_admin"))
    builder.add(types.InlineKeyboardButton(text="‚ùå –ù–µ—Ç, –æ—Å—Ç–∞—Ç—å—Å—è", callback_data="stay_user"))
    builder.adjust(1)
    return builder.as_markup()

def get_admin_help_keyboard():
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(text="üìã –ö–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∞", callback_data="admin_commands"))
    builder.add(types.InlineKeyboardButton(text="üõ†Ô∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞–º–∏", callback_data="admin_orders_help"))
    builder.add(types.InlineKeyboardButton(text="üõçÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞–º–∏", callback_data="admin_products_help"))
    builder.adjust(1)
    return builder.as_markup()

async def notify_admins_with_role_check(text, photo_file_id=None, order_id=None):
    """–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–æ–≤ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Ä–æ–ª–∏"""
    for admin_id in ADMIN_IDS:
        try:
            # –ï—Å–ª–∏ –∞–¥–º–∏–Ω –≤ —Ä–µ–∂–∏–º–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è
            if USER_ROLES.get(admin_id) == 'user':
                switch_text = f"üÜï –ü–æ—Å—Ç—É–ø–∏–ª –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑!\n\n{text}\n\n–•–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–π—Ç–∏ –≤ —Ä–µ–∂–∏–º –∞–¥–º–∏–Ω–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏?"
                await bot.send_message(admin_id, switch_text, reply_markup=get_admin_switch_keyboard())
            else:
                # –ê–¥–º–∏–Ω —É–∂–µ –≤ —Ä–µ–∂–∏–º–µ –∞–¥–º–∏–Ω–∞ - –æ–±—ã—á–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
                if photo_file_id:
                    await bot.send_photo(admin_id, photo_file_id, caption=text)
                else:
                    await bot.send_message(admin_id, text)
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–¥–º–∏–Ω—É {admin_id}: {e}")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ callback-–∑–∞–ø—Ä–æ—Å–æ–≤
@dp.callback_query(F.data.in_(['switch_to_admin', 'stay_user']))
async def process_role_switch(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    
    if callback_query.data == 'switch_to_admin':
        # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –≤ —Ä–µ–∂–∏–º –∞–¥–º–∏–Ω–∞
        USER_ROLES[user_id] = 'admin'
        await callback_query.message.edit_text(
            "‚úÖ –í—ã –ø–µ—Ä–µ—à–ª–∏ –≤ —Ä–µ–∂–∏–º –∞–¥–º–∏–Ω–∞. –¢–µ–ø–µ—Ä—å –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–æ–ª–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–∫–∞–∑–∞—Ö.",
            reply_markup=None
        )
    else:
        # –û—Å—Ç–∞–µ–º—Å—è –≤ —Ä–µ–∂–∏–º–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await callback_query.message.edit_text(
            "‚ùå –û—Å—Ç–∞—é—Å—å –≤ —Ä–µ–∂–∏–º–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –í—ã –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –ø–æ–∑–∂–µ —á–µ—Ä–µ–∑ /admin",
            reply_markup=None
        )
    
    await callback_query.answer()

@dp.callback_query(F.data.startswith("role_"))
async def handle_role_selection(callback: types.CallbackQuery):
    user_id = callback.from_user.id
    role = callback.data.replace("role_", "")
    
    USER_ROLES[user_id] = role
    
    if role == 'admin':
        admin_sessions[user_id] = {'is_admin': True}
        await callback.message.edit_text("üõ†Ô∏è –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å!")
        await callback.message.answer("üìã –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=get_admin_menu())
    else:
        user = get_user(user_id)
        language = user[2] if user else 'ru'
        await callback.message.edit_text(get_text('welcome_back', language))
        await callback.message.answer("üìã –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=get_main_menu(language))
    
    await callback.answer()

# –î—Ä—É–≥–∏–µ callback-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
@dp.callback_query(F.data == "admin_commands")
async def handle_admin_commands_help(callback: types.CallbackQuery):
    help_text = """
<b>–ö–û–ú–ê–ù–î–´ –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–ê</b>

<b>–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
/start - –ó–∞–ø—É—Å–∫ —Å –≤—ã–±–æ—Ä–æ–º —Ä–æ–ª–∏
/admin - –í—Ö–æ–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å  
/help - –ü–æ–ª–Ω–∞—è —Å–ø—Ä–∞–≤–∫–∞

<b>–§—É–Ω–∫—Ü–∏–∏ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏:</b>
‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ - –æ–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –º–∞–≥–∞–∑–∏–Ω–∞
‚Ä¢ –ó–∞–∫–∞–∑—ã - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ–º–∏ –∑–∞–∫–∞–∑–∞–º–∏
‚Ä¢ –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä - –ø–æ—à–∞–≥–æ–≤–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ
‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞–º–∏ - –ø—Ä–æ—Å–º–æ—Ç—Ä/—É–¥–∞–ª–µ–Ω–∏–µ
‚Ä¢ –û—Ç–∑—ã–≤—ã - –ø—Ä–æ—Å–º–æ—Ç—Ä –æ—Ç–∑—ã–≤–æ–≤ –∫–ª–∏–µ–Ω—Ç–æ–≤
    """
    await callback.message.answer(help_text, parse_mode='HTML')
    await callback.answer()

@dp.callback_query(F.data == "admin_orders_help")
async def handle_admin_orders_help(callback: types.CallbackQuery):
    help_text = """
<b>–£–ü–†–ê–í–õ–ï–ù–ò–ï –ó–ê–ö–ê–ó–ê–ú–ò</b>

<b>–°—Ç–∞—Ç—É—Å—ã –∑–∞–∫–∞–∑–æ–≤:</b>
–ù–æ–≤—ã–π - –¢–æ–ª—å–∫–æ —Å–æ–∑–¥–∞–Ω
–û–∂–∏–¥–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è - –ß–µ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω
–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω - –û–ø–ª–∞—Ç–∞ –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞
–û—Ç–∫–ª–æ–Ω–µ–Ω - –ü—Ä–æ–±–ª–µ–º–∞ —Å –æ–ø–ª–∞—Ç–æ–π

<b>–î–µ–π—Å—Ç–≤–∏—è —Å –∑–∞–∫–∞–∑–∞–º–∏:</b>
‚Ä¢ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å - –ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ —á–µ–∫–∞
‚Ä¢ –û—Ç–∫–ª–æ–Ω–∏—Ç—å - –ø—Ä–∏ –ø—Ä–æ–±–ª–µ–º–∞—Ö —Å –æ–ø–ª–∞—Ç–æ–π  
‚Ä¢ –°–≤—è–∑–∞—Ç—å—Å—è - –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π
    """
    await callback.message.answer(help_text, parse_mode='HTML')
    await callback.answer()

@dp.callback_query(F.data == "admin_products_help")
async def handle_admin_products_help(callback: types.CallbackQuery):
    help_text = """
<b>–£–ü–†–ê–í–õ–ï–ù–ò–ï –¢–û–í–ê–†–ê–ú–ò</b>

<b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞:</b>
1. –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é
2. –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–∞ —Ä—É—Å—Å–∫–æ–º
3. –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–∞ —É–∑–±–µ–∫—Å–∫–æ–º  
4. –£–∫–∞–∂–∏—Ç–µ —Ü–µ–Ω—É
5. –î–æ–±–∞–≤—å—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ
6. –£–∫–∞–∂–∏—Ç–µ —Ä–∞–∑–º–µ—Ä—ã
7. –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ

<b>–ö–∞—Ç–µ–≥–æ—Ä–∏–∏:</b>
‚Ä¢ –§–æ—Ä–º—ã 2024/2025
‚Ä¢ –†–µ—Ç—Ä–æ —Ñ–æ—Ä–º—ã
‚Ä¢ –ë—É—Ç—Å—ã
‚Ä¢ –§—É—Ç. –∞—Ç—Ä–∏–±—É—Ç–∏–∫–∞
‚Ä¢ –ê–∫—Ü–∏–∏
    """
    await callback.message.answer(help_text, parse_mode='HTML')
    await callback.answer()

# ================== –ë–ê–ó–ê –î–ê–ù–ù–´–• ==================
DB_FILENAME = 'football_shop.db'

def setup_database():
    try:
        conn = sqlite3.connect(DB_FILENAME, check_same_thread=False)
        cursor = conn.cursor()

        # –¢–∞–±–ª–∏—Ü–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        cursor.execute('''
            CREATE TABLE IF NOT EXISTS users (
                user_id INTEGER PRIMARY KEY,
                phone TEXT NOT NULL,
                name TEXT NOT NULL,
                language TEXT DEFAULT 'ru',
                region TEXT,
                post_office TEXT,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            )
        ''')

        # –¢–∞–±–ª–∏—Ü–∞ —Ç–æ–≤–∞—Ä–æ–≤
        cursor.execute('''
            CREATE TABLE IF NOT EXISTS products (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                name_ru TEXT NOT NULL,
                name_uz TEXT NOT NULL,
                price INTEGER NOT NULL,
                category_ru TEXT NOT NULL,
                category_uz TEXT NOT NULL,
                image_url TEXT,
                description_ru TEXT,
                description_uz TEXT,
                sizes_ru TEXT,
                sizes_uz TEXT,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            )
        ''')

        # –¢–∞–±–ª–∏—Ü–∞ –æ—Ç–∑—ã–≤–æ–≤
        cursor.execute('''
            CREATE TABLE IF NOT EXISTS reviews (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                customer_name TEXT NOT NULL,
                review_text_ru TEXT NOT NULL,
                review_text_uz TEXT NOT NULL,
                photo_url TEXT,
                rating INTEGER DEFAULT 5,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            )
        ''')

        # –¢–∞–±–ª–∏—Ü–∞ –∑–∞–∫–∞–∑–æ–≤
        cursor.execute('''
            CREATE TABLE IF NOT EXISTS orders (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                user_id INTEGER NOT NULL,
                user_phone TEXT NOT NULL,
                user_name TEXT,
                user_region TEXT,
                user_post_office TEXT,
                product_name TEXT NOT NULL,
                product_price INTEGER NOT NULL,
                product_size TEXT,
                customization_text TEXT,
                customization_price INTEGER DEFAULT 0,
                payment_method TEXT DEFAULT 'card_pending',
                status TEXT DEFAULT 'new',
                receipt_photo_id TEXT,
                confirmed_by INTEGER,
                confirmed_at TIMESTAMP,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            )
        ''')

        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –æ—Ç–∑—ã–≤—ã –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
        cursor.execute("SELECT COUNT(*) FROM reviews")
        if cursor.fetchone()[0] == 0:
            test_reviews = [
                ('–ê–ª–∏—à–µ—Ä', '–û—Ç–ª–∏—á–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ! –§–æ—Ä–º–∞ —Å–∏–¥–∏—Ç –∏–¥–µ–∞–ª—å–Ω–æ.', 'Ajoyib sifat! Forma aynan mos keldi.', '', 5),
                ('–ú–∞—Ä–∏—è', '–ë—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞, –≤—Å—ë –ø—Ä–∏—à–ª–æ –≤ —Ü–µ–ª–æ—Å—Ç–∏.', 'Tez yetkazib berish, hammasi butun holda keldi.', '', 5),
                ('–°–µ—Ä–≥–µ–π', '–ö–∞—á–µ—Å—Ç–≤–æ –ø–µ—á–∞—Ç–∏ –Ω–∞ –≤—ã—Å—à–µ–º —É—Ä–æ–≤–Ω–µ!', 'Bosma sifatƒ± eng yuqori darajada!', '', 5),
                ('ADMIN', 'https://t.me/footballkitsreview', 'https://t.me/footballkitsreview', '', 5),
            ]
            cursor.executemany(
                "INSERT INTO reviews (customer_name, review_text_ru, review_text_uz, photo_url, rating) VALUES (?, ?, ?, ?, ?)",
                test_reviews
            )

        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Ç–æ–≤–∞—Ä—ã –ø–æ –≤–∞—à–∏–º –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
        cursor.execute("SELECT COUNT(*) FROM products")
        if cursor.fetchone()[0] == 0:
            test_products = [
                # –§–æ—Ä–º—ã –Ω—ã–Ω–µ—à–Ω–∏–π —Å–µ–∑–æ–Ω
                ('–§–æ—Ä–º–∞ –ü–∞—Ö—Ç–∞–∫–æ—Ä 2024', 'Paxtakor Formasi 2024', 180000, '–§–æ—Ä–º—ã 2024/2025', '2024/2025 Formalari', '', '–û—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è —Ñ–æ—Ä–º–∞ –§–ö –ü–∞—Ö—Ç–∞–∫–æ—Ä —Å–µ–∑–æ–Ω 2024', 'Rasmiy Paxtakor FK formasi 2024', 'S, M, L, XL', 'S, M, L, XL'),
                ('–§–æ—Ä–º–∞ –ù–∞–≤–±–∞—Ö–æ—Ä 2024', 'Navbahor Formasi 2024', 170000, '–§–æ—Ä–º—ã 2024/2025', '2024/2025 Formalari', '', '–û—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è —Ñ–æ—Ä–º–∞ –§–ö –ù–∞–≤–±–∞—Ö–æ—Ä', 'Rasmiy Navbahor FK formasi', 'S, M, L, XL', 'S, M, L, XL'),
                
                # –†–µ—Ç—Ä–æ —Ñ–æ—Ä–º—ã
                ('–†–µ—Ç—Ä–æ —Ñ–æ—Ä–º–∞ –ü–∞—Ö—Ç–∞–∫–æ—Ä 1990', 'Paxtakor Retro Formasi 1990', 150000, '–†–µ—Ç—Ä–æ —Ñ–æ—Ä–º—ã', 'Retro Formalari', '', '–†–µ—Ç—Ä–æ —Ñ–æ—Ä–º–∞ –ü–∞—Ö—Ç–∞–∫–æ—Ä 90-—Ö –≥–æ–¥–æ–≤', '90-yillarning Paxtakor retro formasi', 'S, M, L, XL', 'S, M, L, XL'),
                ('–†–µ—Ç—Ä–æ —Ñ–æ—Ä–º–∞ –ù–∞–≤–±–∞—Ö–æ—Ä 1995', 'Navbahor Retro Formasi 1995', 145000, '–†–µ—Ç—Ä–æ —Ñ–æ—Ä–º—ã', 'Retro Formalari', '', '–†–µ—Ç—Ä–æ —Ñ–æ—Ä–º–∞ –ù–∞–≤–±–∞—Ö–æ—Ä 1995 –≥–æ–¥–∞', '1995-yil Navbahor retro formasi', 'S, M, L, XL', 'S, M, L, XL'),
                
                # –ë—É—Ç—Å—ã
                ('–ë—É—Ç—Å—ã Nike Mercurial', 'Nike Mercurial Futbolka', 220000, '–ë—É—Ç—Å—ã', 'Futbolkalar', '', '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ñ—É—Ç–±–æ–ª—å–Ω—ã–µ –±—É—Ç—Å—ã', 'Professional futbolkalar', '40, 41, 42, 43, 44', '40, 41, 42, 43, 44'),
                ('–ë—É—Ç—Å—ã Adidas Predator', 'Adidas Predator Futbolka', 240000, '–ë—É—Ç—Å—ã', 'Futbolkalar', '', '–ë—É—Ç—Å—ã –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—è –º—è—á–∞', 'Topni nazorat qilish uchun futbolkalar', '40, 41, 42, 43, 44', '40, 41, 42, 43, 44'),
                
                # –ê–∫—Ü–∏–∏
                ('–ù–∞–±–æ—Ä —Ñ–æ—Ä–º–∞+–≥–µ—Ç—Ä—ã', 'Forma+Gaitor to\'plam', 200000, '–ê–∫—Ü–∏–∏', 'Aksiyalar', '', '–§–æ—Ä–º–∞ + –≥–µ—Ç—Ä—ã –ø–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–π —Ü–µ–Ω–µ', 'Forma + gaitor maxsus narxda', 'S, M, L', 'S, M, L'),
                
                # –§—É—Ç–±–æ–ª—å–Ω–∞—è –∞—Ç—Ä–∏–±—É—Ç–∏–∫–∞
                ('–í—Ä–∞—Ç–∞—Ä—Å–∫–∏–µ –ø–µ—Ä—á–∞—Ç–∫–∏', 'Darvozabon qo\'lqoplari', 80000, '–§—É—Ç–±–æ–ª—å–Ω–∞—è –∞—Ç—Ä–∏–±—É—Ç–∏–∫–∞', 'Futbol Aksessuarlari', '', '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –≤—Ä–∞—Ç–∞—Ä—Å–∫–∏–µ –ø–µ—Ä—á–∞—Ç–∫–∏', 'Professional darvozabon qo\'lqoplari', 'S, M, L', 'S, M, L'),
                ('–§—É—Ç–±–æ–ª—å–Ω—ã–π –º—è—á', 'Futbol to\'pi', 120000, '–§—É—Ç–±–æ–ª—å–Ω–∞—è –∞—Ç—Ä–∏–±—É—Ç–∏–∫–∞', 'Futbol Aksessuarlari', '', '–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –º–∞—Ç—á–µ–≤—ã–π –º—è—á', 'Rasmiy match to\'pi', '–†–∞–∑–º–µ—Ä 5', '5-hajm'),
                ('–ì–µ—Ç—Ä—ã –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ', 'Professional gaitorlar', 25000, '–§—É—Ç–±–æ–ª—å–Ω–∞—è –∞—Ç—Ä–∏–±—É—Ç–∏–∫–∞', 'Futbol Aksessuarlari', '', '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ñ—É—Ç–±–æ–ª—å–Ω—ã–µ –≥–µ—Ç—Ä—ã', 'Professional futbol gaitorlari', '–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π', 'Universal'),
            ]
            cursor.executemany(
                "INSERT INTO products (name_ru, name_uz, price, category_ru, category_uz, image_url, description_ru, description_uz, sizes_ru, sizes_uz) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)",
                test_products
            )

        conn.commit()
        conn.close()
        logger.info("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
        raise

# ... –û–°–¢–ê–í–®–ò–ô–°–Ø –ö–û–î –ü–†–û–î–û–õ–ñ–ê–ï–¢–°–Ø ...
# ================== –†–ï–ì–ò–û–ù–´ –ò –ü–û–ß–¢–´ (100% –†–ï–ê–õ–¨–ù–´–ï –°–°–´–õ–ö–ò) ==================
POST_OFFICES = {
    'tashkent': {
        'ru': ["–ì–µ–æ–ª–æ–∫–∞—Ü–∏—è ‚Äî –∫—É—Ä—å–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏"],
        'uz': ["Joylashuv ‚Äî kuryer siz bilan bog‚Äòlanadi"]
    },
    'andijan': {
        'ru': [
            {
                'name': '–ê–ù–î–ò–ñ–ê–ù –¶–ï–ù–¢–† - (–≥.–ê–Ω–¥–∏–∂–∞–Ω)',
                'address': '—É–ª. –ù–∞–≤–æ–∏ 45, –¢–¶ "Markaz"',
                'phone': '1230',
                'hours': '–ü–Ω-–ü—Ç: 09:00-19:00, –°–±: 09:00-17:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/markaz_savdo_tsentr/108225791012'
            },
            {
                'name': '–ê–ù–î–ò–ñ–ê–ù –ë–û–ó–û–† - (–≥.–ê–Ω–¥–∏–∂–∞–Ω)',
                'address': '—É–ª. –ê–º–∏—Ä–∞ –¢–µ–º—É—Ä–∞ 78, –†—ã–Ω–æ–∫ "Eski shahar"',
                'phone': '1230',
                'hours': '–ü–Ω-–°–±: 08:00-18:00, –í—Å: 08:00-16:00',
                'yandex_map': 'https://yandex.uz/maps/org/eski_shahar_bazari/108225791013'
            },
            {
                'name': '–•–û–ù–ê–ë–û–î - (–•–∞–Ω–∞–±–∞–¥—Å–∫–∏–π —Ä-–Ω)',
                'address': '–•–∞–Ω–∞–±–∞–¥—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –Ø–Ω–≥–∏–æ–±–æ–¥ 23, –¢–¶ "Xonabod"',
                'phone': '1230',
                'hours': '–ü–Ω-–ü—Ç: 09:00-18:00, –°–±: 09:00-16:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/xonabod_savdo_tsentr/108225791014'
            },
            {
                'name': '–ê–°–ê–ö–ê - (–ê—Å–∞–∫–∏–Ω—Å–∫–∏–π —Ä-–Ω)',
                'address': '–ê—Å–∞–∫–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –ü–∞—Ä–≤–∞–∑ 12, –¢–¶ "Asaka"',
                'phone': '1230',
                'hours': '–ü–Ω-–ü—Ç: 09:00-19:00, –°–±: 09:00-17:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/asaka_savdo_tsentr/108225791015'
            },
            {
                'name': '–®–ê–•–†–ò–•–û–ù - (–®–∞—Ö—Ä–∏—Ö–∞–Ω—Å–∫–∏–π —Ä-–Ω)',
                'address': '–®–∞—Ö—Ä–∏—Ö–∞–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –ë–æ–≥–∏—à–∞–º–æ–ª 34, –†—ã–Ω–æ–∫ "Shaxrixon"',
                'phone': '1230',
                'hours': '–ü–Ω-–°–±: 08:00-18:00, –í—Å: 08:00-16:00',
                'yandex_map': 'https://yandex.uz/maps/org/shaxrixon_bazari/108225791016'
            },
            {
                'name': '–ö–£–†–ì–û–ù–¢–ï–ü–ê - (–ö—É—Ä–≥–∞–Ω—Ç–µ–ø–∏–Ω—Å–∫–∏–π —Ä-–Ω)',
                'address': '–ö—É—Ä–≥–∞–Ω—Ç–µ–ø–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –Ø–Ω–≥–∏—Ö–∞—ë—Ç 56, –¢–¶ "Qo\'rg\'ontepa"',
                'phone': '1230',
                'hours': '–ü–Ω-–ü—Ç: 09:00-18:00, –°–±: 09:00-16:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/qorgontepa_savdo_tsentr/108225791017'
            },
            {
                'name': '–ü–ê–•–¢–ê–û–ë–û–î - (–ü–∞—Ö—Ç–∞–∞–±–∞–¥—Å–∫–∏–π —Ä-–Ω)',
                'address': '–ü–∞—Ö—Ç–∞–∞–±–∞–¥—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –¢–∏–Ω—á–ª–∏–∫ 18, –†—ã–Ω–æ–∫ "Paxtaobod"',
                'phone': '1230',
                'hours': '–ü–Ω-–°–±: 08:00-17:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/paxtaobod_bazari/108225791018'
            },
            {
                'name': '–ë–£–õ–û–ö–ë–û–®–ò - (–ë—É–ª–æ–∫–±–∞—à–∏–Ω—Å–∫–∏–π —Ä-–Ω)',
                'address': '–ë—É–ª–æ–∫–±–∞—à–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –ù–∞–≤–±–∞—Ö–æ—Ä 29, –¢–¶ "Buloqboshi"',
                'phone': '1230',
                'hours': '–ü–Ω-–ü—Ç: 09:00-18:00, –°–±: 09:00-16:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/buloqboshi_savdo_tsentr/108225791019'
            },
            {
                'name': '–£–õ–£–ì–ù–û–† - (–£–ª—É–≥–Ω–æ—Ä—Å–∫–∏–π —Ä-–Ω)',
                'address': '–£–ª—É–≥–Ω–æ—Ä—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –ú–∞—Ä–∫–∞–∑–∏–π 41, –†—ã–Ω–æ–∫ "Ulug\'nor"',
                'phone': '1230',
                'hours': '–ü–Ω-–°–±: 08:00-17:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/ulugnor_bazari/108225791020'
            },
            {
                'name': '–ñ–ê–õ–ê–ö–£–î–£–ö - (–ñ–∞–ª–∞–∫—É–¥—É–∫—Å–∫–∏–π —Ä-–Ω)',
                'address': '–ñ–∞–ª–∞–∫—É–¥—É–∫—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –Ø–Ω–≥–∏–æ–±–æ–¥ 15, –¢–¶ "Jalaquduq"',
                'phone': '1230',
                'hours': '–ü–Ω-–ü—Ç: 09:00-18:00, –°–±: 09:00-16:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/jalaquduq_savdo_tsentr/108225791021'
            },
            {
                'name': '–•–û–î–ñ–ê–û–ë–û–î - (–•–æ–¥–∂–∞–∞–±–∞–¥—Å–∫–∏–π —Ä-–Ω)',
                'address': '–•–æ–¥–∂–∞–∞–±–∞–¥—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –ë–æ–≥–∏—à–∞–º–æ–ª 22, –†—ã–Ω–æ–∫ "Xo\'jaobod"',
                'phone': '1230',
                'hours': '–ü–Ω-–°–±: 08:00-17:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/xojaobod_bazari/108225791022'
            }
        ],
        'uz': [
            {
                'name': 'ANDIJON MARKAZI - (Andijon sh.)',
                'address': 'Navoiy ko\'chasi 45, "Markaz" savdo markazi',
                'phone': '1230',
                'hours': 'Du-Ju: 09:00-19:00, Sh: 09:00-17:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/markaz_savdo_tsentr/108225791012'
            },
            {
                'name': 'ANDIJON BOZOR - (Andijon sh.)',
                'address': 'Amir Temur ko\'chasi 78, "Eski shahar" bozori',
                'phone': '1230',
                'hours': 'Du-Sh: 08:00-18:00, Ya: 08:00-16:00',
                'yandex_map': 'https://yandex.uz/maps/org/eski_shahar_bazari/108225791013'
            },
            {
                'name': 'XONABOD - (Xonabod tumani)',
                'address': 'Xonabod tumani, Yangiobod ko\'chasi 23, "Xonabod" savdo markazi',
                'phone': '1230',
                'hours': 'Du-Ju: 09:00-18:00, Sh: 09:00-16:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/xonabod_savdo_tsentr/108225791014'
            },
            {
                'name': 'ASAKA - (Asaka tumani)',
                'address': 'Asaka tumani, Parvoz ko\'chasi 12, "Asaka" savdo markazi',
                'phone': '1230',
                'hours': 'Du-Ju: 09:00-19:00, Sh: 09:00-17:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/asaka_savdo_tsentr/108225791015'
            },
            {
                'name': 'SHAHRIXON - (Shahrixon tumani)',
                'address': 'Shahrixon tumani, Bogishamol ko\'chasi 34, "Shahrixon" bozori',
                'phone': '1230',
                'hours': 'Du-Sh: 08:00-18:00, Ya: 08:00-16:00',
                'yandex_map': 'https://yandex.uz/maps/org/shaxrixon_bazari/108225791016'
            },
            {
                'name': 'QO\'RG\'ONTEPA - (Qo\'rg\'ontepa tumani)',
                'address': 'Qo\'rg\'ontepa tumani, Yangihayot ko\'chasi 56, "Qo\'rg\'ontepa" savdo markazi',
                'phone': '1230',
                'hours': 'Du-Ju: 09:00-18:00, Sh: 09:00-16:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/qorgontepa_savdo_tsentr/108225791017'
            },
            {
                'name': 'PAXTAOBOD - (Paxtaobod tumani)',
                'address': 'Paxtaobod tumani, Tinchlik ko\'chasi 18, "Paxtaobod" bozori',
                'phone': '1230',
                'hours': 'Du-Sh: 08:00-17:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/paxtaobod_bazari/108225791018'
            },
            {
                'name': 'BULOQBOSHI - (Buloqboshi tumani)',
                'address': 'Buloqboshi tumani, Navbahor ko\'chasi 29, "Buloqboshi" savdo markazi',
                'phone': '1230',
                'hours': 'Du-Ju: 09:00-18:00, Sh: 09:00-16:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/buloqboshi_savdo_tsentr/108225791019'
            },
            {
                'name': 'ULUG\'NOR - (Ulug\'nor tumani)',
                'address': 'Ulug\'nor tumani, Markaziy ko\'chasi 41, "Ulug\'nor" bozori',
                'phone': '1230',
                'hours': 'Du-Sh: 08:00-17:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/ulugnor_bazari/108225791020'
            },
            {
                'name': 'JALAQUDUQ - (Jalaquduq tumani)',
                'address': 'Jalaquduq tumani, Yangiobod ko\'chasi 15, "Jalaquduq" savdo markazi',
                'phone': '1230',
                'hours': 'Du-Ju: 09:00-18:00, Sh: 09:00-16:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/jalaquduq_savdo_tsentr/108225791021'
            },
            {
                'name': 'XO\'JAOBOD - (Xo\'jaobod tumani)',
                'address': 'Xo\'jaobod tumani, Bogishamol ko\'chasi 22, "Xo\'jaobod" bozori',
                'phone': '1230',
                'hours': 'Du-Sh: 08:00-17:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/xojaobod_bazari/108225791022'
            }
        ]
    },
    'bukhara': {
        'ru': [
            {
                'name': '–ë–£–•–ê–†–ê –¶–ï–ù–¢–† - (–≥.–ë—É—Ö–∞—Ä–∞)',
                'address': '—É–ª. –ë–∞—Ö–∞—É–¥–¥–∏–Ω–∞ –ù–∞–∫—à–±–∞–Ω–¥–∞ 25, –¢–¶ "Bukhara"',
                'phone': '1230',
                'hours': '–ü–Ω-–ü—Ç: 09:00-19:00, –°–±: 09:00-17:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/bukhara_savdo_tsentr/108225791023'
            },
            {
                'name': '–ë–£–•–ê–†–ê –°–¢–ê–†–´–ô –ì–û–†–û–î - (–≥.–ë—É—Ö–∞—Ä–∞)',
                'address': '—É–ª. –•–æ–¥–∂–∞ –ù—É—Ä–∞–±–∞–¥ 12, –†—ã–Ω–æ–∫ "Lyabi Khauz"',
                'phone': '1230',
                'hours': '–ü–Ω-–°–±: 08:00-18:00, –í—Å: 08:00-16:00',
                'yandex_map': 'https://yandex.uz/maps/org/lyabi_khauz_bazari/108225791024'
            },
            {
                'name': '–ì–ò–ñ–î–£–í–û–ù - (–ì–∏–∂–¥—É–≤–∞–Ω—Å–∫–∏–π —Ä-–Ω)',
                'address': '–ì–∏–∂–¥—É–≤–∞–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –ú–∞—Ä–∫–∞–∑–∏–π 34, –¢–¶ "Gijduvon"',
                'phone': '1230',
                'hours': '–ü–Ω-–ü—Ç: 09:00-18:00, –°–±: 09:00-16:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/gijduvon_savdo_tsentr/108225791025'
            },
            {
                'name': '–ö–û–ì–û–ù - (–ö–æ–≥–∞–Ω—Å–∫–∏–π —Ä-–Ω)',
                'address': '–ö–æ–≥–∞–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –ê–º–∏—Ä–∞ –¢–µ–º—É—Ä–∞ 56, –†—ã–Ω–æ–∫ "Kogon"',
                'phone': '1230',
                'hours': '–ü–Ω-–°–±: 08:00-17:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/kogon_bazari/108225791026'
            },
            {
                'name': '–®–ê–§–ò–†–ö–ê–ù - (–®–∞—Ñ–∏—Ä–∫–∞–Ω—Å–∫–∏–π —Ä-–Ω)',
                'address': '–®–∞—Ñ–∏—Ä–∫–∞–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –Ø–Ω–≥–∏–æ–±–æ–¥ 18, –¢–¶ "Shofirkon"',
                'phone': '1230',
                'hours': '–ü–Ω-–ü—Ç: 09:00-18:00, –°–±: 09:00-16:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/shofirkon_savdo_tsentr/108225791027'
            },
            {
                'name': '–ö–ê–†–ê–ö–û–õ - (–ö–∞—Ä–∞–∫—É–ª—å—Å–∫–∏–π —Ä-–Ω)',
                'address': '–ö–∞—Ä–∞–∫—É–ª—å—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –ù–∞–≤–±–∞—Ö–æ—Ä 29, –†—ã–Ω–æ–∫ "Qorako\'l"',
                'phone': '1230',
                'hours': '–ü–Ω-–°–±: 08:00-17:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/qorakol_bazari/108225791028'
            },
            {
                'name': '–û–õ–û–¢ - (–û–ª–æ—Ç—Å–∫–∏–π —Ä-–Ω)',
                'address': '–û–ª–æ—Ç—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –¢–∏–Ω—á–ª–∏–∫ 15, –¢–¶ "Olot"',
                'phone': '1230',
                'hours': '–ü–Ω-–ü—Ç: 09:00-18:00, –°–±: 09:00-16:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/olot_savdo_tsentr/108225791029'
            },
            {
                'name': '–ü–ï–®–ö–£ - (–ü–µ—à–∫—É–Ω—Å–∫–∏–π —Ä-–Ω)',
                'address': '–ü–µ—à–∫—É–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –ú–∞—Ä–∫–∞–∑–∏–π 22, –†—ã–Ω–æ–∫ "Peshku"',
                'phone': '1230',
                'hours': '–ü–Ω-–°–±: 08:00-17:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/peshku_bazari/108225791030'
            },
            {
                'name': '–†–û–ú–ò–¢–ê–ù - (–†–æ–º–∏—Ç–∞–Ω—Å–∫–∏–π —Ä-–Ω)',
                'address': '–†–æ–º–∏—Ç–∞–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –ë–æ–≥–∏—à–∞–º–æ–ª 33, –¢–¶ "Romitan"',
                'phone': '1230',
                'hours': '–ü–Ω-–ü—Ç: 09:00-18:00, –°–±: 09:00-16:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/romitan_savdo_tsentr/108225791031'
            },
            {
                'name': '–ñ–û–ù–î–û–† - (–ñ–æ–Ω–¥–æ—Ä—Å–∫–∏–π —Ä-–Ω)',
                'address': '–ñ–æ–Ω–¥–æ—Ä—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –Ø–Ω–≥–∏—Ö–∞—ë—Ç 14, –†—ã–Ω–æ–∫ "Jondor"',
                'phone': '1230',
                'hours': '–ü–Ω-–°–±: 08:00-17:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/jondor_bazari/108225791032'
            },
            {
                'name': '–ö–û–†–ê–ö–£–õ - (–ö–∞—Ä–∞–∫—É–ª—å—Å–∫–∏–π —Ä-–Ω)',
                'address': '–ö–∞—Ä–∞–∫—É–ª—å—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –ê–º–∏—Ä–∞ –¢–µ–º—É—Ä–∞ 41, –¢–¶ "Qorako\'l"',
                'phone': '1230',
                'hours': '–ü–Ω-–ü—Ç: 09:00-18:00, –°–±: 09:00-16:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/qorakol_savdo_tsentr/108225791033'
            }
        ],
        'uz': [
            {
                'name': 'BUXORO MARKAZI - (Buxoro sh.)',
                'address': 'Bahouddin Naqshband ko\'chasi 25, "Buxoro" savdo markazi',
                'phone': '1230',
                'hours': 'Du-Ju: 09:00-19:00, Sh: 09:00-17:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/bukhara_savdo_tsentr/108225791023'
            },
            {
                'name': 'BUXORO ESKI SHAHAR - (Buxoro sh.)',
                'address': 'Xo\'ja Nurobod ko\'chasi 12, "Lyabi Xovuz" bozori',
                'phone': '1230',
                'hours': 'Du-Sh: 08:00-18:00, Ya: 08:00-16:00',
                'yandex_map': 'https://yandex.uz/maps/org/lyabi_khauz_bazari/108225791024'
            },
            {
                'name': 'GIJDUVON - (Gijduvon tumani)',
                'address': 'Gijduvon tumani, Markaziy ko\'chasi 34, "Gijduvon" savdo markazi',
                'phone': '1230',
                'hours': 'Du-Ju: 09:00-18:00, Sh: 09:00-16:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/gijduvon_savdo_tsentr/108225791025'
            },
            {
                'name': 'KOGON - (Kogon tumani)',
                'address': 'Kogon tumani, Amir Temur ko\'chasi 56, "Kogon" bozori',
                'phone': '1230',
                'hours': 'Du-Sh: 08:00-17:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/kogon_bazari/108225791026'
            },
            {
                'name': 'SHOFIRKON - (Shofirkon tumani)',
                'address': 'Shofirkon tumani, Yangiobod ko\'chasi 18, "Shofirkon" savdo markazi',
                'phone': '1230',
                'hours': 'Du-Ju: 09:00-18:00, Sh: 09:00-16:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/shofirkon_savdo_tsentr/108225791027'
            },
            {
                'name': 'QORAKO\'L - (Qorako\'l tumani)',
                'address': 'Qorako\'l tumani, Navbahor ko\'chasi 29, "Qorako\'l" bozori',
                'phone': '1230',
                'hours': 'Du-Sh: 08:00-17:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/qorakol_bazari/108225791028'
            },
            {
                'name': 'OLOT - (Olot tumani)',
                'address': 'Olot tumani, Tinchlik ko\'chasi 15, "Olot" savdo markazi',
                'phone': '1230',
                'hours': 'Du-Ju: 09:00-18:00, Sh: 09:00-16:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/olot_savdo_tsentr/108225791029'
            },
            {
                'name': 'PESHKU - (Peshku tumani)',
                'address': 'Peshku tumani, Markaziy ko\'chasi 22, "Peshku" bozori',
                'phone': '1230',
                'hours': 'Du-Sh: 08:00-17:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/peshku_bazari/108225791030'
            },
            {
                'name': 'ROMITAN - (Romitan tumani)',
                'address': 'Romitan tumani, Bogishamol ko\'chasi 33, "Romitan" savdo markazi',
                'phone': '1230',
                'hours': 'Du-Ju: 09:00-18:00, Sh: 09:00-16:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/romitan_savdo_tsentr/108225791031'
            },
            {
                'name': 'JONDOR - (Jondor tumani)',
                'address': 'Jondor tumani, Yangihayot ko\'chasi 14, "Jondor" bozori',
                'phone': '1230',
                'hours': 'Du-Sh: 08:00-17:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/jondor_bazari/108225791032'
            },
            {
                'name': 'QORAKO\'L - (Qorako\'l tumani)',
                'address': 'Qorako\'l tumani, Amir Temur ko\'chasi 41, "Qorako\'l" savdo markazi',
                'phone': '1230',
                'hours': 'Du-Ju: 09:00-18:00, Sh: 09:00-16:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/qorakol_savdo_tsentr/108225791033'
            }
        ]
    },
    'fergana': {
        'ru': [
            {
                'name': '–§–ï–†–ì–ê–ù–ê –¶–ï–ù–¢–† - (–≥.–§–µ—Ä–≥–∞–Ω–∞)',
                'address': '—É–ª. –ú—É—Å—Ç–∞–∫–∏–ª–ª–∏–∫ 45, –¢–¶ "Fargona"',
                'phone': '1230',
                'hours': '–ü–Ω-–ü—Ç: 09:00-19:00, –°–±: 09:00-17:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/fargona_savdo_tsentr/108225791034'
            },
            {
                'name': '–§–ï–†–ì–ê–ù–ê –ë–û–ó–û–† - (–≥.–§–µ—Ä–≥–∞–Ω–∞)',
                'address': '—É–ª. –ê–º–∏—Ä–∞ –¢–µ–º—É—Ä–∞ 78, –†—ã–Ω–æ–∫ "Eski bozor"',
                'phone': '1230',
                'hours': '–ü–Ω-–°–±: 08:00-18:00, –í—Å: 08:00-16:00',
                'yandex_map': 'https://yandex.uz/maps/org/eski_bozor_fargona/108225791035'
            },
            {
                'name': '–ö–£–í–ê–°–û–ô - (–≥.–ö—É–≤–∞—Å–∞–π)',
                'address': '—É–ª. –ù–∞–≤–±–∞—Ö–æ—Ä 23, –¢–¶ "Quvasoy"',
                'phone': '1230',
                'hours': '–ü–Ω-–ü—Ç: 09:00-18:00, –°–±: 09:00-16:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/quvasoy_savdo_tsentr/108225791036'
            },
            {
                'name': '–ú–ê–†–ì–ò–õ–ê–ù - (–≥.–ú–∞—Ä–≥–∏–ª–∞–Ω)',
                'address': '—É–ª. –ê—Ç–ª–∞—Å 12, –¢–¶ "Margilon"',
                'phone': '1230',
                'hours': '–ü–Ω-–ü—Ç: 09:00-19:00, –°–±: 09:00-17:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/margilon_savdo_tsentr/108225791037'
            },
            {
                'name': '–ö–û–ö–ê–ù–î - (–≥.–ö–æ–∫–∞–Ω–¥)',
                'address': '—É–ª. –•–∞–º–∑–∞ 34, –¢–¶ "Qo\'qon"',
                'phone': '1230',
                'hours': '–ü–Ω-–ü—Ç: 09:00-19:00, –°–±: 09:00-17:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/qoqon_savdo_tsentr/108225791038'
            },
            {
                'name': '–ö–£–í–ê - (–ö—É–≤–∏–Ω—Å–∫–∏–π —Ä-–Ω)',
                'address': '–ö—É–≤–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –Ø–Ω–≥–∏–æ–±–æ–¥ 56, –†—ã–Ω–æ–∫ "Quva"',
                'phone': '1230',
                'hours': '–ü–Ω-–°–±: 08:00-17:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/quva_bazari/108225791039'
            },
            {
                'name': '–†–ò–®–¢–û–ù - (–†–∏—à—Ç–∞–Ω—Å–∫–∏–π —Ä-–Ω)',
                'address': '–†–∏—à—Ç–∞–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –ú–∞—Ä–∫–∞–∑–∏–π 18, –¢–¶ "Rishton"',
                'phone': '1230',
                'hours': '–ü–Ω-–ü—Ç: 09:00-18:00, –°–±: 09:00-16:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/rishton_savdo_tsentr/108225791040'
            },
            {
                'name': '–£–ß–ö–£–ü–†–ò–ö - (–£—á–∫—É—Ä–≥–∞–Ω—Å–∫–∏–π —Ä-–Ω)',
                'address': '–£—á–∫—É—Ä–≥–∞–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –¢–∏–Ω—á–ª–∏–∫ 29, –†—ã–Ω–æ–∫ "Uchqo\'rg\'on"',
                'phone': '1230',
                'hours': '–ü–Ω-–°–±: 08:00-17:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/uchqorgon_bazari/108225791041'
            },
            {
                'name': '–ë–ï–®–ê–†–ò–ö - (–ë–µ—à–∞—Ä—ã–∫—Å–∫–∏–π —Ä-–Ω)',
                'address': '–ë–µ—à–∞—Ä—ã–∫—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –Ø–Ω–≥–∏—Ö–∞—ë—Ç 41, –¢–¶ "Beshariq"',
                'phone': '1230',
                'hours': '–ü–Ω-–ü—Ç: 09:00-18:00, –°–±: 09:00-16:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/beshariq_savdo_tsentr/108225791042'
            },
            {
                'name': '–î–ê–ù–ì–ê–†–ê - (–î–∞–Ω–≥–∞—Ä–∏–Ω—Å–∫–∏–π —Ä-–Ω)',
                'address': '–î–∞–Ω–≥–∞—Ä–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –ë–æ–≥–∏—à–∞–º–æ–ª 15, –†—ã–Ω–æ–∫ "Dangara"',
                'phone': '1230',
                'hours': '–ü–Ω-–°–±: 08:00-17:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/dangara_bazari/108225791043'
            },
            {
                'name': '–Ø–ó–Ø–í–ê–ù - (–Ø–∑—ä—è–≤–∞–Ω—Å–∫–∏–π —Ä-–Ω)',
                'address': '–Ø–∑—ä—è–≤–∞–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –ú–∞—Ä–∫–∞–∑–∏–π 22, –¢–¶ "Yozyovon"',
                'phone': '1230',
                'hours': '–ü–Ω-–ü—Ç: 09:00-18:00, –°–±: 09:00-16:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/yozyovon_savdo_tsentr/108225791044'
            }
        ],
        'uz': [
            {
                'name': 'FARG\'ONA MARKAZI - (Farg\'ona sh.)',
                'address': 'Mustaqillik ko\'chasi 45, "Farg\'ona" savdo markazi',
                'phone': '1230',
                'hours': 'Du-Ju: 09:00-19:00, Sh: 09:00-17:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/fargona_savdo_tsentr/108225791034'
            },
            {
                'name': 'FARG\'ONA BOZOR - (Farg\'ona sh.)',
                'address': 'Amir Temur ko\'chasi 78, "Eski bozor"',
                'phone': '1230',
                'hours': 'Du-Sh: 08:00-18:00, Ya: 08:00-16:00',
                'yandex_map': 'https://yandex.uz/maps/org/eski_bozor_fargona/108225791035'
            },
            {
                'name': 'QUVASOY - (Quvasoy sh.)',
                'address': 'Navbahor ko\'chasi 23, "Quvasoy" savdo markazi',
                'phone': '1230',
                'hours': 'Du-Ju: 09:00-18:00, Sh: 09:00-16:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/quvasoy_savdo_tsentr/108225791036'
            },
            {
                'name': 'MARG\'ILON - (Marg\'ilon sh.)',
                'address': 'Atlas ko\'chasi 12, "Marg\'ilon" savdo markazi',
                'phone': '1230',
                'hours': 'Du-Ju: 09:00-19:00, Sh: 09:00-17:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/margilon_savdo_tsentr/108225791037'
            },
            {
                'name': 'QO\'QON - (Qo\'qon sh.)',
                'address': 'Hamza ko\'chasi 34, "Qo\'qon" savdo markazi',
                'phone': '1230',
                'hours': 'Du-Ju: 09:00-19:00, Sh: 09:00-17:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/qoqon_savdo_tsentr/108225791038'
            },
            {
                'name': 'QUVA - (Quva tumani)',
                'address': 'Quva tumani, Yangiobod ko\'chasi 56, "Quva" bozori',
                'phone': '1230',
                'hours': 'Du-Sh: 08:00-17:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/quva_bazari/108225791039'
            },
            {
                'name': 'RISHTON - (Rishton tumani)',
                'address': 'Rishton tumani, Markaziy ko\'chasi 18, "Rishton" savdo markazi',
                'phone': '1230',
                'hours': 'Du-Ju: 09:00-18:00, Sh: 09:00-16:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/rishton_savdo_tsentr/108225791040'
            },
            {
                'name': 'UCHQO\'RG\'ON - (Uchqo\'rg\'on tumani)',
                'address': 'Uchqo\'rg\'on tumani, Tinchlik ko\'chasi 29, "Uchqo\'rg\'on" bozori',
                'phone': '1230',
                'hours': 'Du-Sh: 08:00-17:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/uchqorgon_bazari/108225791041'
            },
            {
                'name': 'BESHARIQ - (Beshariq tumani)',
                'address': 'Beshariq tumani, Yangihayot ko\'chasi 41, "Beshariq" savdo markazi',
                'phone': '1230',
                'hours': 'Du-Ju: 09:00-18:00, Sh: 09:00-16:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/beshariq_savdo_tsentr/108225791042'
            },
            {
                'name': 'DANG\'ARA - (Dang\'ara tumani)',
                'address': 'Dang\'ara tumani, Bogishamol ko\'chasi 15, "Dang\'ara" bozori',
                'phone': '1230',
                'hours': 'Du-Sh: 08:00-17:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/dangara_bazari/108225791043'
            },
            {
                'name': 'YOZYOVON - (Yozyovon tumani)',
                'address': 'Yozyovon tumani, Markaziy ko\'chasi 22, "Yozyovon" savdo markazi',
                'phone': '1230',
                'hours': 'Du-Ju: 09:00-18:00, Sh: 09:00-16:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/yozyovon_savdo_tsentr/108225791044'
            }
        ]
    },
    'jizzakh': {
        'ru': [
            {
                'name': '–î–ñ–ò–ó–ê–ö –¶–ï–ù–¢–† - (–≥.–î–∂–∏–∑–∞–∫)',
                'address': '—É–ª. –ê–º–∏—Ä–∞ –¢–µ–º—É—Ä–∞ 45, –¢–¶ "Jizzax"',
                'phone': '1230',
                'hours': '–ü–Ω-–ü—Ç: 09:00-19:00, –°–±: 09:00-17:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/jizzax_savdo_tsentr/108225791045'
            },
            {
                'name': '–î–ñ–ò–ó–ê–ö –ë–û–ó–û–† - (–≥.–î–∂–∏–∑–∞–∫)',
                'address': '—É–ª. –ù–∞–≤–æ–∏ 78, –†—ã–Ω–æ–∫ "Markaziy bozor"',
                'phone': '1230',
                'hours': '–ü–Ω-–°–±: 08:00-18:00, –í—Å: 08:00-16:00',
                'yandex_map': 'https://yandex.uz/maps/org/markaziy_bozor_jizzax/108225791046'
            },
            {
                'name': '–ì–ê–õ–õ–ê–û–†–û–õ - (–ì–∞–ª–ª–∞–æ—Ä–æ–ª—å—Å–∫–∏–π —Ä-–Ω)',
                'address': '–ì–∞–ª–ª–∞–æ—Ä–æ–ª—å—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –Ø–Ω–≥–∏–æ–±–æ–¥ 23, –¢–¶ "Gallaorol"',
                'phone': '1230',
                'hours': '–ü–Ω-–ü—Ç: 09:00-18:00, –°–±: 09:00-16:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/gallaorol_savdo_tsentr/108225791047'
            },
            {
                'name': '–ü–ê–•–¢–ê–ö–û–† - (–ü–∞—Ö—Ç–∞–∫–æ—Ä—Å–∫–∏–π —Ä-–Ω)',
                'address': '–ü–∞—Ö—Ç–∞–∫–æ—Ä—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –ú–∞—Ä–∫–∞–∑–∏–π 12, –¢–¶ "Paxtakor"',
                'phone': '1230',
                'hours': '–ü–Ω-–ü—Ç: 09:00-18:00, –°–±: 09:00-16:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/paxtakor_savdo_tsentr/108225791048'
            },
            {
                'name': '–î–£–°–¢–õ–ò–ö - (–î—É—Å—Ç–ª–∏–∫—Å–∫–∏–π —Ä-–Ω)',
                'address': '–î—É—Å—Ç–ª–∏–∫—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –ë–æ–≥–∏—à–∞–º–æ–ª 34, –†—ã–Ω–æ–∫ "Do\'stlik"',
                'phone': '1230',
                'hours': '–ü–Ω-–°–±: 08:00-17:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/dostlik_bazari/108225791049'
            },
            {
                'name': '–§–ê–†–ò–® - (–§–∞—Ä–∏—à—Å–∫–∏–π —Ä-–Ω)',
                'address': '–§–∞—Ä–∏—à—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –Ø–Ω–≥–∏—Ö–∞—ë—Ç 56, –¢–¶ "Farish"',
                'phone': '1230',
                'hours': '–ü–Ω-–ü—Ç: 09:00-18:00, –°–±: 09:00-16:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/farish_savdo_tsentr/108225791050'
            },
            {
                'name': '–ó–ê–§–ê–†–û–ë–û–î - (–ó–∞—Ñ–∞—Ä–∞–±–∞–¥—Å–∫–∏–π —Ä-–Ω)',
                'address': '–ó–∞—Ñ–∞—Ä–∞–±–∞–¥—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –¢–∏–Ω—á–ª–∏–∫ 18, –†—ã–Ω–æ–∫ "Zafarobod"',
                'phone': '1230',
                'hours': '–ü–Ω-–°–±: 08:00-17:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/zafarobod_bazari/108225791051'
            },
            {
                'name': '–ó–ê–†–ë–î–û–† - (–ó–∞—Ä–±–¥–∞—Ä—Å–∫–∏–π —Ä-–Ω)',
                'address': '–ó–∞—Ä–±–¥–∞—Ä—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –ù–∞–≤–±–∞—Ö–æ—Ä 29, –¢–¶ "Zarbdor"',
                'phone': '1230',
                'hours': '–ü–Ω-–ü—Ç: 09:00-18:00, –°–±: 09:00-16:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/zarbdor_savdo_tsentr/108225791052'
            },
            {
                'name': '–ú–ò–†–ó–ê–ß–£–õ–¨ - (–ú–∏—Ä–∑–∞—á—É–ª—å—Å–∫–∏–π —Ä-–Ω)',
                'address': '–ú–∏—Ä–∑–∞—á—É–ª—å—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –ú–∞—Ä–∫–∞–∑–∏–π 41, –†—ã–Ω–æ–∫ "Mirzacho\'l"',
                'phone': '1230',
                'hours': '–ü–Ω-–°–±: 08:00-17:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/mirzachol_bazari/108225791053'
            },
            {
                'name': '–ê–†–ù–ê–°–û–ô - (–ê—Ä–Ω–∞—Å–∞–π—Å–∫–∏–π —Ä-–Ω)',
                'address': '–ê—Ä–Ω–∞—Å–∞–π—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –Ø–Ω–≥–∏–æ–±–æ–¥ 15, –¢–¶ "Arnasoy"',
                'phone': '1230',
                'hours': '–ü–Ω-–ü—Ç: 09:00-18:00, –°–±: 09:00-16:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/arnasoy_savdo_tsentr/108225791054'
            },
            {
                'name': '–ë–ê–•–ú–ê–õ - (–ë–∞—Ö–º–∞–ª—å—Å–∫–∏–π —Ä-–Ω)',
                'address': '–ë–∞—Ö–º–∞–ª—å—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –ë–æ–≥–∏—à–∞–º–æ–ª 22, –†—ã–Ω–æ–∫ "Baxmal"',
                'phone': '1230',
                'hours': '–ü–Ω-–°–±: 08:00-17:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/baxmal_bazari/108225791055'
            }
        ],
        'uz': [
            {
                'name': 'JIZZAX MARKAZI - (Jizzax sh.)',
                'address': 'Amir Temur ko\'chasi 45, "Jizzax" savdo markazi',
                'phone': '1230',
                'hours': 'Du-Ju: 09:00-19:00, Sh: 09:00-17:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/jizzax_savdo_tsentr/108225791045'
            },
            {
                'name': 'JIZZAX BOZOR - (Jizzax sh.)',
                'address': 'Navoiy ko\'chasi 78, "Markaziy bozor"',
                'phone': '1230',
                'hours': 'Du-Sh: 08:00-18:00, Ya: 08:00-16:00',
                'yandex_map': 'https://yandex.uz/maps/org/markaziy_bozor_jizzax/108225791046'
            },
            {
                'name': 'GALLAOROL - (Gallaorol tumani)',
                'address': 'Gallaorol tumani, Yangiobod ko\'chasi 23, "Gallaorol" savdo markazi',
                'phone': '1230',
                'hours': 'Du-Ju: 09:00-18:00, Sh: 09:00-16:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/gallaorol_savdo_tsentr/108225791047'
            },
            {
                'name': 'PAXTAKOR - (Paxtakor tumani)',
                'address': 'Paxtakor tumani, Markaziy ko\'chasi 12, "Paxtakor" savdo markazi',
                'phone': '1230',
                'hours': 'Du-Ju: 09:00-18:00, Sh: 09:00-16:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/paxtakor_savdo_tsentr/108225791048'
            },
            {
                'name': 'DO\'STLIK - (Do\'stlik tumani)',
                'address': 'Do\'stlik tumani, Bogishamol ko\'chasi 34, "Do\'stlik" bozori',
                'phone': '1230',
                'hours': 'Du-Sh: 08:00-17:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/dostlik_bazari/108225791049'
            },
            {
                'name': 'FARISH - (Farish tumani)',
                'address': 'Farish tumani, Yangihayot ko\'chasi 56, "Farish" savdo markazi',
                'phone': '1230',
                'hours': 'Du-Ju: 09:00-18:00, Sh: 09:00-16:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/farish_savdo_tsentr/108225791050'
            },
            {
                'name': 'ZAFAROBOD - (Zafarobod tumani)',
                'address': 'Zafarobod tumani, Tinchlik ko\'chasi 18, "Zafarobod" bozori',
                'phone': '1230',
                'hours': 'Du-Sh: 08:00-17:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/zafarobod_bazari/108225791051'
            },
            {
                'name': 'ZARBDOR - (Zarbdor tumani)',
                'address': 'Zarbdor tumani, Navbahor ko\'chasi 29, "Zarbdor" savdo markazi',
                'phone': '1230',
                'hours': 'Du-Ju: 09:00-18:00, Sh: 09:00-16:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/zarbdor_savdo_tsentr/108225791052'
            },
            {
                'name': 'MIRZACHO\'L - (Mirzacho\'l tumani)',
                'address': 'Mirzacho\'l tumani, Markaziy ko\'chasi 41, "Mirzacho\'l" bozori',
                'phone': '1230',
                'hours': 'Du-Sh: 08:00-17:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/mirzachol_bazari/108225791053'
            },
            {
                'name': 'ARNASOY - (Arnasoy tumani)',
                'address': 'Arnasoy tumani, Yangiobod ko\'chasi 15, "Arnasoy" savdo markazi',
                'phone': '1230',
                'hours': 'Du-Ju: 09:00-18:00, Sh: 09:00-16:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/arnasoy_savdo_tsentr/108225791054'
            },
            {
                'name': 'BAXMAL - (Baxmal tumani)',
                'address': 'Baxmal tumani, Bogishamol ko\'chasi 22, "Baxmal" bozori',
                'phone': '1230',
                'hours': 'Du-Sh: 08:00-17:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/baxmal_bazari/108225791055'
            }
        ]
    },
    'khorezm': {
        'ru': [
            {
                'name': '–£–†–ì–ï–ù–ß –¶–ï–ù–¢–† - (–≥.–£—Ä–≥–µ–Ω—á)',
                'address': '—É–ª. –ê–ª—å-–•–æ—Ä–µ–∑–º–∏ 45, –¢–¶ "Urganch"',
                'phone': '1230',
                'hours': '–ü–Ω-–ü—Ç: 09:00-19:00, –°–±: 09:00-17:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/urganch_savdo_tsentr/108225791056'
            },
            {
                'name': '–£–†–ì–ï–ù–ß –ë–û–ó–û–† - (–≥.–£—Ä–≥–µ–Ω—á)',
                'address': '—É–ª. –ë–µ—Ä—É–Ω–∏ 78, –†—ã–Ω–æ–∫ "Markaziy bozor"',
                'phone': '1230',
                'hours': '–ü–Ω-–°–±: 08:00-18:00, –í—Å: 08:00-16:00',
                'yandex_map': 'https://yandex.uz/maps/org/markaziy_bozor_urganch/108225791057'
            },
            {
                'name': '–•–ò–í–ê - (–≥.–•–∏–≤–∞)',
                'address': '—É–ª. –ü–∞—Ö–ª–∞–≤–æ–Ω–∞ –ú–∞—Ö–º—É–¥–∞ 23, –¢–¶ "Xiva"',
                'phone': '1230',
                'hours': '–ü–Ω-–ü—Ç: 09:00-18:00, –°–±: 09:00-16:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/xiva_savdo_tsentr/108225791058'
            },
            {
                'name': '–ü–ò–¢–ù–ê–ö - (–ü–∏—Ç–Ω–∞–∫—Å–∫–∏–π —Ä-–Ω)',
                'address': '–ü–∏—Ç–Ω–∞–∫—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –ú–∞—Ä–∫–∞–∑–∏–π 12, –¢–¶ "Pitnak"',
                'phone': '1230',
                'hours': '–ü–Ω-–ü—Ç: 09:00-18:00, –°–±: 09:00-16:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/pitnak_savdo_tsentr/108225791059'
            },
            {
                'name': '–ì–£–†–õ–ê–ù - (–ì—É—Ä–ª–µ–Ω—Å–∫–∏–π —Ä-–Ω)',
                'address': '–ì—É—Ä–ª–µ–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –ë–æ–≥–∏—à–∞–º–æ–ª 34, –†—ã–Ω–æ–∫ "Gurlan"',
                'phone': '1230',
                'hours': '–ü–Ω-–°–±: 08:00-17:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/gurlan_bazari/108225791060'
            },
            {
                'name': '–•–û–ù–ö–ê - (–•–æ–Ω–∫–∏–Ω—Å–∫–∏–π —Ä-–Ω)',
                'address': '–•–æ–Ω–∫–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –Ø–Ω–≥–∏—Ö–∞—ë—Ç 56, –¢–¶ "Xonqa"',
                'phone': '1230',
                'hours': '–ü–Ω-–ü—Ç: 09:00-18:00, –°–±: 09:00-16:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/xonqa_savdo_tsentr/108225791061'
            },
            {
                'name': '–•–ê–ó–û–†–ê–°–ü - (–•–∞–∑–∞—Ä–∞—Å–ø—Å–∫–∏–π —Ä-–Ω)',
                'address': '–•–∞–∑–∞—Ä–∞—Å–ø—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –¢–∏–Ω—á–ª–∏–∫ 18, –†—ã–Ω–æ–∫ "Xazorasp"',
                'phone': '1230',
                'hours': '–ü–Ω-–°–±: 08:00-17:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/xazorasp_bazari/108225791062'
            },
            {
                'name': '–®–ê–í–ê–¢ - (–®–∞–≤–∞—Ç—Å–∫–∏–π —Ä-–Ω)',
                'address': '–®–∞–≤–∞—Ç—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –ù–∞–≤–±–∞—Ö–æ—Ä 29, –¢–¶ "Shovot"',
                'phone': '1230',
                'hours': '–ü–Ω-–ü—Ç: 09:00-18:00, –°–±: 09:00-16:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/shavat_savdo_tsentr/108225791063'
            },
            {
                'name': '–Ø–ù–ì–ò–ê–†–´–ö - (–Ø–Ω–≥–∏–∞—Ä—ã–∫—Å–∫–∏–π —Ä-–Ω)',
                'address': '–Ø–Ω–≥–∏–∞—Ä—ã–∫—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –ú–∞—Ä–∫–∞–∑–∏–π 41, –†—ã–Ω–æ–∫ "Yangiarik"',
                'phone': '1230',
                'hours': '–ü–Ω-–°–±: 08:00-17:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/yangiarik_bazari/108225791064'
            },
            {
                'name': '–Ø–ù–ì–ò–ë–û–ó–û–† - (–Ø–Ω–≥–∏–±–∞–∑–∞—Ä—Å–∫–∏–π —Ä-–Ω)',
                'address': '–Ø–Ω–≥–∏–±–∞–∑–∞—Ä—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –Ø–Ω–≥–∏–æ–±–æ–¥ 15, –¢–¶ "Yangibozor"',
                'phone': '1230',
                'hours': '–ü–Ω-–ü—Ç: 09:00-18:00, –°–±: 09:00-16:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/yangibozor_savdo_tsentr/108225791065'
            },
            {
                'name': '–ë–û–ì–û–¢ - (–ë–æ–≥–æ—Ç—Å–∫–∏–π —Ä-–Ω)',
                'address': '–ë–æ–≥–æ—Ç—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –ë–æ–≥–∏—à–∞–º–æ–ª 22, –†—ã–Ω–æ–∫ "Bogot"',
                'phone': '1230',
                'hours': '–ü–Ω-–°–±: 08:00-17:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/bogot_bazari/108225791066'
            }
        ],
        'uz': [
            {
                'name': 'URGANCH MARKAZI - (Urganch sh.)',
                'address': 'Al-Xorazmiy ko\'chasi 45, "Urganch" savdo markazi',
                'phone': '1230',
                'hours': 'Du-Ju: 09:00-19:00, Sh: 09:00-17:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/urganch_savdo_tsentr/108225791056'
            },
            {
                'name': 'URGANCH BOZOR - (Urganch sh.)',
                'address': 'Beruniy ko\'chasi 78, "Markaziy bozor"',
                'phone': '1230',
                'hours': 'Du-Sh: 08:00-18:00, Ya: 08:00-16:00',
                'yandex_map': 'https://yandex.uz/maps/org/markaziy_bozor_urganch/108225791057'
            },
            {
                'name': 'XIVA - (Xiva sh.)',
                'address': 'Pahlavon Mahmud ko\'chasi 23, "Xiva" savdo markazi',
                'phone': '1230',
                'hours': 'Du-Ju: 09:00-18:00, Sh: 09:00-16:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/xiva_savdo_tsentr/108225791058'
            },
            {
                'name': 'PITNAQ - (Pitnaq tumani)',
                'address': 'Pitnaq tumani, Markaziy ko\'chasi 12, "Pitnaq" savdo markazi',
                'phone': '1230',
                'hours': 'Du-Ju: 09:00-18:00, Sh: 09:00-16:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/pitnak_savdo_tsentr/108225791059'
            },
            {
                'name': 'GURLAN - (Gurlan tumani)',
                'address': 'Gurlan tumani, Bogishamol ko\'chasi 34, "Gurlan" bozori',
                'phone': '1230',
                'hours': 'Du-Sh: 08:00-17:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/gurlan_bazari/108225791060'
            },
            {
                'name': 'XONQA - (Xonqa tumani)',
                'address': 'Xonqa tumani, Yangihayot ko\'chasi 56, "Xonqa" savdo markazi',
                'phone': '1230',
                'hours': 'Du-Ju: 09:00-18:00, Sh: 09:00-16:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/xonqa_savdo_tsentr/108225791061'
            },
            {
                'name': 'XAZORASP - (Xazorasp tumani)',
                'address': 'Xazorasp tumani, Tinchlik ko\'chasi 18, "Xazorasp" bozori',
                'phone': '1230',
                'hours': 'Du-Sh: 08:00-17:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/xazorasp_bazari/108225791062'
            },
            {
                'name': 'SHOVOT - (Shovot tumani)',
                'address': 'Shovot tumani, Navbahor ko\'chasi 29, "Shovot" savdo markazi',
                'phone': '1230',
                'hours': 'Du-Ju: 09:00-18:00, Sh: 09:00-16:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/shavat_savdo_tsentr/108225791063'
            },
            {
                'name': 'YANGIARIK - (Yangiarik tumani)',
                'address': 'Yangiarik tumani, Markaziy ko\'chasi 41, "Yangiarik" bozori',
                'phone': '1230',
                'hours': 'Du-Sh: 08:00-17:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/yangiarik_bazari/108225791064'
            },
            {
                'name': 'YANGIBOZOR - (Yangibozor tumani)',
                'address': 'Yangibozor tumani, Yangiobod ko\'chasi 15, "Yangibozor" savdo markazi',
                'phone': '1230',
                'hours': 'Du-Ju: 09:00-18:00, Sh: 09:00-16:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/yangibozor_savdo_tsentr/108225791065'
            },
            {
                'name': 'BOGOT - (Bogot tumani)',
                'address': 'Bogot tumani, Bogishamol ko\'chasi 22, "Bogot" bozori',
                'phone': '1230',
                'hours': 'Du-Sh: 08:00-17:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/bogot_bazari/108225791066'
            }
        ]
    },
    'namangan': {
        'ru': [
            {
                'name': '–ù–ê–ú–ê–ù–ì–ê–ù –¶–ï–ù–¢–† - (–≥.–ù–∞–º–∞–Ω–≥–∞–Ω)',
                'address': '—É–ª. –ê–º–∏—Ä–∞ –¢–µ–º—É—Ä–∞ 45, –¢–¶ "Namangan"',
                'phone': '1230',
                'hours': '–ü–Ω-–ü—Ç: 09:00-19:00, –°–±: 09:00-17:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/namangan_savdo_tsentr/108225791067'
            },
            {
                'name': '–ù–ê–ú–ê–ù–ì–ê–ù –ë–û–ó–û–† - (–≥.–ù–∞–º–∞–Ω–≥–∞–Ω)',
                'address': '—É–ª. –ù–∞–≤–æ–∏ 78, –†—ã–Ω–æ–∫ "Eski bozor"',
                'phone': '1230',
                'hours': '–ü–Ω-–°–±: 08:00-18:00, –í—Å: 08:00-16:00',
                'yandex_map': 'https://yandex.uz/maps/org/eski_bozor_namangan/108225791068'
            },
            {
                'name': '–ö–û–°–û–ù–°–û–ô - (–ö–∞—Å–∞–Ω—Å–∞–π—Å–∫–∏–π —Ä-–Ω)',
                'address': '–ö–∞—Å–∞–Ω—Å–∞–π—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –Ø–Ω–≥–∏–æ–±–æ–¥ 23, –¢–¶ "Kosonsoy"',
                'phone': '1230',
                'hours': '–ü–Ω-–ü—Ç: 09:00-18:00, –°–±: 09:00-16:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/kosonsoy_savdo_tsentr/108225791069'
            },
            {
                'name': '–ß–£–°–¢ - (–ß—É—Å—Ç—Å–∫–∏–π —Ä-–Ω)',
                'address': '–ß—É—Å—Ç—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –ú–∞—Ä–∫–∞–∑–∏–π 12, –¢–¶ "Chust"',
                'phone': '1230',
                'hours': '–ü–Ω-–ü—Ç: 09:00-18:00, –°–±: 09:00-16:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/chust_savdo_tsentr/108225791070'
            },
            {
                'name': '–ü–û–ü - (–ü–∞–ø—Å–∫–∏–π —Ä-–Ω)',
                'address': '–ü–∞–ø—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –ë–æ–≥–∏—à–∞–º–æ–ª 34, –†—ã–Ω–æ–∫ "Pop"',
                'phone': '1230',
                'hours': '–ü–Ω-–°–±: 08:00-17:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/pop_bazari/108225791071'
            },
            {
                'name': '–£–ô–ß–ò - (–£–π—á–∏–Ω—Å–∫–∏–π —Ä-–Ω)',
                'address': '–£–π—á–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –Ø–Ω–≥–∏—Ö–∞—ë—Ç 56, –¢–¶ "Uychi"',
                'phone': '1230',
                'hours': '–ü–Ω-–ü—Ç: 09:00-18:00, –°–±: 09:00-16:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/uychi_savdo_tsentr/108225791072'
            },
            {
                'name': '–£–ß–ö–£–†–ì–û–ù - (–£—á–∫—É—Ä–≥–∞–Ω—Å–∫–∏–π —Ä-–Ω)',
                'address': '–£—á–∫—É—Ä–≥–∞–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –¢–∏–Ω—á–ª–∏–∫ 18, –†—ã–Ω–æ–∫ "Uchqo\'rg\'on"',
                'phone': '1230',
                'hours': '–ü–Ω-–°–±: 08:00-17:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/uchqorgon_bazari/108225791073'
            },
            {
                'name': '–ú–ò–ù–ì–ë–£–õ–û–ö - (–ú–∏–Ω–≥–±—É–ª–∞–∫—Å–∫–∏–π —Ä-–Ω)',
                'address': '–ú–∏–Ω–≥–±—É–ª–∞–∫—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –ù–∞–≤–±–∞—Ö–æ—Ä 29, –¢–¶ "Mingbuloq"',
                'phone': '1230',
                'hours': '–ü–Ω-–ü—Ç: 09:00-18:00, –°–±: 09:00-16:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/mingbuloq_savdo_tsentr/108225791074'
            },
            {
                'name': '–Ø–ù–ì–ò–ö–£–†–ì–û–ù - (–Ø–Ω–≥–∏–∫—É—Ä–≥–∞–Ω—Å–∫–∏–π —Ä-–Ω)',
                'address': '–Ø–Ω–≥–∏–∫—É—Ä–≥–∞–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –ú–∞—Ä–∫–∞–∑–∏–π 41, –†—ã–Ω–æ–∫ "Yangiqo\'rg\'on"',
                'phone': '1230',
                'hours': '–ü–Ω-–°–±: 08:00-17:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/yangiqorgon_bazari/108225791075'
            },
            {
                'name': '–ù–û–†–ò–ù - (–ù–æ—Ä–∏–Ω—Å–∫–∏–π —Ä-–Ω)',
                'address': '–ù–æ—Ä–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –Ø–Ω–≥–∏–æ–±–æ–¥ 15, –¢–¶ "Norin"',
                'phone': '1230',
                'hours': '–ü–Ω-–ü—Ç: 09:00-18:00, –°–±: 09:00-16:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/norin_savdo_tsentr/108225791076'
            },
            {
                'name': '–ß–û–†–¢–û–ö - (–ß–∞—Ä—Ç–∞–∫—Å–∫–∏–π —Ä-–Ω)',
                'address': '–ß–∞—Ä—Ç–∞–∫—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –ë–æ–≥–∏—à–∞–º–æ–ª 22, –†—ã–Ω–æ–∫ "Chortoq"',
                'phone': '1230',
                'hours': '–ü–Ω-–°–±: 08:00-17:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/chortoq_bazari/108225791077'
            }
        ],
        'uz': [
            {
                'name': 'NAMANGAN MARKAZI - (Namangan sh.)',
                'address': 'Amir Temur ko\'chasi 45, "Namangan" savdo markazi',
                'phone': '1230',
                'hours': 'Du-Ju: 09:00-19:00, Sh: 09:00-17:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/namangan_savdo_tsentr/108225791067'
            },
            {
                'name': 'NAMANGAN BOZOR - (Namangan sh.)',
                'address': 'Navoiy ko\'chasi 78, "Eski bozor"',
                'phone': '1230',
                'hours': 'Du-Sh: 08:00-18:00, Ya: 08:00-16:00',
                'yandex_map': 'https://yandex.uz/maps/org/eski_bozor_namangan/108225791068'
            },
            {
                'name': 'KOSONSOY - (Kosonsoy tumani)',
                'address': 'Kosonsoy tumani, Yangiobod ko\'chasi 23, "Kosonsoy" savdo markazi',
                'phone': '1230',
                'hours': 'Du-Ju: 09:00-18:00, Sh: 09:00-16:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/kosonsoy_savdo_tsentr/108225791069'
            },
            {
                'name': 'CHUST - (Chust tumani)',
                'address': 'Chust tumani, Markaziy ko\'chasi 12, "Chust" savdo markazi',
                'phone': '1230',
                'hours': 'Du-Ju: 09:00-18:00, Sh: 09:00-16:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/chust_savdo_tsentr/108225791070'
            },
            {
                'name': 'POP - (Pop tumani)',
                'address': 'Pop tumani, Bogishamol ko\'chasi 34, "Pop" bozori',
                'phone': '1230',
                'hours': 'Du-Sh: 08:00-17:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/pop_bazari/108225791071'
            },
            {
                'name': 'UYCHI - (Uychi tumani)',
                'address': 'Uychi tumani, Yangihayot ko\'chasi 56, "Uychi" savdo markazi',
                'phone': '1230',
                'hours': 'Du-Ju: 09:00-18:00, Sh: 09:00-16:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/uychi_savdo_tsentr/108225791072'
            },
            {
                'name': 'UCHQO\'RG\'ON - (Uchqo\'rg\'on tumani)',
                'address': 'Uchqo\'rg\'on tumani, Tinchlik ko\'chasi 18, "Uchqo\'rg\'on" bozori',
                'phone': '1230',
                'hours': 'Du-Sh: 08:00-17:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/uchqorgon_bazari/108225791073'
            },
            {
                'name': 'MINGBULOQ - (Mingbuloq tumani)',
                'address': 'Mingbuloq tumani, Navbahor ko\'chasi 29, "Mingbuloq" savdo markazi',
                'phone': '1230',
                'hours': 'Du-Ju: 09:00-18:00, Sh: 09:00-16:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/mingbuloq_savdo_tsentr/108225791074'
            },
            {
                'name': 'YANGIQO\'RG\'ON - (Yangiqo\'rg\'on tumani)',
                'address': 'Yangiqo\'rg\'on tumani, Markaziy ko\'chasi 41, "Yangiqo\'rg\'on" bozori',
                'phone': '1230',
                'hours': 'Du-Sh: 08:00-17:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/yangiqorgon_bazari/108225791075'
            },
            {
                'name': 'NORIN - (Norin tumani)',
                'address': 'Norin tumani, Yangiobod ko\'chasi 15, "Norin" savdo markazi',
                'phone': '1230',
                'hours': 'Du-Ju: 09:00-18:00, Sh: 09:00-16:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/norin_savdo_tsentr/108225791076'
            },
            {
                'name': 'CHORTOQ - (Chortoq tumani)',
                'address': 'Chortoq tumani, Bogishamol ko\'chasi 22, "Chortoq" bozori',
                'phone': '1230',
                'hours': 'Du-Sh: 08:00-17:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/chortoq_bazari/108225791077'
            }
        ]
    },
    'navoi': {
        'ru': [
            {
                'name': '–ù–ê–í–û–ò –¶–ï–ù–¢–† - (–≥.–ù–∞–≤–æ–∏)',
                'address': '—É–ª. –ê–ª–∏—à–µ—Ä–∞ –ù–∞–≤–æ–∏ 45, –¢–¶ "Navoiy"',
                'phone': '1230',
                'hours': '–ü–Ω-–ü—Ç: 09:00-19:00, –°–±: 09:00-17:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/navoiy_savdo_tsentr/108225791078'
            },
            {
                'name': '–ù–ê–í–û–ò –ë–û–ó–û–† - (–≥.–ù–∞–≤–æ–∏)',
                'address': '—É–ª. –ê–º–∏—Ä–∞ –¢–µ–º—É—Ä–∞ 78, –†—ã–Ω–æ–∫ "Markaziy bozor"',
                'phone': '1230',
                'hours': '–ü–Ω-–°–±: 08:00-18:00, –í—Å: 08:00-16:00',
                'yandex_map': 'https://yandex.uz/maps/org/markaziy_bozor_navoi/108225791079'
            },
            {
                'name': '–ó–ê–†–ê–§–®–ê–ù - (–≥.–ó–∞—Ä–∞—Ñ—à–∞–Ω)',
                'address': '—É–ª. –Ø–Ω–≥–∏–æ–±–æ–¥ 23, –¢–¶ "Zarafshon"',
                'phone': '1230',
                'hours': '–ü–Ω-–ü—Ç: 09:00-18:00, –°–±: 09:00-16:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/zarafshon_savdo_tsentr/108225791080'
            },
            {
                'name': '–£–ß–ö–£–î–£–ö - (–£—á–∫—É–¥—É–∫—Å–∫–∏–π —Ä-–Ω)',
                'address': '–£—á–∫—É–¥—É–∫—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –ú–∞—Ä–∫–∞–∑–∏–π 12, –¢–¶ "Uchquduq"',
                'phone': '1230',
                'hours': '–ü–Ω-–ü—Ç: 09:00-18:00, –°–±: 09:00-16:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/uchquduq_savdo_tsentr/108225791081'
            },
            {
                'name': '–ö–ê–†–ú–ê–ù–ê - (–ö–∞—Ä–º–∞–Ω—Å–∫–∏–π —Ä-–Ω)',
                'address': '–ö–∞—Ä–º–∞–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –ë–æ–≥–∏—à–∞–º–æ–ª 34, –†—ã–Ω–æ–∫ "Qarmana"',
                'phone': '1230',
                'hours': '–ü–Ω-–°–±: 08:00-17:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/qarmana_bazari/108225791082'
            },
            {
                'name': '–ö–´–ó–´–õ–¢–ï–ü–ê - (–ö—ã–∑—ã–ª—Ç–µ–ø–∏–Ω—Å–∫–∏–π —Ä-–Ω)',
                'address': '–ö—ã–∑—ã–ª—Ç–µ–ø–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –Ø–Ω–≥–∏—Ö–∞—ë—Ç 56, –¢–¶ "Qiziltepa"',
                'phone': '1230',
                'hours': '–ü–Ω-–ü—Ç: 09:00-18:00, –°–±: 09:00-16:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/qiziltepa_savdo_tsentr/108225791083'
            },
            {
                'name': '–ù–û–†–û–¢–ê–ù - (–ù—É—Ä–∞—Ç–∏–Ω—Å–∫–∏–π —Ä-–Ω)',
                'address': '–ù—É—Ä–∞—Ç–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –¢–∏–Ω—á–ª–∏–∫ 18, –†—ã–Ω–æ–∫ "Nurota"',
                'phone': '1230',
                'hours': '–ü–Ω-–°–±: 08:00-17:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/nurota_bazari/108225791084'
            },
            {
                'name': '–•–ê–¢–´–†–ß–ò - (–•–∞—Ç—ã—Ä—á–∏–Ω—Å–∫–∏–π —Ä-–Ω)',
                'address': '–•–∞—Ç—ã—Ä—á–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –ù–∞–≤–±–∞—Ö–æ—Ä 29, –¢–¶ "Xatirchi"',
                'phone': '1230',
                'hours': '–ü–Ω-–ü—Ç: 09:00-18:00, –°–±: 09:00-16:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/xatirchi_savdo_tsentr/108225791085'
            },
            {
                'name': '–¢–û–ú–î–ò - (–¢–æ–º–¥—ã–±—É–ª–∞–∫—Å–∫–∏–π —Ä-–Ω)',
                'address': '–¢–æ–º–¥—ã–±—É–ª–∞–∫—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –ú–∞—Ä–∫–∞–∑–∏–π 41, –†—ã–Ω–æ–∫ "Tomdi"',
                'phone': '1230',
                'hours': '–ü–Ω-–°–±: 08:00-17:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/tomdi_bazari/108225791086'
            },
            {
                'name': '–ö–û–ù–ò–ú–ï–• - (–ö–æ–Ω–∏–º–µ—Ö—Å–∫–∏–π —Ä-–Ω)',
                'address': '–ö–æ–Ω–∏–º–µ—Ö—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –Ø–Ω–≥–∏–æ–±–æ–¥ 15, –¢–¶ "Konimex"',
                'phone': '1230',
                'hours': '–ü–Ω-–ü—Ç: 09:00-18:00, –°–±: 09:00-16:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/konimex_savdo_tsentr/108225791087'
            },
            {
                'name': '–ù–ê–í–ë–ê–•–û–† - (–ù–∞–≤–±–∞—Ö–æ—Ä—Å–∫–∏–π —Ä-–Ω)',
                'address': '–ù–∞–≤–±–∞—Ö–æ—Ä—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –ë–æ–≥–∏—à–∞–º–æ–ª 22, –†—ã–Ω–æ–∫ "Navbahor"',
                'phone': '1230',
                'hours': '–ü–Ω-–°–±: 08:00-17:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/navbahor_bazari/108225791088'
            }
        ],
        'uz': [
            {
                'name': 'NAVOIY MARKAZI - (Navoiy sh.)',
                'address': 'Alisher Navoiy ko\'chasi 45, "Navoiy" savdo markazi',
                'phone': '1230',
                'hours': 'Du-Ju: 09:00-19:00, Sh: 09:00-17:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/navoiy_savdo_tsentr/108225791078'
            },
            {
                'name': 'NAVOIY BOZOR - (Navoiy sh.)',
                'address': 'Amir Temur ko\'chasi 78, "Markaziy bozor"',
                'phone': '1230',
                'hours': 'Du-Sh: 08:00-18:00, Ya: 08:00-16:00',
                'yandex_map': 'https://yandex.uz/maps/org/markaziy_bozor_navoi/108225791079'
            },
            {
                'name': 'ZARAFSHON - (Zarafshon sh.)',
                'address': 'Yangiobod ko\'chasi 23, "Zarafshon" savdo markazi',
                'phone': '1230',
                'hours': 'Du-Ju: 09:00-18:00, Sh: 09:00-16:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/zarafshon_savdo_tsentr/108225791080'
            },
            {
                'name': 'UCHQUDUQ - (Uchquduq tumani)',
                'address': 'Uchquduq tumani, Markaziy ko\'chasi 12, "Uchquduq" savdo markazi',
                'phone': '1230',
                'hours': 'Du-Ju: 09:00-18:00, Sh: 09:00-16:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/uchquduq_savdo_tsentr/108225791081'
            },
            {
                'name': 'QARMANA - (Qarmana tumani)',
                'address': 'Qarmana tumani, Bogishamol ko\'chasi 34, "Qarmana" bozori',
                'phone': '1230',
                'hours': 'Du-Sh: 08:00-17:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/qarmana_bazari/108225791082'
            },
            {
                'name': 'QIZILTEPA - (Qiziltepa tumani)',
                'address': 'Qiziltepa tumani, Yangihayot ko\'chasi 56, "Qiziltepa" savdo markazi',
                'phone': '1230',
                'hours': 'Du-Ju: 09:00-18:00, Sh: 09:00-16:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/qiziltepa_savdo_tsentr/108225791083'
            },
            {
                'name': 'NUROTA - (Nurota tumani)',
                'address': 'Nurota tumani, Tinchlik ko\'chasi 18, "Nurota" bozori',
                'phone': '1230',
                'hours': 'Du-Sh: 08:00-17:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/nurota_bazari/108225791084'
            },
            {
                'name': 'XATIRCHI - (Xatirchi tumani)',
                'address': 'Xatirchi tumani, Navbahor ko\'chasi 29, "Xatirchi" savdo markazi',
                'phone': '1230',
                'hours': 'Du-Ju: 09:00-18:00, Sh: 09:00-16:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/xatirchi_savdo_tsentr/108225791085'
            },
            {
                'name': 'TOMDI - (Tomdi tumani)',
                'address': 'Tomdi tumani, Markaziy ko\'chasi 41, "Tomdi" bozori',
                'phone': '1230',
                'hours': 'Du-Sh: 08:00-17:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/tomdi_bazari/108225791086'
            },
            {
                'name': 'KONIMEX - (Konimex tumani)',
                'address': 'Konimex tumani, Yangiobod ko\'chasi 15, "Konimex" savdo markazi',
                'phone': '1230',
                'hours': 'Du-Ju: 09:00-18:00, Sh: 09:00-16:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/konimex_savdo_tsentr/108225791087'
            },
            {
                'name': 'NAVBAHOR - (Navbahor tumani)',
                'address': 'Navbahor tumani, Bogishamol ko\'chasi 22, "Navbahor" bozori',
                'phone': '1230',
                'hours': 'Du-Sh: 08:00-17:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/navbahor_bazari/108225791088'
            }
        ]
    },
    'kashkadarya': {
        'ru': [
            {
                'name': '–ö–ê–†–®–ò –¶–ï–ù–¢–† - (–≥.–ö–∞—Ä—à–∏)',
                'address': '—É–ª. –ê–º–∏—Ä–∞ –¢–µ–º—É—Ä–∞ 45, –¢–¶ "Qarshi"',
                'phone': '1230',
                'hours': '–ü–Ω-–ü—Ç: 09:00-19:00, –°–±: 09:00-17:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/qarshi_savdo_tsentr/108225791089'
            },
            {
                'name': '–ö–ê–†–®–ò –ë–û–ó–û–† - (–≥.–ö–∞—Ä—à–∏)',
                'address': '—É–ª. –ù–∞–≤–æ–∏ 78, –†—ã–Ω–æ–∫ "Eski bozor"',
                'phone': '1230',
                'hours': '–ü–Ω-–°–±: 08:00-18:00, –í—Å: 08:00-16:00',
                'yandex_map': 'https://yandex.uz/maps/org/eski_bozor_qarshi/108225791090'
            },
            {
                'name': '–®–ê–•–†–ò–°–ê–ë–ó - (–≥.–®–∞—Ö—Ä–∏—Å–∞–±–∑)',
                'address': '—É–ª. –ê–º–∏—Ä–∞ –¢–µ–º—É—Ä–∞ 23, –¢–¶ "Shahrisabz"',
                'phone': '1230',
                'hours': '–ü–Ω-–ü—Ç: 09:00-18:00, –°–±: 09:00-16:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/shahrisabz_savdo_tsentr/108225791091'
            },
            {
                'name': '–ö–ò–¢–û–ë - (–ö–∏—Ç–∞–±—Å–∫–∏–π —Ä-–Ω)',
                'address': '–ö–∏—Ç–∞–±—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –ú–∞—Ä–∫–∞–∑–∏–π 12, –¢–¶ "Kitob"',
                'phone': '1230',
                'hours': '–ü–Ω-–ü—Ç: 09:00-18:00, –°–±: 09:00-16:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/kitob_savdo_tsentr/108225791092'
            },
            {
                'name': '–ì–£–ó–ê–† - (–ì—É–∑–∞—Ä—Å–∫–∏–π —Ä-–Ω)',
                'address': '–ì—É–∑–∞—Ä—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –ë–æ–≥–∏—à–∞–º–æ–ª 34, –†—ã–Ω–æ–∫ "Guzar"',
                'phone': '1230',
                'hours': '–ü–Ω-–°–±: 08:00-17:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/guzar_bazari/108225791093'
            },
            {
                'name': '–î–ï–•–ö–ê–ù–ê–ë–ê–î - (–î–µ—Ö–∫–∞–Ω–∞–±–∞–¥—Å–∫–∏–π —Ä-–Ω)',
                'address': '–î–µ—Ö–∫–∞–Ω–∞–±–∞–¥—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –Ø–Ω–≥–∏—Ö–∞—ë—Ç 56, –¢–¶ "Dehqonobod"',
                'phone': '1230',
                'hours': '–ü–Ω-–ü—Ç: 09:00-18:00, –°–±: 09:00-16:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/dehqonobod_savdo_tsentr/108225791094'
            },
            {
                'name': '–ö–ê–ú–ê–®–ò - (–ö–∞–º–∞—à–∏–Ω—Å–∫–∏–π —Ä-–Ω)',
                'address': '–ö–∞–º–∞—à–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –¢–∏–Ω—á–ª–∏–∫ 18, –†—ã–Ω–æ–∫ "Qamashi"',
                'phone': '1230',
                'hours': '–ü–Ω-–°–±: 08:00-17:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/qamashi_bazari/108225791095'
            },
            {
                'name': '–ö–ê–°–ê–ù - (–ö–∞—Å—Å–∞–Ω—Å–∫–∏–π —Ä-–Ω)',
                'address': '–ö–∞—Å—Å–∞–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –ù–∞–≤–±–∞—Ö–æ—Ä 29, –¢–¶ "Qasan"',
                'phone': '1230',
                'hours': '–ü–Ω-–ü—Ç: 09:00-18:00, –°–±: 09:00-16:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/qasan_savdo_tsentr/108225791096'
            },
            {
                'name': '–ö–£–ö–î–ê–õ–ê - (–ö—É–∫–¥–∞–ª–∏–Ω—Å–∫–∏–π —Ä-–Ω)',
                'address': '–ö—É–∫–¥–∞–ª–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –ú–∞—Ä–∫–∞–∑–∏–π 41, –†—ã–Ω–æ–∫ "Qoqdola"',
                'phone': '1230',
                'hours': '–ü–Ω-–°–±: 08:00-17:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/qoqdola_bazari/108225791097'
            },
            {
                'name': '–ú–ò–†–ò–®–ö–û–† - (–ú–∏—Ä–∏—à–∫–æ—Ä—Å–∫–∏–π —Ä-–Ω)',
                'address': '–ú–∏—Ä–∏—à–∫–æ—Ä—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –Ø–Ω–≥–∏–æ–±–æ–¥ 15, –¢–¶ "Mirishkor"',
                'phone': '1230',
                'hours': '–ü–Ω-–ü—Ç: 09:00-18:00, –°–±: 09:00-16:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/mirishkor_savdo_tsentr/108225791098'
            },
            {
                'name': '–ú–£–ë–û–†–ê–ö - (–ú—É–±–∞—Ä–µ–∫—Å–∫–∏–π —Ä-–Ω)',
                'address': '–ú—É–±–∞—Ä–µ–∫—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –ë–æ–≥–∏—à–∞–º–æ–ª 22, –†—ã–Ω–æ–∫ "Muborak"',
                'phone': '1230',
                'hours': '–ü–Ω-–°–±: 08:00-17:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/muborak_bazari/108225791099'
            }
        ],
        'uz': [
            {
                'name': 'QARSHI MARKAZI - (Qarshi sh.)',
                'address': 'Amir Temur ko\'chasi 45, "Qarshi" savdo markazi',
                'phone': '1230',
                'hours': 'Du-Ju: 09:00-19:00, Sh: 09:00-17:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/qarshi_savdo_tsentr/108225791089'
            },
            {
                'name': 'QARSHI BOZOR - (Qarshi sh.)',
                'address': 'Navoiy ko\'chasi 78, "Eski bozor"',
                'phone': '1230',
                'hours': 'Du-Sh: 08:00-18:00, Ya: 08:00-16:00',
                'yandex_map': 'https://yandex.uz/maps/org/eski_bozor_qarshi/108225791090'
            },
            {
                'name': 'SHAHRISABZ - (Shahrisabz sh.)',
                'address': 'Amir Temur ko\'chasi 23, "Shahrisabz" savdo markazi',
                'phone': '1230',
                'hours': 'Du-Ju: 09:00-18:00, Sh: 09:00-16:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/shahrisabz_savdo_tsentr/108225791091'
            },
            {
                'name': 'KITOB - (Kitob tumani)',
                'address': 'Kitob tumani, Markaziy ko\'chasi 12, "Kitob" savdo markazi',
                'phone': '1230',
                'hours': 'Du-Ju: 09:00-18:00, Sh: 09:00-16:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/kitob_savdo_tsentr/108225791092'
            },
            {
                'name': 'GUZAR - (Guzar tumani)',
                'address': 'Guzar tumani, Bogishamol ko\'chasi 34, "Guzar" bozori',
                'phone': '1230',
                'hours': 'Du-Sh: 08:00-17:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/guzar_bazari/108225791093'
            },
            {
                'name': 'DEHQONOBOD - (Dehqonobod tumani)',
                'address': 'Dehqonobod tumani, Yangihayot ko\'chasi 56, "Dehqonobod" savdo markazi',
                'phone': '1230',
                'hours': 'Du-Ju: 09:00-18:00, Sh: 09:00-16:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/dehqonobod_savdo_tsentr/108225791094'
            },
            {
                'name': 'QAMASHI - (Qamashi tumani)',
                'address': 'Qamashi tumani, Tinchlik ko\'chasi 18, "Qamashi" bozori',
                'phone': '1230',
                'hours': 'Du-Sh: 08:00-17:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/qamashi_bazari/108225791095'
            },
            {
                'name': 'QASAN - (Qasan tumani)',
                'address': 'Qasan tumani, Navbahor ko\'chasi 29, "Qasan" savdo markazi',
                'phone': '1230',
                'hours': 'Du-Ju: 09:00-18:00, Sh: 09:00-16:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/qasan_savdo_tsentr/108225791096'
            },
            {
                'name': 'QOQDOLA - (Qoqdola tumani)',
                'address': 'Qoqdola tumani, Markaziy ko\'chasi 41, "Qoqdola" bozori',
                'phone': '1230',
                'hours': 'Du-Sh: 08:00-17:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/qoqdola_bazari/108225791097'
            },
            {
                'name': 'MIRISHKOR - (Mirishkor tumani)',
                'address': 'Mirishkor tumani, Yangiobod ko\'chasi 15, "Mirishkor" savdo markazi',
                'phone': '1230',
                'hours': 'Du-Ju: 09:00-18:00, Sh: 09:00-16:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/mirishkor_savdo_tsentr/108225791098'
            },
            {
                'name': 'MUBORAK - (Muborak tumani)',
                'address': 'Muborak tumani, Bogishamol ko\'chasi 22, "Muborak" bozori',
                'phone': '1230',
                'hours': 'Du-Sh: 08:00-17:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/muborak_bazari/108225791099'
            }
        ]
    },
    'samarkand': {
        'ru': [
            {
                'name': '–°–ê–ú–ê–†–ö–ê–ù–î –¶–ï–ù–¢–† - (–≥.–°–∞–º–∞—Ä–∫–∞–Ω–¥)',
                'address': '—É–ª. –†–µ–≥–∏—Å—Ç–∞–Ω 45, –¢–¶ "Samarqand"',
                'phone': '1230',
                'hours': '–ü–Ω-–ü—Ç: 09:00-19:00, –°–±: 09:00-17:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/samarqand_savdo_tsentr/108225791100'
            },
            {
                'name': '–°–ê–ú–ê–†–ö–ê–ù–î –°–ò–Ø–ë - (–≥.–°–∞–º–∞—Ä–∫–∞–Ω–¥)',
                'address': '—É–ª. –ê–º–∏—Ä–∞ –¢–µ–º—É—Ä–∞ 78, –†—ã–Ω–æ–∫ "Siyob bozor"',
                'phone': '1230',
                'hours': '–ü–Ω-–°–±: 08:00-18:00, –í—Å: 08:00-16:00',
                'yandex_map': 'https://yandex.uz/maps/org/siyob_bozor/108225791101'
            },
            {
                'name': '–ö–ê–¢–¢–ê–ö–£–†–ì–ê–ù - (–≥.–ö–∞—Ç—Ç–∞–∫—É—Ä–≥–∞–Ω)',
                'address': '—É–ª. –Ø–Ω–≥–∏–æ–±–æ–¥ 23, –¢–¶ "Kattaqo\'rg\'on"',
                'phone': '1230',
                'hours': '–ü–Ω-–ü—Ç: 09:00-18:00, –°–±: 09:00-16:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/kattaqorgon_savdo_tsentr/108225791102'
            },
            {
                'name': '–£–†–ì–£–¢ - (–£—Ä–≥—É—Ç—Å–∫–∏–π —Ä-–Ω)',
                'address': '–£—Ä–≥—É—Ç—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –ú–∞—Ä–∫–∞–∑–∏–π 12, –¢–¶ "Urgut"',
                'phone': '1230',
                'hours': '–ü–Ω-–ü—Ç: 09:00-18:00, –°–±: 09:00-16:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/urgut_savdo_tsentr/108225791103'
            },
            {
                'name': '–ë–£–õ–£–ù–ì–£–† - (–ë—É–ª—É–Ω–≥—É—Ä—Å–∫–∏–π —Ä-–Ω)',
                'address': '–ë—É–ª—É–Ω–≥—É—Ä—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –ë–æ–≥–∏—à–∞–º–æ–ª 34, –†—ã–Ω–æ–∫ "Bulung\'ur"',
                'phone': '1230',
                'hours': '–ü–Ω-–°–±: 08:00-17:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/bulungur_bazari/108225791104'
            },
            {
                'name': '–î–ñ–ê–ú–ë–ê–ô - (–î–∂–∞–º–±–∞–π—Å–∫–∏–π —Ä-–Ω)',
                'address': '–î–∂–∞–º–±–∞–π—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –Ø–Ω–≥–∏—Ö–∞—ë—Ç 56, –¢–¶ "Jomboy"',
                'phone': '1230',
                'hours': '–ü–Ω-–ü—Ç: 09:00-18:00, –°–±: 09:00-16:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/jomboy_savdo_tsentr/108225791105'
            },
            {
                'name': '–ò–®–¢–ò–•–û–ù - (–ò—à—Ç–∏—Ö–∞–Ω—Å–∫–∏–π —Ä-–Ω)',
                'address': '–ò—à—Ç–∏—Ö–∞–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –¢–∏–Ω—á–ª–∏–∫ 18, –†—ã–Ω–æ–∫ "Ishtixon"',
                'phone': '1230',
                'hours': '–ü–Ω-–°–±: 08:00-17:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/ishtixon_bazari/108225791106'
            },
            {
                'name': '–ö–ê–õ–õ–ê–°–û–ô - (–ü–∞–π–∞—Ä—ã–∫—Å–∫–∏–π —Ä-–Ω)',
                'address': '–ü–∞–π–∞—Ä—ã–∫—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –ù–∞–≤–±–∞—Ö–æ—Ä 29, –¢–¶ "Payariq"',
                'phone': '1230',
                'hours': '–ü–Ω-–ü—Ç: 09:00-18:00, –°–±: 09:00-16:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/payariq_savdo_tsentr/108225791107'
            },
            {
                'name': '–ù–£–†–ê–ë–ê–î - (–ù—É—Ä–∞–±–∞–¥—Å–∫–∏–π —Ä-–Ω)',
                'address': '–ù—É—Ä–∞–±–∞–¥—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –ú–∞—Ä–∫–∞–∑–∏–π 41, –†—ã–Ω–æ–∫ "Nurobod"',
                'phone': '1230',
                'hours': '–ü–Ω-–°–±: 08:00-17:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/nurobod_bazari/108225791108'
            },
            {
                'name': '–ü–ê–•–¢–ê–ß–ò - (–ü–∞—Ö—Ç–∞—á–∏–π—Å–∫–∏–π —Ä-–Ω)',
                'address': '–ü–∞—Ö—Ç–∞—á–∏–π—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –Ø–Ω–≥–∏–æ–±–æ–¥ 15, –¢–¶ "Paxtachi"',
                'phone': '1230',
                'hours': '–ü–Ω-–ü—Ç: 09:00-18:00, –°–±: 09:00-16:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/paxtachi_savdo_tsentr/108225791109'
            },
            {
                'name': '–¢–ê–ô–õ–Ø–ö - (–¢–∞–π–ª—è–∫—Å–∫–∏–π —Ä-–Ω)',
                'address': '–¢–∞–π–ª—è–∫—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –ë–æ–≥–∏—à–∞–º–æ–ª 22, –†—ã–Ω–æ–∫ "Toyloq"',
                'phone': '1230',
                'hours': '–ü–Ω-–°–±: 08:00-17:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/toyloq_bazari/108225791110'
            }
        ],
        'uz': [
            {
                'name': 'SAMARQAND MARKAZI - (Samarqand sh.)',
                'address': 'Registon ko\'chasi 45, "Samarqand" savdo markazi',
                'phone': '1230',
                'hours': 'Du-Ju: 09:00-19:00, Sh: 09:00-17:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/samarqand_savdo_tsentr/108225791100'
            },
            {
                'name': 'SAMARQAND SIYOB - (Samarqand sh.)',
                'address': 'Amir Temur ko\'chasi 78, "Siyob bozor"',
                'phone': '1230',
                'hours': 'Du-Sh: 08:00-18:00, Ya: 08:00-16:00',
                'yandex_map': 'https://yandex.uz/maps/org/siyob_bozor/108225791101'
            },
            {
                'name': 'KATTAQO\'RG\'ON - (Kattaqo\'rg\'on sh.)',
                'address': 'Yangiobod ko\'chasi 23, "Kattaqo\'rg\'on" savdo markazi',
                'phone': '1230',
                'hours': 'Du-Ju: 09:00-18:00, Sh: 09:00-16:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/kattaqorgon_savdo_tsentr/108225791102'
            },
            {
                'name': 'URGUT - (Urgut tumani)',
                'address': 'Urgut tumani, Markaziy ko\'chasi 12, "Urgut" savdo markazi',
                'phone': '1230',
                'hours': 'Du-Ju: 09:00-18:00, Sh: 09:00-16:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/urgut_savdo_tsentr/108225791103'
            },
            {
                'name': 'BULUNG\'UR - (Bulung\'ur tumani)',
                'address': 'Bulung\'ur tumani, Bogishamol ko\'chasi 34, "Bulung\'ur" bozori',
                'phone': '1230',
                'hours': 'Du-Sh: 08:00-17:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/bulungur_bazari/108225791104'
            },
            {
                'name': 'JOMBOY - (Jomboy tumani)',
                'address': 'Jomboy tumani, Yangihayot ko\'chasi 56, "Jomboy" savdo markazi',
                'phone': '1230',
                'hours': 'Du-Ju: 09:00-18:00, Sh: 09:00-16:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/jomboy_savdo_tsentr/108225791105'
            },
            {
                'name': 'ISHTIXON - (Ishtixon tumani)',
                'address': 'Ishtixon tumani, Tinchlik ko\'chasi 18, "Ishtixon" bozori',
                'phone': '1230',
                'hours': 'Du-Sh: 08:00-17:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/ishtixon_bazari/108225791106'
            },
            {
                'name': 'PAYARIQ - (Payariq tumani)',
                'address': 'Payariq tumani, Navbahor ko\'chasi 29, "Payariq" savdo markazi',
                'phone': '1230',
                'hours': 'Du-Ju: 09:00-18:00, Sh: 09:00-16:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/payariq_savdo_tsentr/108225791107'
            },
            {
                'name': 'NUROBOD - (Nurobod tumani)',
                'address': 'Nurobod tumani, Markaziy ko\'chasi 41, "Nurobod" bozori',
                'phone': '1230',
                'hours': 'Du-Sh: 08:00-17:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/nurobod_bazari/108225791108'
            },
            {
                'name': 'PAXTACHI - (Paxtachi tumani)',
                'address': 'Paxtachi tumani, Yangiobod ko\'chasi 15, "Paxtachi" savdo markazi',
                'phone': '1230',
                'hours': 'Du-Ju: 09:00-18:00, Sh: 09:00-16:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/paxtachi_savdo_tsentr/108225791109'
            },
            {
                'name': 'TOYLOQ - (Toyloq tumani)',
                'address': 'Toyloq tumani, Bogishamol ko\'chasi 22, "Toyloq" bozori',
                'phone': '1230',
                'hours': 'Du-Sh: 08:00-17:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/toyloq_bazari/108225791110'
            }
        ]
    },
    'sirdarya': {
        'ru': [
            {
                'name': '–ì–£–õ–ò–°–¢–ê–ù –¶–ï–ù–¢–† - (–≥.–ì—É–ª–∏—Å—Ç–∞–Ω)',
                'address': '—É–ª. –ê–º–∏—Ä–∞ –¢–µ–º—É—Ä–∞ 45, –¢–¶ "Guliston"',
                'phone': '1230',
                'hours': '–ü–Ω-–ü—Ç: 09:00-19:00, –°–±: 09:00-17:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/guliston_savdo_tsentr/108225791111'
            },
            {
                'name': '–ì–£–õ–ò–°–¢–ê–ù –ë–û–ó–û–† - (–≥.–ì—É–ª–∏—Å—Ç–∞–Ω)',
                'address': '—É–ª. –ù–∞–≤–æ–∏ 78, –†—ã–Ω–æ–∫ "Markaziy bozor"',
                'phone': '1230',
                'hours': '–ü–Ω-–°–±: 08:00-18:00, –í—Å: 08:00-16:00',
                'yandex_map': 'https://yandex.uz/maps/org/markaziy_bozor_guliston/108225791112'
            },
            {
                'name': '–Ø–ù–ì–ò–ï–† - (–≥.–Ø–Ω–≥–∏–µ—Ä)',
                'address': '—É–ª. –Ø–Ω–≥–∏–æ–±–æ–¥ 23, –¢–¶ "Yangiyer"',
                'phone': '1230',
                'hours': '–ü–Ω-–ü—Ç: 09:00-18:00, –°–±: 09:00-16:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/yangiyer_savdo_tsentr/108225791113'
            },
            {
                'name': '–®–ò–†–ò–ù - (–®–∏—Ä–∏–Ω—Å–∫–∏–π —Ä-–Ω)',
                'address': '–®–∏—Ä–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –ú–∞—Ä–∫–∞–∑–∏–π 12, –¢–¶ "Shirin"',
                'phone': '1230',
                'hours': '–ü–Ω-–ü—Ç: 09:00-18:00, –°–±: 09:00-16:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/shirin_savdo_tsentr/108225791114'
            },
            {
                'name': '–°–ê–†–î–û–ë–ê - (–°–∞—Ä–¥–æ–±–∏–Ω—Å–∫–∏–π —Ä-–Ω)',
                'address': '–°–∞—Ä–¥–æ–±–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –ë–æ–≥–∏—à–∞–º–æ–ª 34, –†—ã–Ω–æ–∫ "Sardoba"',
                'phone': '1230',
                'hours': '–ü–Ω-–°–±: 08:00-17:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/sardoba_bazari/108225791115'
            },
            {
                'name': '–°–ê–ô–•–£–ù–û–ë–û–î - (–°–∞–π—Ö—É–Ω–∞–±–∞–¥—Å–∫–∏–π —Ä-–Ω)',
                'address': '–°–∞–π—Ö—É–Ω–∞–±–∞–¥—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –Ø–Ω–≥–∏—Ö–∞—ë—Ç 56, –¢–¶ "Sayxunobod"',
                'phone': '1230',
                'hours': '–ü–Ω-–ü—Ç: 09:00-18:00, –°–±: 09:00-16:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/sayxunobod_savdo_tsentr/108225791116'
            },
            {
                'name': '–•–ê–í–ê–°–¢ - (–•–∞–≤–∞—Å—Ç—Å–∫–∏–π —Ä-–Ω)',
                'address': '–•–∞–≤–∞—Å—Ç—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –¢–∏–Ω—á–ª–∏–∫ 18, –†—ã–Ω–æ–∫ "Xovos"',
                'phone': '1230',
                'hours': '–ü–Ω-–°–±: 08:00-17:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/xovos_bazari/108225791117'
            },
            {
                'name': '–ú–ï–•–ù–ê–¢–ê–ë–ê–î - (–ú–∏—Ä–∑–∞–∞–±–∞–¥—Å–∫–∏–π —Ä-–Ω)',
                'address': '–ú–∏—Ä–∑–∞–∞–±–∞–¥—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –ù–∞–≤–±–∞—Ö–æ—Ä 29, –¢–¶ "Mehnatobod"',
                'phone': '1230',
                'hours': '–ü–Ω-–ü—Ç: 09:00-18:00, –°–±: 09:00-16:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/mehnatobod_savdo_tsentr/108225791118'
            },
            {
                'name': '–ì–£–õ–ò–°–¢–û–ù –®–ê–•–ê–† - (–ì—É–ª–∏—Å—Ç–∞–Ω—Å–∫–∏–π —Ä-–Ω)',
                'address': '–ì—É–ª–∏—Å—Ç–∞–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –ú–∞—Ä–∫–∞–∑–∏–π 41, –†—ã–Ω–æ–∫ "Guliston"',
                'phone': '1230',
                'hours': '–ü–Ω-–°–±: 08:00-17:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/guliston_bazari/108225791119'
            },
            {
                'name': '–û–ö–û–õ–¢–ò–ù - (–ê–∫–∞–ª—Ç—ã–Ω—Å–∫–∏–π —Ä-–Ω)',
                'address': '–ê–∫–∞–ª—Ç—ã–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –Ø–Ω–≥–∏–æ–±–æ–¥ 15, –¢–¶ "Oqoltin"',
                'phone': '1230',
                'hours': '–ü–Ω-–ü—Ç: 09:00-18:00, –°–±: 09:00-16:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/oqoltin_savdo_tsentr/108225791120'
            },
            {
                'name': '–ë–ê–Ø–£–¢ - (–ë–∞—è—É—Ç—Å–∫–∏–π —Ä-–Ω)',
                'address': '–ë–∞—è—É—Ç—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –ë–æ–≥–∏—à–∞–º–æ–ª 22, –†—ã–Ω–æ–∫ "Boyovut"',
                'phone': '1230',
                'hours': '–ü–Ω-–°–±: 08:00-17:00, –í—Å: –í—ã—Ö–æ–¥–Ω–æ–π',
                'yandex_map': 'https://yandex.uz/maps/org/boyovut_bazari/108225791121'
            }
        ],
        'uz': [
            {
                'name': 'GULISTON MARKAZI - (Guliston sh.)',
                'address': 'Amir Temur ko\'chasi 45, "Guliston" savdo markazi',
                'phone': '1230',
                'hours': 'Du-Ju: 09:00-19:00, Sh: 09:00-17:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/guliston_savdo_tsentr/108225791111'
            },
            {
                'name': 'GULISTON BOZOR - (Guliston sh.)',
                'address': 'Navoiy ko\'chasi 78, "Markaziy bozor"',
                'phone': '1230',
                'hours': 'Du-Sh: 08:00-18:00, Ya: 08:00-16:00',
                'yandex_map': 'https://yandex.uz/maps/org/markaziy_bozor_guliston/108225791112'
            },
            {
                'name': 'YANGIYER - (Yangiyer sh.)',
                'address': 'Yangiobod ko\'chasi 23, "Yangiyer" savdo markazi',
                'phone': '1230',
                'hours': 'Du-Ju: 09:00-18:00, Sh: 09:00-16:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/yangiyer_savdo_tsentr/108225791113'
            },
            {
                'name': 'SHIRIN - (Shirin tumani)',
                'address': 'Shirin tumani, Markaziy ko\'chasi 12, "Shirin" savdo markazi',
                'phone': '1230',
                'hours': 'Du-Ju: 09:00-18:00, Sh: 09:00-16:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/shirin_savdo_tsentr/108225791114'
            },
            {
                'name': 'SARDORA - (Sardoba tumani)',
                'address': 'Sardoba tumani, Bogishamol ko\'chasi 34, "Sardoba" bozori',
                'phone': '1230',
                'hours': 'Du-Sh: 08:00-17:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/sardoba_bazari/108225791115'
            },
            {
                'name': 'SAYXUNOBOD - (Sayxunobod tumani)',
                'address': 'Sayxunobod tumani, Yangihayot ko\'chasi 56, "Sayxunobod" savdo markazi',
                'phone': '1230',
                'hours': 'Du-Ju: 09:00-18:00, Sh: 09:00-16:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/sayxunobod_savdo_tsentr/108225791116'
            },
            {
                'name': 'XOVOS - (Xovos tumani)',
                'address': 'Xovos tumani, Tinchlik ko\'chasi 18, "Xovos" bozori',
                'phone': '1230',
                'hours': 'Du-Sh: 08:00-17:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/xovos_bazari/108225791117'
            },
            {
                'name': 'MEHNATOBOD - (Mehnatobod tumani)',
                'address': 'Mehnatobod tumani, Navbahor ko\'chasi 29, "Mehnatobod" savdo markazi',
                'phone': '1230',
                'hours': 'Du-Ju: 09:00-18:00, Sh: 09:00-16:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/mehnatobod_savdo_tsentr/108225791118'
            },
            {
                'name': 'GULISTON - (Guliston tumani)',
                'address': 'Guliston tumani, Markaziy ko\'chasi 41, "Guliston" bozori',
                'phone': '1230',
                'hours': 'Du-Sh: 08:00-17:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/guliston_bazari/108225791119'
            },
            {
                'name': 'OQOLTIN - (Oqoltin tumani)',
                'address': 'Oqoltin tumani, Yangiobod ko\'chasi 15, "Oqoltin" savdo markazi',
                'phone': '1230',
                'hours': 'Du-Ju: 09:00-18:00, Sh: 09:00-16:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/oqoltin_savdo_tsentr/108225791120'
            },
            {
                'name': 'BOYOVUT - (Boyovut tumani)',
                'address': 'Boyovut tumani, Bogishamol ko\'chasi 22, "Boyovut" bozori',
                'phone': '1230',
                'hours': 'Du-Sh: 08:00-17:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/boyovut_bazari/108225791121'
            }
        ]
    },
     'karakalpakstan': {
        'ru': [
            {
                'name': 'NUKUS - (–≥.–ù—É–∫—É—Å)',
                'address': '—É–ª. –¢–∞—Ç–∏–±–∞–µ–≤–∞ –¥–æ–º-–±/–Ω. 22 –†–µ—Å—Ç–æ—Ä–∞–Ω "Neo"',
                'phone': '1230',
                'hours': '–ü–Ω-–ü—Ç: 08:00-20:00, –°–±: 08:00-18:00, –í—Å: 08:00-16:00',
                'yandex_map': 'https://yandex.uz/maps/org/neo/1126547855'
            },
            {
                'name': 'NUKUS 26-MKR - (–≥.–ù—É–∫—É—Å)',
                'address': '–ì–æ—Ä–æ–¥ –ù—É–∫—É—Å, —É–ª–∏—Ü–∞ –ü–∏—Ä–∂–∞–Ω –°–µ–π—Ç–æ–≤ 1–ê-–¥–æ–º,44-–∫–≤ –†—è–¥–æ–º –¢—É–∑ –∫–∞—Ñ–µ',
                'phone': '1230', 
                'hours': '–ü–Ω-–ü—Ç: 09:00-18:00, –°–±: 09:00-16:00, –í—Å: –í—ã—Ö–æ–¥–Ω—ã–µ –¥–Ω–∏',
                'yandex_map': 'https://yandex.uz/maps/org/tuz_kafe/1283746521'
            },
            {
                'name': 'TAXIATOSH - (–¢–∞—Ö–∏–∞—Ç–∞—à—Å–∫–∏–π —Ä-–Ω)',
                'address': '–¢–∞—Ö–∏–∞—Ç–∞—à—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª–∏—Ü–∞ –ö–∞–º–æ–ª–æ—Ç, –¥–æ–º 35-–ê –†—ã–Ω–æ–∫ –¢–∞—Ö–∏–∞—Ç–æ—à',
                'phone': '1230',
                'hours': '–ü–Ω-–°–±: 09:00-18:00, –í—Å: –í—ã—Ö–æ–¥–Ω—ã–µ –¥–Ω–∏',
                'yandex_map': 'https://yandex.uz/maps/org/taxiatosh_bazari/1456789234'
            },
            {
                'name': 'AMUDARYO - (–ê–º—É–¥–∞—Ä—å–∏–Ω—Å–∫–∏–π —Ä-–Ω)',
                'address': '–ê–º—É–¥–∞—Ä–∏–Ω—Å–∫–∏–π —Ä-–Ω, —É–ª. –¢–∞–¥–±–∏—Ä–∫–æ—Ä–ª–∞—Ä, 11 –ú–µ—á–µ—Ç –≠—à–æ–Ω–±–æ–±–æ',
                'phone': '1230',
                'hours': '–ü–Ω-–°–±: 09:00-18:00, –í—Å: –í—ã—Ö–æ–¥–Ω—ã–µ –¥–Ω–∏', 
                'yandex_map': 'https://yandex.uz/maps/org/eshonbobo_masjidi/1678902345'
            },
            {
                'name': 'BERUNIY - (–ë–µ—Ä—É–Ω–∏–π—Å–∫–∏–π —Ä-–Ω)',
                'address': '35-maktab ro\'parasi –°—Ç–∞—Ä—ã–π –ò–Ω–¥—É—Å—Ç—Ä–∏–∞–ª—å–Ω—ã–π –ö–æ–ª–ª–µ–¥–∂',
                'phone': '1230',
                'hours': '–ü–Ω-–°–±: 09:00-18:00, –í—Å: –í—ã—Ö–æ–¥–Ω—ã–µ –¥–Ω–∏',
                'yandex_map': 'https://yandex.uz/maps/org/sanoat_kolleji/1789012456'
            },
            {
                'name': 'KEGEYLI - (–ö–µ–≥–µ–π–ª–∏–π—Å–∫–∏–π —Ä-–Ω)',
                'address': '–ö–µ–≥–µ–π–ª–∏–π—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –ê–º–∏—Ä–∞ –¢–µ–º—É—Ä–∞ 45, –†—ã–Ω–æ–∫ "Kegeli"',
                'phone': '1230',
                'hours': '–ü–Ω-–°–±: 08:00-17:00, –í—Å: –í—ã—Ö–æ–¥–Ω—ã–µ –¥–Ω–∏',
                'yandex_map': 'https://yandex.uz/maps/org/kegeyli_bazari/1890123567'
            },
            {
                'name': 'KUNGIROT - (–ö—É–Ω–≥—Ä–∞–¥—Å–∫–∏–π —Ä-–Ω)',
                'address': '–ö—É–Ω–≥—Ä–∞–¥—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è 12, –¢–¶ "Kungrad"',
                'phone': '1230',
                'hours': '–ü–Ω-–ü—Ç: 09:00-18:00, –°–±: 09:00-16:00, –í—Å: –í—ã—Ö–æ–¥–Ω—ã–µ –¥–Ω–∏',
                'yandex_map': 'https://yandex.uz/maps/org/kungrad_savdo_markazi/1901234678'
            },
            {
                'name': 'MUYNAK - (–ú—É–π–Ω–∞–∫—Å–∫–∏–π —Ä-–Ω)',
                'address': '–ú—É–π–Ω–∞–∫—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –ê—Ä–∞–ª—å—Å–∫–∞—è 8, –†—ã–Ω–æ–∫ "Muynak"',
                'phone': '1230',
                'hours': '–ü–Ω-–°–±: 08:00-17:00, –í—Å: –í—ã—Ö–æ–¥–Ω—ã–µ –¥–Ω–∏',
                'yandex_map': 'https://yandex.uz/maps/org/muynoq_bazari/2012345789'
            },
            {
                'name': 'NUKUS 15-MKR - (–≥.–ù—É–∫—É—Å)',
                'address': '–ì–æ—Ä–æ–¥ –ù—É–∫—É—Å, 15-–º–∏–∫—Ä–æ—Ä–∞–π–æ–Ω, —É–ª. –ö–∞—Ä–∞–∫–∞–ª–ø–∞–∫—Å–∫–∞—è 25, –ú–∞–≥–∞–∑–∏–Ω "Dostlik"',
                'phone': '1230',
                'hours': '–ü–Ω-–ü—Ç: 09:00-19:00, –°–±: 09:00-17:00, –í—Å: 09:00-15:00',
                'yandex_map': 'https://yandex.uz/maps/org/dostlik_magazini/2123456890'
            },
            {
                'name': 'CHIMBOY - (–ß–∏–º–±–∞–π—Å–∫–∏–π —Ä-–Ω)',
                'address': '–ß–∏–º–±–∞–π—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –®–∞–±–±–∞–∑ 18, –†—ã–Ω–æ–∫ "Chimboy"',
                'phone': '1230',
                'hours': '–ü–Ω-–°–±: 08:00-18:00, –í—Å: –í—ã—Ö–æ–¥–Ω—ã–µ –¥–Ω–∏',
                'yandex_map': 'https://yandex.uz/maps/org/chimboy_bazari/2234567901'
            },
            {
                'name': 'SHUMANAY - (–®—É–º–∞–Ω–∞–π—Å–∫–∏–π —Ä-–Ω)',
                'address': '–®—É–º–∞–Ω–∞–π—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –ú–∞—Ä–∫–∞–∑–∏–π 33, –ú–∞–≥–∞–∑–∏–Ω "Shumanay"',
                'phone': '1230',
                'hours': '–ü–Ω-–°–±: 08:00-17:00, –í—Å: –í—ã—Ö–æ–¥–Ω—ã–µ –¥–Ω–∏',
                'yandex_map': 'https://yandex.uz/maps/org/shumanay_magazini/2345678012'
            }
        ],
        'uz': [
            {
                'name': 'NUKUS - (Nukus sh.)',
                'address': 'Tatieva ko\'chasi, 22 "Neo" restorani',
                'phone': '1230',
                'hours': 'Du-Ju: 08:00-20:00, Sh: 08:00-18:00, Ya: 08:00-16:00',
                'yandex_map': 'https://yandex.uz/maps/org/neo/1126547855'
            },
            {
                'name': 'NUKUS 26-MKR - (Nukus sh.)', 
                'address': 'Nukus sh., Pirjon Seytov 1A-uy, 44-x Tuz kafe yoni',
                'phone': '1230',
                'hours': 'Du-Ju: 09:00-18:00, Sh: 09:00-16:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/tuz_kafe/1283746521'
            },
            {
                'name': 'TAXIATOSH - (Taxiatosh tumani)',
                'address': 'Taxiatosh tumani, Kamolot ko\'chasi 35-A Taxiatosh bozori',
                'phone': '1230',
                'hours': 'Du-Sh: 09:00-18:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/taxiatosh_bazari/1456789234'
            },
            {
                'name': 'AMUDARYO - (Amudaryo tumani)',
                'address': 'Amudaryo tumani, Tadbirkorlar ko\'chasi 11 Eshonbobo masjidi',
                'phone': '1230',
                'hours': 'Du-Sh: 09:00-18:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/eshonbobo_masjidi/1678902345'
            },
            {
                'name': 'BERUNIY - (Beruniy tumani)',
                'address': '35-maktab ro\'parasi Eski Sanoat Kolleji',
                'phone': '1230',
                'hours': 'Du-Sh: 09:00-18:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/sanoat_kolleji/1789012456'
            },
            {
                'name': 'KEGEYLI - (Kegeyli tumani)',
                'address': 'Kegeyli tumani, Amir Temur ko\'chasi 45 "Kegeyli" bozori',
                'phone': '1230',
                'hours': 'Du-Sh: 08:00-17:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/kegeyli_bazari/1890123567'
            },
            {
                'name': 'KUNGIROT - (Kungirot tumani)',
                'address': 'Kungirot tumani, Markaziy ko\'chasi 12 "Kungrad" savdo markazi',
                'phone': '1230',
                'hours': 'Du-Ju: 09:00-18:00, Sh: 09:00-16:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/kungrad_savdo_markazi/1901234678'
            },
            {
                'name': 'MUYNAK - (Muynoq tumani)',
                'address': 'Muynoq tumani, Orol ko\'chasi 8 "Muynoq" bozori',
                'phone': '1230',
                'hours': 'Du-Sh: 08:00-17:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/muynoq_bazari/2012345789'
            },
            {
                'name': 'NUKUS 15-MKR - (Nukus sh.)',
                'address': 'Nukus sh., 15-mikrorayon, Qoraqalpoq ko\'chasi 25 "Do\'stlik" do\'koni',
                'phone': '1230',
                'hours': 'Du-Ju: 09:00-19:00, Sh: 09:00-17:00, Ya: 09:00-15:00',
                'yandex_map': 'https://yandex.uz/maps/org/dostlik_magazini/2123456890'
            },
            {
                'name': 'CHIMBOY - (Chimboy tumani)',
                'address': 'Chimboy tumani, Shabbaz ko\'chasi 18 "Chimboy" bozori',
                'phone': '1230',
                'hours': 'Du-Sh: 08:00-18:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/chimboy_bazari/2234567901'
            },
            {
                'name': 'SHUMANAY - (Shumanay tumani)',
                'address': 'Shumanay tumani, Markaziy ko\'chasi 33 "Shumanay" do\'koni',
                'phone': '1230',
                'hours': 'Du-Sh: 08:00-17:00, Ya: Dam olish kuni',
                'yandex_map': 'https://yandex.uz/maps/org/shumanay_magazini/2345678012'
            }
        ]
    }
}

REGIONS = {
    'ru': {
        'tashkent': 'üìç –¢–∞—à–∫–µ–Ω—Ç (–≥–æ—Ä–æ–¥)',
        'andijan': 'üèôÔ∏è –ê–Ω–¥–∏–∂–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å',
        'bukhara': 'üèôÔ∏è –ë—É—Ö–∞—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å',
        'fergana': 'üèôÔ∏è –§–µ—Ä–≥–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å',
        'jizzakh': 'üèôÔ∏è –î–∂–∏–∑–∞–∫—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å',
        'khorezm': 'üèôÔ∏è –•–æ—Ä–µ–∑–º—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å',
        'namangan': 'üèôÔ∏è –ù–∞–º–∞–Ω–≥–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å',
        'navoi': 'üèôÔ∏è –ù–∞–≤–æ–∏–π—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å',
        'kashkadarya': 'üèôÔ∏è –ö–∞—à–∫–∞–¥–∞—Ä—å–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å',
        'samarkand': 'üèôÔ∏è –°–∞–º–∞—Ä–∫–∞–Ω–¥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å',
        'sirdarya': 'üèôÔ∏è –°—ã—Ä–¥–∞—Ä—å–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å',
        'surkhandarya': 'üèôÔ∏è –°—É—Ä—Ö–∞–Ω–¥–∞—Ä—å–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å',
        'tashkent_region': 'üèôÔ∏è –¢–∞—à–∫–µ–Ω—Ç—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å',
        'karakalpakstan': 'üèôÔ∏è –†–µ—Å–ø—É–±–ª–∏–∫–∞ –ö–∞—Ä–∞–∫–∞–ª–ø–∞–∫—Å—Ç–∞–Ω'
    },
    'uz': {
        'tashkent': 'üìç Toshkent (shahar)',
        'andijan': 'üèôÔ∏è Andijon viloyati',
        'bukhara': 'üèôÔ∏è Buxoro viloyati',
        'fergana': 'üèôÔ∏è Farg ªona viloyati',
        'jizzakh': 'üèôÔ∏è Jizzax viloyati',
        'khorezm': 'üèôÔ∏è Xorazm viloyati',
        'namangan': 'üèôÔ∏è Namangan viloyati',
        'navoi': 'üèôÔ∏è Navoiy viloyati',
        'kashkadarya': 'üèôÔ∏è Qashqadaryo viloyati',
        'samarkand': 'üèôÔ∏è Samarqand viloyati',
        'sirdarya': 'üèôÔ∏è Sirdaryo viloyati',
        'surkhandarya': 'üèôÔ∏è Surxondaryo viloyati',
        'tashkent_region': 'üèôÔ∏è Toshkent viloyati',
        'karakalpakstan': 'üèôÔ∏è Qoraqalpog ªiston Respublikasi'
    }
}

# ================== –•–†–ê–ù–ï–ù–ò–ï –î–ê–ù–ù–´–• –í –ü–ê–ú–Ø–¢–ò ==================
user_sessions = {}
user_selections = {}
user_carts = {}
support_requests = {}
admin_sessions = {}

# ================== –ö–õ–ê–í–ò–ê–¢–£–†–´ ==================
def get_language_keyboard():
    builder = ReplyKeyboardBuilder()
    builder.add(KeyboardButton(text="üá∑üá∫ –†—É—Å—Å–∫–∏–π"))
    builder.add(KeyboardButton(text="üá∫üáø O'zbekcha"))
    builder.adjust(2)
    return builder.as_markup(resize_keyboard=True)

def get_contact_keyboard(language):
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üìû –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç" if language == 'ru' else "üìû Kontaktni yuborish", request_contact=True)],
            [KeyboardButton(text="üì± –í–≤–µ—Å—Ç–∏ –Ω–æ–º–µ—Ä –≤—Ä—É—á–Ω—É—é" if language == 'ru' else "üì± Raqamni qo'lda kiritish")]
        ],
        resize_keyboard=True,
        one_time_keyboard=True
    )

def get_manual_phone_keyboard(language):
    text = "üîô –ù–∞–∑–∞–¥" if language == 'ru' else "üîô Orqaga"
    return ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text=text)]],
        resize_keyboard=True
    )

def get_region_keyboard(language):
    builder = ReplyKeyboardBuilder()
    regions = REGIONS[language]
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–∑—Ä–∞—á–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—Å–µ—Ö —Ä–µ–≥–∏–æ–Ω–æ–≤
    for region_key in regions:
        builder.add(KeyboardButton(text=regions[region_key]))
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–æ 2 –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥ –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    builder.adjust(2)
    return builder.as_markup(resize_keyboard=True, one_time_keyboard=True)

def get_post_office_keyboard(region, language):
    builder = ReplyKeyboardBuilder()
    if region in POST_OFFICES:
        offices = POST_OFFICES[region][language]
        for office in offices:
            office_name = office.split('\n')[0]
            builder.add(KeyboardButton(text=office_name))
    builder.add(KeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥" if language == 'ru' else "‚Ü©Ô∏è Orqaga"))
    builder.adjust(1)
    return builder.as_markup(resize_keyboard=True)

def get_location_keyboard(language):
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üìç –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é" if language == 'ru' else "üìç Geolokatsiyani yuborish", request_location=True)],
            [KeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥" if language == 'ru' else "‚Ü©Ô∏è Orqaga")]
        ],
        resize_keyboard=True
    )

def get_main_menu(language):
    builder = ReplyKeyboardBuilder()
    if language == 'ru':
        builder.add(KeyboardButton(text="üõçÔ∏è –ö–∞—Ç–∞–ª–æ–≥"))
        builder.add(KeyboardButton(text="‚≠ê –ú–Ω–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤"))
        builder.add(KeyboardButton(text="üõí –ö–æ—Ä–∑–∏–Ω–∞"))
        builder.add(KeyboardButton(text="üì¶ –ú–æ–∏ –∑–∞–∫–∞–∑—ã"))
        builder.add(KeyboardButton(text="‚ÑπÔ∏è –ü–æ–º–æ—â—å"))
    else:
        builder.add(KeyboardButton(text="üõçÔ∏è Katalog"))
        builder.add(KeyboardButton(text="‚≠ê Mijozlar fikri"))
        builder.add(KeyboardButton(text="üõí Savat"))
        builder.add(KeyboardButton(text="üì¶ Mening buyurtmalarim"))
        builder.add(KeyboardButton(text="‚ÑπÔ∏è Yordam"))
    builder.adjust(2, 2, 1)
    return builder.as_markup(resize_keyboard=True)

def get_catalog_keyboard(language):
    builder = ReplyKeyboardBuilder()
    if language == 'ru':
        builder.add(KeyboardButton(text="üëï –§–æ—Ä–º—ã 2024/2025"))
        builder.add(KeyboardButton(text="üï∞Ô∏è –†–µ—Ç—Ä–æ —Ñ–æ—Ä–º—ã"))
        builder.add(KeyboardButton(text="‚öΩ –ë—É—Ç—Å—ã"))
        builder.add(KeyboardButton(text="üéÅ –§—É—Ç. –∞—Ç—Ä–∏–±—É—Ç–∏–∫–∞"))
        builder.add(KeyboardButton(text="üî• –ê–∫—Ü–∏–∏"))
        builder.add(KeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥"))
    else:
        builder.add(KeyboardButton(text="üëï 2024/2025 Formalari"))
        builder.add(KeyboardButton(text="üï∞Ô∏è Retro formalar"))
        builder.add(KeyboardButton(text="‚öΩ Futbolkalar"))
        builder.add(KeyboardButton(text="üéÅ Futbol Aksessuarlari"))
        builder.add(KeyboardButton(text="üî• Aksiyalar"))
        builder.add(KeyboardButton(text="‚Ü©Ô∏è Orqaga"))
    builder.adjust(2, 2, 1, 1)
    return builder.as_markup(resize_keyboard=True)

def get_customization_keyboard(language):
    builder = ReplyKeyboardBuilder()
    if language == 'ru':
        builder.add(KeyboardButton(text="‚úÖ –î–∞, –¥–æ–±–∞–≤–∏—Ç—å –∏–º—è –∏ –Ω–æ–º–µ—Ä"))
        builder.add(KeyboardButton(text="‚ùå –ù–µ—Ç, –±–µ–∑ –∫–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏–∏"))
        builder.add(KeyboardButton(text="üîô –ù–∞–∑–∞–¥ –∫ —Ç–æ–≤–∞—Ä–∞–º"))
    else:
        builder.add(KeyboardButton(text="‚úÖ Ha, ism va raqam qo'shing"))
        builder.add(KeyboardButton(text="‚ùå Yo'q, be'zashsiz"))
        builder.add(KeyboardButton(text="üîô Mahsulotlarga qaytish"))
    builder.adjust(2, 1)
    return builder.as_markup(resize_keyboard=True)

def get_size_keyboard(language, product_category):
    builder = InlineKeyboardBuilder()
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–∞–∑–º–µ—Ä—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    if any(word in product_category.lower() for word in ['—Ñ–æ—Ä–º–∞', 'formasi', '–∞–∫—Å–µ—Å—Å—É–∞—Ä', 'aksessuar']):
        sizes = [("S", "size_S"), ("M", "size_M"), ("L", "size_L"), ("XL", "size_XL"), ("XXL", "size_XXL")]
    else:  # –ë—É—Ç—Å—ã
        sizes = [("40", "size_40"), ("41", "size_41"), ("42", "size_42"), ("43", "size_43"), ("44", "size_44")]
    
    for size, callback_data in sizes:
        builder.add(types.InlineKeyboardButton(text=size, callback_data=callback_data))
    
    help_text = "üìè –ü–æ–º–æ—â—å" if language == 'ru' else "üìè Yordam"
    builder.add(types.InlineKeyboardButton(text=help_text, callback_data="size_help"))
    builder.adjust(3, 3, 1)
    return builder.as_markup()

def get_cart_keyboard(language):
    builder = ReplyKeyboardBuilder()
    if language == 'ru':
        builder.add(KeyboardButton(text="üõí –ö–æ—Ä–∑–∏–Ω–∞"))
        builder.add(KeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –µ—â–µ —Ç–æ–≤–∞—Ä"))
        builder.add(KeyboardButton(text="üí≥ –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑"))
        builder.add(KeyboardButton(text="üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É"))
        builder.add(KeyboardButton(text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"))
    else:
        builder.add(KeyboardButton(text="üõí Savat"))
        builder.add(KeyboardButton(text="‚ûï Yana mahsulot qo'shish"))
        builder.add(KeyboardButton(text="üí≥ Buyurtma berish"))
        builder.add(KeyboardButton(text="üóëÔ∏è Savatni tozalash"))
        builder.add(KeyboardButton(text="üîô Asosiy menyu"))
    builder.adjust(2, 2, 1)
    return builder.as_markup(resize_keyboard=True)

def get_payment_menu(language):
    builder = ReplyKeyboardBuilder()
    if language == 'ru':
        builder.add(KeyboardButton(text="üí≥ –ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∫–∞—Ä—Ç—É"))
        builder.add(KeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞"))
    else:
        builder.add(KeyboardButton(text="üí≥ Karta orqali to'lash"))
        builder.add(KeyboardButton(text="‚ùå Bekor qilish"))
    builder.adjust(2)
    return builder.as_markup(resize_keyboard=True)

def get_reviews_menu(language):
    builder = ReplyKeyboardBuilder()
    if language == 'ru':
        builder.add(KeyboardButton(text="‚≠ê –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç–∑—ã–≤—ã"))
        builder.add(KeyboardButton(text="‚úçÔ∏è –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤"))
        builder.add(KeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥"))
    else:
        builder.add(KeyboardButton(text="‚≠ê Sharhlarni ko'rish"))
        builder.add(KeyboardButton(text="‚úçÔ∏è Sharh qoldirish"))
        builder.add(KeyboardButton(text="‚Ü©Ô∏è Orqaga"))
    builder.adjust(2, 1)
    return builder.as_markup(resize_keyboard=True)

def get_back_menu(language):
    text = "‚Ü©Ô∏è –ù–∞–∑–∞–¥" if language == 'ru' else "‚Ü©Ô∏è Orqaga"
    return ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text=text)]], resize_keyboard=True)

# ================== –ê–î–ú–ò–ù –ö–õ–ê–í–ò–ê–¢–£–†–´ ==================
def get_admin_menu():
    builder = ReplyKeyboardBuilder()
    builder.add(KeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"))
    builder.add(KeyboardButton(text="üì¶ –ó–∞–∫–∞–∑—ã"))
    builder.add(KeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä"))
    builder.add(KeyboardButton(text="üõçÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞–º–∏"))
    builder.add(KeyboardButton(text="üìù –û—Ç–∑—ã–≤—ã"))
    builder.add(KeyboardButton(text="üîô –í—ã–π—Ç–∏ –∏–∑ –∞–¥–º–∏–Ω–∫–∏"))
    builder.adjust(2, 2, 1, 1)
    return builder.as_markup(resize_keyboard=True)

def get_orders_menu():
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(text="üîÑ –û–∂–∏–¥–∞—é—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è", callback_data="admin_orders_pending"))
    builder.add(types.InlineKeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–µ", callback_data="admin_orders_confirmed"))
    builder.add(types.InlineKeyboardButton(text="üìã –í—Å–µ –∑–∞–∫–∞–∑—ã", callback_data="admin_orders_all"))
    builder.adjust(1)
    return builder.as_markup()

def get_order_actions(order_id):
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data=f"confirm_{order_id}"))
    builder.add(types.InlineKeyboardButton(text="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"reject_{order_id}"))
    builder.add(types.InlineKeyboardButton(text="üìû –°–≤—è–∑–∞—Ç—å—Å—è", callback_data=f"contact_{order_id}"))
    builder.adjust(2, 1)
    return builder.as_markup()

def get_categories_keyboard():
    builder = ReplyKeyboardBuilder()
    builder.add(KeyboardButton(text="üëï –§–æ—Ä–º—ã 2024/2025"))
    builder.add(KeyboardButton(text="üï∞Ô∏è –†–µ—Ç—Ä–æ —Ñ–æ—Ä–º—ã"))
    builder.add(KeyboardButton(text="‚öΩ –ë—É—Ç—Å—ã"))
    builder.add(KeyboardButton(text="üéÅ –§—É—Ç. –∞—Ç—Ä–∏–±—É—Ç–∏–∫–∞"))
    builder.add(KeyboardButton(text="üî• –ê–∫—Ü–∏–∏"))
    builder.add(KeyboardButton(text="üîô –ù–∞–∑–∞–¥"))
    builder.adjust(2, 2, 1, 1)
    return builder.as_markup(resize_keyboard=True)

def get_products_management_keyboard():
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(text="üì¶ –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ —Ç–æ–≤–∞—Ä—ã", callback_data="admin_products_view"))
    builder.add(types.InlineKeyboardButton(text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä", callback_data="admin_products_delete"))
    builder.add(types.InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="admin_products_back"))
    builder.adjust(1)
    return builder.as_markup()

def get_products_list_keyboard(products, action):
    builder = InlineKeyboardBuilder()
    for product in products:
        product_id, name_ru, name_uz, price = product
        builder.add(types.InlineKeyboardButton(
            text=f"{product_id}. {name_ru} - {format_price(price, 'ru')}",
            callback_data=f"{action}_{product_id}"
        ))
    builder.add(types.InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="admin_products_back"))
    builder.adjust(1)
    return builder.as_markup()

# ================== –¢–ï–ö–°–¢–´ ==================
def get_text(key, language):
    texts = {
        'welcome': {
            'ru': "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ FootballKits.uz!\n\n–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫:",
            'uz': "üëã FootballKits.uz ga xush kelibsiz!\n\nTilni tanlang:"
        },
        'welcome_back': {
            'ru': "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –æ–±—Ä–∞—Ç–Ω–æ –≤ FootballKits.uz!",
            'uz': "üëã FootballKits.uz ga yana xush kelibsiz!"
        },
        'contact_request': {
            'ru': "üìû –î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å –∫–æ–Ω—Ç–∞–∫—Ç–æ–º –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≤—Ä—É—á–Ω—É—é:",
            'uz': "üìû Davom etish uchun kontaktni ulashing yoki raqamni qo'lda kiriting:"
        },
        'manual_phone_request': {
            'ru': "üì± –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n+998901234567\n\n‚ö†Ô∏è –ù–∞ —ç—Ç–æ—Ç –Ω–æ–º–µ—Ä –ø—Ä–∏–¥—ë—Ç SMS –æ—Ç –ø–æ—á—Ç—ã —Å —Ç—Ä–µ–∫-–Ω–æ–º–µ—Ä–æ–º!",
            'uz': "üì± Telefon raqamingizni quyidagi formatda kiriting:\n+998901234567\n\n‚ö†Ô∏è Ushbu raqamga pochta orqali trek raqami bilan SMS keladi!"
        },
        'region_request': {
            'ru': "üèôÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —Ä–µ–≥–∏–æ–Ω –¥–ª—è –¥–æ—Å—Ç–∞–≤–∫–∏:",
            'uz': "üèôÔ∏è Yetkazib berish uchun viloyatingizni tanlang:"
        },
        'post_office_request': {
            'ru': "üìÆ –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ—á—Ç–æ–≤–æ–µ –æ—Ç–¥–µ–ª–µ–Ω–∏–µ:",
            'uz': "üìÆ Pochta bo'limini tanlang:"
        },
        'contact_received': {
            'ru': "‚úÖ –ö–æ–Ω—Ç–∞–∫—Ç –ø–æ–ª—É—á–µ–Ω!",
            'uz': "‚úÖ Kontakt qabul qilindi!"
        },
        'phone_received': {
            'ru': "‚úÖ –ù–æ–º–µ—Ä –ø–æ–ª—É—á–µ–Ω!",
            'uz': "‚úÖ Raqam qabul qilindi!"
        },
        'post_office_received': {
            'ru': "‚úÖ –û—Ç–¥–µ–ª–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–æ! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–±–∏—Ä–∞—Ç—å —Ç–æ–≤–∞—Ä—ã:",
            'uz': "‚úÖ Bo ªlim tanlandi! Endi mahsulotlarni tanlashingiz mumkin:"
        },
        'help_text': {
            'ru': "ü§ù –ü–æ–º–æ—â—å\n\nüìû –¢–µ–ª–µ—Ñ–æ–Ω: +998 88 111-10-81 \nüìû –¢–µ–ª–µ—Ñ–æ–Ω: +998 97 455-55-82 \n‚è∞ –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: 9:00-23:00\n\nüí¨ –ó–∞–¥–∞–π—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å:",
            'uz': "ü§ù Yordam\n\nüìû Telefon: +998 88 111-10-81\nüìû Telefon: +998 97 455-55-82 \n‚è∞ Ish vaqti: 9:00-23:00\n\nüí¨ Savolingizni bering:"
        },
        'choose_size': {
            'ru': "üìè –í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–º–µ—Ä:",
            'uz': "üìè O ªlchamni tanlang:"
        },
        'size_selected': {
            'ru': "‚úÖ –†–∞–∑–º–µ—Ä –≤—ã–±—Ä–∞–Ω: ",
            'uz': "‚úÖ O ªlcham tanlandi: "
        },
        'order_cancelled': {
            'ru': "‚ùå –ó–∞–∫–∞–∑ –æ—Ç–º–µ–Ω–µ–Ω",
            'uz': "‚ùå Buyurtma bekor qilindi"
        }
    }
    return texts.get(key, {}).get(language, key)

# ================== –ë–ê–ó–ê –î–ê–ù–ù–´–• –§–£–ù–ö–¶–ò–ò ==================
def get_db_connection():
    return sqlite3.connect(DB_FILENAME, check_same_thread=False)

def save_user(user_id, phone, name, language, region=None, post_office=None):
    with get_db_connection() as conn:
        cursor = conn.cursor()
        cursor.execute(
            "INSERT OR REPLACE INTO users (user_id, phone, name, language, region, post_office) VALUES (?, ?, ?, ?, ?, ?)",
            (user_id, phone, name, language, region, post_office)
        )
        conn.commit()

def get_user(user_id):
    try:
        with get_db_connection() as conn:
            cursor = conn.cursor()
            cursor.execute("SELECT phone, name, language, region, post_office FROM users WHERE user_id = ?", (user_id,))
            return cursor.fetchone()
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")
        return None

def get_products_by_category(category, language):
    with get_db_connection() as conn:
        cursor = conn.cursor()
        if language == 'ru':
            cursor.execute("SELECT id, name_ru, price, image_url, description_ru, sizes_ru FROM products WHERE category_ru = ?", (category,))
        else:
            cursor.execute("SELECT id, name_uz, price, image_url, description_uz, sizes_uz FROM products WHERE category_uz = ?", (category,))
        return cursor.fetchall()

def get_product_by_id(product_id, language):
    with get_db_connection() as conn:
        cursor = conn.cursor()
        if language == 'ru':
            cursor.execute("SELECT name_ru, price, image_url, description_ru, sizes_ru FROM products WHERE id = ?", (product_id,))
        else:
            cursor.execute("SELECT name_uz, price, image_url, description_uz, sizes_uz FROM products WHERE id = ?", (product_id,))
        return cursor.fetchone()

def save_order(user_id, phone, name, region, post_office, product_name, product_price, product_size=None, customization_text=None, customization_price=0, payment_method='card_pending'):
    with get_db_connection() as conn:
        cursor = conn.cursor()
        cursor.execute(
            """INSERT INTO orders (user_id, user_phone, user_name, user_region, user_post_office, product_name, product_price, product_size, customization_text, customization_price, payment_method)
            VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)""",
            (user_id, phone, name, region, post_office, product_name, product_price, product_size, customization_text, customization_price, payment_method)
        )
        order_id = cursor.lastrowid
        conn.commit()
        return order_id

def get_user_orders(user_id, language):
    with get_db_connection() as conn:
        cursor = conn.cursor()
        cursor.execute(
            """SELECT product_name, product_price, customization_price, status, payment_method, created_at
            FROM orders WHERE user_id = ? ORDER BY created_at DESC LIMIT 5""",
            (user_id,)
        )
        return cursor.fetchall()

def get_all_orders(status=None):
    with get_db_connection() as conn:
        cursor = conn.cursor()
        if status:
            cursor.execute(
                """SELECT id, user_id, user_name, user_phone, user_region, user_post_office, product_name,
                product_price, product_size, customization_text, customization_price, status, created_at
                FROM orders WHERE status = ? ORDER BY created_at DESC""",
                (status,)
            )
        else:
            cursor.execute(
                """SELECT id, user_id, user_name, user_phone, user_region, user_post_office, product_name,
                product_price, product_size, customization_text, customization_price, status, created_at
                FROM orders ORDER BY created_at DESC LIMIT 50"""
            )
        return cursor.fetchall()

def update_order_status(order_id, status, admin_id=None):
    with get_db_connection() as conn:
        cursor = conn.cursor()
        if admin_id:
            cursor.execute("UPDATE orders SET status = ?, confirmed_by = ?, confirmed_at = CURRENT_TIMESTAMP WHERE id = ?",
                          (status, admin_id, order_id))
        else:
            cursor.execute("UPDATE orders SET status = ? WHERE id = ?", (status, order_id))
        conn.commit()

def get_order_by_id(order_id):
    with get_db_connection() as conn:
        cursor = conn.cursor()
        cursor.execute(
            """SELECT id, user_id, user_name, user_phone, user_region, user_post_office, product_name,
            product_price, product_size, customization_text, customization_price, status, receipt_photo_id
            FROM orders WHERE id = ?""",
            (order_id,)
        )
        return cursor.fetchone()

def get_statistics():
    with get_db_connection() as conn:
        cursor = conn.cursor()

        cursor.execute("SELECT COUNT(*) FROM users")
        total_users = cursor.fetchone()[0]

        cursor.execute("SELECT COUNT(*) FROM orders")
        total_orders = cursor.fetchone()[0]

        cursor.execute("SELECT status, COUNT(*) FROM orders GROUP BY status")
        status_stats = cursor.fetchall()

        cursor.execute("SELECT SUM(product_price + customization_price) FROM orders WHERE status = 'confirmed'")
        total_revenue = cursor.fetchone()[0] or 0

        return {
            'total_users': total_users,
            'total_orders': total_orders,
            'status_stats': dict(status_stats),
            'total_revenue': total_revenue
        }

def add_product(name_ru, name_uz, price, category_ru, category_uz, description_ru, description_uz, sizes_ru, sizes_uz, image_url=None):
    with get_db_connection() as conn:
        cursor = conn.cursor()
        cursor.execute(
            """INSERT INTO products (name_ru, name_uz, price, category_ru, category_uz, image_url, description_ru, description_uz, sizes_ru, sizes_uz)
            VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)""",
            (name_ru, name_uz, price, category_ru, category_uz, image_url, description_ru, description_uz, sizes_ru, sizes_uz)
        )
        product_id = cursor.lastrowid
        conn.commit()
        return product_id

def get_all_products():
    with get_db_connection() as conn:
        cursor = conn.cursor()
        cursor.execute("SELECT id, name_ru, name_uz, price FROM products ORDER BY id DESC LIMIT 20")
        return cursor.fetchall()

def delete_product(product_id):
    with get_db_connection() as conn:
        cursor = conn.cursor()
        cursor.execute("DELETE FROM products WHERE id = ?", (product_id,))
        conn.commit()
        return cursor.rowcount > 0

def get_all_reviews():
    with get_db_connection() as conn:
        cursor = conn.cursor()
        cursor.execute("SELECT customer_name, review_text_ru, review_text_uz, photo_url, rating, created_at FROM reviews ORDER BY created_at DESC LIMIT 10")
        return cursor.fetchall()

def format_price(price, language):
    try:
        formatted = f"{int(price):,} UZS".replace(',', ' ')
    except:
        formatted = f"{price} UZS"
    return formatted

# ================== –ö–ê–†–¢–û–ß–ö–ò –¢–û–í–ê–†–û–í ==================
async def send_product_card(chat_id, product, language):
    product_id, name, price, image_url, description, sizes = product

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —ç–º–æ–¥–∑–∏ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é —Ç–æ–≤–∞—Ä–∞
    lower_name = (name or "").lower()
    if any(word in lower_name for word in ['—Ñ–æ—Ä–º–∞', 'formasi']):
        emoji = "üëï"
    elif any(word in lower_name for word in ['–±—É—Ç—Å—ã', 'futbolka']):
        emoji = "‚öΩ"
    elif any(word in lower_name for word in ['–ø–µ—Ä—á–∞—Ç–∫–∏', '–º—è—á', '–≥–µ—Ç—Ä—ã', 'qo\'lqop', 'to\'p', 'gaitor']):
        emoji = "üéÅ"
    else:
        emoji = "üî•"

    if language == 'ru':
        caption = (
            f"{emoji} <b>{name}</b>\n\n"
            f"üìù {description}\n\n"
            f"üìè <b>–†–∞–∑–º–µ—Ä—ã: {sizes}</b>\n\n"
            f"üíµ <b>–¶–µ–Ω–∞: {format_price(price, language)}</b>\n\n"
            f"üÜî <code>ID: {product_id}</code>\n\n"
            f"‚ú® <i>–ß—Ç–æ–±—ã –∑–∞–∫–∞–∑–∞—Ç—å, –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–æ–≤–∞—Ä–∞</i>"
        )
    else:
        caption = (
            f"{emoji} <b>{name}</b>\n\n"
            f"üìù {description}\n\n"
            f"üìè <b>O ªlchamlar: {sizes}</b>\n\n"
            f"üíµ <b>Narx: {format_price(price, language)}</b>\n\n"
            f"üÜî <code>ID: {product_id}</code>\n\n"
            f"‚ú® <i>Buyurtma berish uchun mahsulot raqamini yozing</i>"
        )

    try:
        if image_url:
            await bot.send_photo(
                chat_id=chat_id,
                photo=image_url,
                caption=caption,
                parse_mode='HTML',
                reply_markup=get_back_menu(language)
            )
        else:
            await bot.send_message(
                chat_id=chat_id,
                text=caption,
                parse_mode='HTML',
                reply_markup=get_back_menu(language)
            )
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ: {e}")
        await bot.send_message(
            chat_id=chat_id,
            text=caption,
            parse_mode='HTML',
            reply_markup=get_back_menu(language)
        )

# ================== –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø –ê–î–ú–ò–ù–ê–ú ==================
async def notify_admins(text, photo_id=None):
    for admin_id in ADMIN_IDS:
        try:
            if photo_id:
                await bot.send_photo(admin_id, photo_id, caption=text)
            else:
                await bot.send_message(admin_id, text)
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–¥–º–∏–Ω—É {admin_id}: {e}")

# ================== –ö–û–†–ó–ò–ù–ê ==================
async def show_cart(user_id, language, message):
    cart = user_carts.get(user_id, [])

    if not cart:
        if language == 'ru':
            await message.answer("üõí –ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞", reply_markup=get_main_menu(language))
        else:
            await message.answer("üõí Savat bo'sh", reply_markup=get_main_menu(language))
        return

    total_price = 0
    cart_text = "üõí –í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞:\n\n" if language == 'ru' else "üõí Sizning savatingiz:\n\n"

    for i, item in enumerate(cart, 1):
        item_price = item['product_price'] + (item.get('customization', {}).get('price', 0) if item.get('customization') else 0)
        total_price += item_price

        cart_text += f"{i}. {item['product_name']}\n"
        if item.get('size'):
            cart_text += f"   üìè –†–∞–∑–º–µ—Ä: {item['size']}\n" if language == 'ru' else f"   üìè O ªlcham: {item['size']}\n"
        if item.get('customization'):
            cart_text += f"   ‚ú® –ö–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—è: {item['customization']['text']}\n" if language == 'ru' else f"   ‚ú® Be'zash: {item['customization']['text']}\n"
        cart_text += f"   üíµ {format_price(item_price, language)}\n\n"

    cart_text += f"üí∞ –ò—Ç–æ–≥–æ: {format_price(total_price, language)}" if language == 'ru' else f"üí∞ Jami: {format_price(total_price, language)}"

    await message.answer(cart_text, reply_markup=get_cart_keyboard(language))

@dp.message(Command("start"))
async def start_bot(message: types.Message):
    user_id = message.from_user.id
    user = get_user(user_id)
    
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω
    if user:
        language = user[2]
        
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω - –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤—ã–±–æ—Ä —Ä–æ–ª–∏
        if user_id in ADMIN_IDS:
            if user_id not in USER_ROLES:
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±–æ—Ä —Ä–æ–ª–∏
                if language == 'ru':
                    text = "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –æ–±—Ä–∞—Ç–Ω–æ!\n\nüìã –í –∫–∞–∫–æ–π —Ä–æ–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–π—Ç–∏?"
                else:
                    text = "üëã Xush kelibsiz!\n\nüìã Qaysi rolda kirishni xohlaysiz?"
                
                await message.answer(text, reply_markup=get_role_selection_keyboard())
                return
            else:
                # –£–∂–µ –≤—ã–±—Ä–∞–ª —Ä–æ–ª—å - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ –º–µ–Ω—é
                if USER_ROLES[user_id] == 'admin':
                    await admin_panel(message)
                else:
                    text = get_text('welcome_back', language)
                    await message.answer(text, reply_markup=get_main_menu(language))
        else:
            # –û–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            text = get_text('welcome_back', language)
            await message.answer(text, reply_markup=get_main_menu(language))
    else:
        # –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –Ω–∞—á–∏–Ω–∞–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
        user_sessions[user_id] = {'step': 'language'}
        await message.answer(get_text('welcome', 'ru'), reply_markup=get_language_keyboard())

@dp.callback_query(F.data == "stay_user")
async def handle_stay_user(callback: types.CallbackQuery):
    await callback.message.edit_text(
        "‚ùå –û—Å—Ç–∞—é—Å—å –≤ —Ä–µ–∂–∏–º–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –í—ã –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –ø–æ–∑–∂–µ —á–µ—Ä–µ–∑ /admin",
        reply_markup=None
    )
    await callback.answer()
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ä–æ–ª–∏
@dp.callback_query(F.data.startswith("role_"))
async def handle_role_selection(callback: types.CallbackQuery):
    user_id = callback.from_user.id
    role = callback.data.replace("role_", "")
    
    USER_ROLES[user_id] = role
    
    if role == 'admin':
        admin_sessions[user_id] = {'is_admin': True}
        await callback.message.edit_text("üõ†Ô∏è –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å!")
        await callback.message.answer("üìã –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=get_admin_menu())
    else:
        user = get_user(user_id)
        language = user[2] if user else 'ru'
        await callback.message.edit_text(get_text('welcome_back', language))
        await callback.message.answer("üìã –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=get_main_menu(language))
    
    await callback.answer()
    

# ================== –î–û–ë–ê–í–¨ –≠–¢–ò –§–£–ù–ö–¶–ò–ò –í –ù–ê–ß–ê–õ–û (–ø–æ—Å–ª–µ POST_OFFICES) ==================

def get_location_keyboard(lang: str):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏"""
    return ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(
            text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é" if lang == 'ru' else "Joylashuvni yuborish",
            request_location=True
        )]],
        resize_keyboard=True,
        one_time_keyboard=True
    )

# –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π POST_OFFICES –∫–∞–∫ PICKUP_POINTS
PICKUP_POINTS = POST_OFFICES

def get_pickup_points_keyboard(region_key: str, lang: str):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –ø—É–Ω–∫—Ç–∞–º–∏ –≤—ã–¥–∞—á–∏"""
    if region_key not in PICKUP_POINTS:
        return None
    offices = PICKUP_POINTS[region_key][lang]
    builder = ReplyKeyboardBuilder()
    for office in offices:
        short_name = office.split('‚Äî')[0].strip()
        builder.add(KeyboardButton(text=short_name))
    builder.add(KeyboardButton(text="–ù–∞–∑–∞–¥" if lang == 'ru' else "Orqaga"))
    builder.adjust(1)
    return builder.as_markup(resize_keyboard=True)

# ================== –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô –û–ë–†–ê–ë–û–¢–ß–ò–ö –†–ï–ì–ò–û–ù–ê ==================

@dp.message(F.text.in_([v for v in REGIONS['ru'].values()] + [v for v in REGIONS['uz'].values()]))
async def handle_region_selection(message: types.Message):
    user_id = message.from_user.id
    session = user_sessions.get(user_id, {})
    
    if session.get('step') != 'region':
        return
        
    language = session.get('language', 'ru')
    text = message.text
    
    # –ù–∞—Ö–æ–¥–∏–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ä–µ–≥–∏–æ–Ω
    selected_region = None
    for region_key, region_name in REGIONS[language].items():
        if text == region_name:
            selected_region = region_key
            break
            
    if not selected_region:
        await message.answer(
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω –∏–∑ —Å–ø–∏—Å–∫–∞" if language == 'ru' else "Iltimos, ro'yxatdan viloyatni tanlang"
        )
        return
        
    user_sessions[user_id]['region'] = selected_region
    user_sessions[user_id]['selected_region'] = selected_region  # –î–û–ë–ê–í–õ–ï–ù–û!

    # –î–ª—è –¢–∞—à–∫–µ–Ω—Ç–∞ ‚Äî –≥–µ–æ–ª–æ–∫–∞—Ü–∏—è
    if selected_region == 'tashkent':
        user_sessions[user_id]['step'] = 'location'  # –ù–ï post_office!
        await message.answer(
            "–¢–∞—à–∫–µ–Ω—Ç ‚Äî –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à—É –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é\n–ù–∞—à –∫—É—Ä—å–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –∞–¥—Ä–µ—Å–∞" if language == 'ru'
            else "Toshkent ‚Äî joylashuvingizni yuboring\nBizning kuryerimiz manzilni aniqlash uchun siz bilan bog'lanadi",
            reply_markup=get_location_keyboard(language)
        )
    else:
        # –î–ª—è –¥—Ä—É–≥–∏—Ö —Ä–µ–≥–∏–æ–Ω–æ–≤ ‚Äî –ø—É–Ω–∫—Ç—ã –≤—ã–¥–∞—á–∏
        user_sessions[user_id]['step'] = 'pickup_point'
        points = PICKUP_POINTS.get(selected_region, {}).get(language, [])
        
        if not points:
            await message.answer(
                "–í —ç—Ç–æ–º —Ä–µ–≥–∏–æ–Ω–µ –ø–æ–∫–∞ –Ω–µ—Ç –ø—É–Ω–∫—Ç–æ–≤ –≤—ã–¥–∞—á–∏" if language == 'ru'
                else "Ushbu viloyatda hozircha yetkazib berish punktlari yo'q"
            )
            return
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç
        region_name = REGIONS[language][selected_region]
        text = f"<b>{region_name}</b>\n\n"
        text += f"–í—Å–µ–≥–æ –ø—É–Ω–∫—Ç–æ–≤: {len(points)}\n\n" if language == 'ru' else f"Jami punktlar: {len(points)}\n\n"
        text += "–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –≤—ã–¥–∞—á–∏:" if language == 'ru' else "Yetkazib berish punktini tanlang:"

        await message.answer(text, parse_mode='HTML', 
                            reply_markup=get_pickup_points_keyboard(selected_region, language))

# ================== –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô –û–ë–†–ê–ë–û–¢–ß–ò–ö –ì–ï–û–õ–û–ö–ê–¶–ò–ò ==================

@dp.message(F.location)
async def handle_location(message: types.Message):
    user_id = message.from_user.id
    session = user_sessions.get(user_id, {})

    if session.get('step') != 'location':
        return

    language = session.get('language', 'ru')
    lat, lon = message.location.latitude, message.location.longitude
    location_text = f"–ì–µ–æ–ª–æ–∫–∞—Ü–∏—è: {lat}, {lon}"

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ë–î
    save_user(
        user_id=user_id,
        phone=session['phone'],
        name=session['name'],
        language=language,
        region='tashkent',
        post_office=location_text
    )

    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–µ—Å—Å–∏—é
    user_sessions[user_id]['step'] = 'main_menu'
    user_sessions[user_id]['post_office'] = location_text
    user_sessions[user_id]['coordinates'] = (lat, lon)

    await message.answer(
        "–ì–µ–æ–ª–æ–∫–∞—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∞! –ö—É—Ä—å–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –∞–¥—Ä–µ—Å–∞." if language == 'ru'
        else "Geolokatsiya qabul qilindi! Kuryer manzilni aniqlash uchun siz bilan bog'lanadi.",
        reply_markup=get_main_menu(language)
    )

# ================== –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô /help (–í–´–ù–ï–°–ï–ù –ò–ó –§–£–ù–ö–¶–ò–ò!) ==================

@dp.message(Command("help"))
async def help_command(message: types.Message):
    user_id = message.from_user.id
    
    if user_id in ADMIN_IDS:
        help_text = """
<b>–ü–û–ú–û–©–¨ –î–õ–Ø –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–ê</b>

<b>–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
/start - –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ (–≤—ã–±–æ—Ä —Ä–æ–ª–∏)
/admin - –ü–µ—Ä–µ—Ö–æ–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞

<b>–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:</b>
–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ - –ü—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –º–∞–≥–∞–∑–∏–Ω–∞
–ó–∞–∫–∞–∑—ã - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞–º–∏
–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä - –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞–º–∏ - –ü—Ä–æ—Å–º–æ—Ç—Ä –∏ —É–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤
–û—Ç–∑—ã–≤—ã - –ü—Ä–æ—Å–º–æ—Ç—Ä –æ—Ç–∑—ã–≤–æ–≤ –∫–ª–∏–µ–Ω—Ç–æ–≤

<b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞–º–∏:</b>
‚Ä¢ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤ –ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ —á–µ–∫–∞
‚Ä¢ –û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤ —Å –ø—Ä–æ–±–ª–µ–º–∞–º–∏
‚Ä¢ –°–≤—è–∑—å —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É

<b>–°—Ç–∞—Ç—É—Å—ã –∑–∞–∫–∞–∑–æ–≤:</b>
–ù–æ–≤—ã–π - –¢–æ–ª—å–∫–æ —Å–æ–∑–¥–∞–Ω
–û–∂–∏–¥–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è - –û—Ç–ø—Ä–∞–≤–ª–µ–Ω —á–µ–∫
–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω - –û–ø–ª–∞—Ç–∞ –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞
–û—Ç–∫–ª–æ–Ω–µ–Ω - –ü—Ä–æ–±–ª–µ–º–∞ —Å –æ–ø–ª–∞—Ç–æ–π
        """
        await message.answer(help_text, parse_mode='HTML', reply_markup=get_admin_help_keyboard())
    else:
        user = get_user(user_id)
        if user:
            await show_help(message)
        else:
            await message.answer("–°–Ω–∞—á–∞–ª–∞ –∑–∞–≤–µ—Ä—à–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é —á–µ—Ä–µ–∑ /start")

# ================== –î–û–ë–ê–í–¨ –≠–¢–ò CALLBACK-–ò –í –ö–û–ù–ï–¶ –§–ê–ô–õ–ê ==================

@dp.callback_query(F.data == "admin_commands")
async def handle_admin_commands_help(callback: types.CallbackQuery):
    help_text = """
<b>–ö–û–ú–ê–ù–î–´ –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–ê</b>

<b>–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
/start - –ó–∞–ø—É—Å–∫ —Å –≤—ã–±–æ—Ä–æ–º —Ä–æ–ª–∏
/admin - –í—Ö–æ–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å  
/help - –ü–æ–ª–Ω–∞—è —Å–ø—Ä–∞–≤–∫–∞

<b>–§—É–Ω–∫—Ü–∏–∏ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏:</b>
‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ - –æ–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –º–∞–≥–∞–∑–∏–Ω–∞
‚Ä¢ –ó–∞–∫–∞–∑—ã - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ–º–∏ –∑–∞–∫–∞–∑–∞–º–∏
‚Ä¢ –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä - –ø–æ—à–∞–≥–æ–≤–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ
‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞–º–∏ - –ø—Ä–æ—Å–º–æ—Ç—Ä/—É–¥–∞–ª–µ–Ω–∏–µ
‚Ä¢ –û—Ç–∑—ã–≤—ã - –ø—Ä–æ—Å–º–æ—Ç—Ä –æ—Ç–∑—ã–≤–æ–≤ –∫–ª–∏–µ–Ω—Ç–æ–≤
    """
    await callback.message.answer(help_text, parse_mode='HTML')
    await callback.answer()

@dp.callback_query(F.data == "admin_orders_help")
async def handle_admin_orders_help(callback: types.CallbackQuery):
    help_text = """
<b>–£–ü–†–ê–í–õ–ï–ù–ò–ï –ó–ê–ö–ê–ó–ê–ú–ò</b>

<b>–°—Ç–∞—Ç—É—Å—ã –∑–∞–∫–∞–∑–æ–≤:</b>
–ù–æ–≤—ã–π - –¢–æ–ª—å–∫–æ —Å–æ–∑–¥–∞–Ω
–û–∂–∏–¥–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è - –ß–µ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω
–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω - –û–ø–ª–∞—Ç–∞ –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞
–û—Ç–∫–ª–æ–Ω–µ–Ω - –ü—Ä–æ–±–ª–µ–º–∞ —Å –æ–ø–ª–∞—Ç–æ–π

<b>–î–µ–π—Å—Ç–≤–∏—è —Å –∑–∞–∫–∞–∑–∞–º–∏:</b>
‚Ä¢ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å - –ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ —á–µ–∫–∞
‚Ä¢ –û—Ç–∫–ª–æ–Ω–∏—Ç—å - –ø—Ä–∏ –ø—Ä–æ–±–ª–µ–º–∞—Ö —Å –æ–ø–ª–∞—Ç–æ–π  
‚Ä¢ –°–≤—è–∑–∞—Ç—å—Å—è - –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π
    """
    await callback.message.answer(help_text, parse_mode='HTML')
    await callback.answer()

@dp.callback_query(F.data == "admin_products_help")
async def handle_admin_products_help(callback: types.CallbackQuery):
    help_text = """
<b>–£–ü–†–ê–í–õ–ï–ù–ò–ï –¢–û–í–ê–†–ê–ú–ò</b>

<b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞:</b>
1. –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é
2. –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–∞ —Ä—É—Å—Å–∫–æ–º
3. –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–∞ —É–∑–±–µ–∫—Å–∫–æ–º  
4. –£–∫–∞–∂–∏—Ç–µ —Ü–µ–Ω—É
5. –î–æ–±–∞–≤—å—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ
6. –£–∫–∞–∂–∏—Ç–µ —Ä–∞–∑–º–µ—Ä—ã
7. –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ

<b>–ö–∞—Ç–µ–≥–æ—Ä–∏–∏:</b>
‚Ä¢ –§–æ—Ä–º—ã 2024/2025
‚Ä¢ –†–µ—Ç—Ä–æ —Ñ–æ—Ä–º—ã
‚Ä¢ –ë—É—Ç—Å—ã
‚Ä¢ –§—É—Ç. –∞—Ç—Ä–∏–±—É—Ç–∏–∫–∞
‚Ä¢ –ê–∫—Ü–∏–∏
    """
    await callback.message.answer(help_text, parse_mode='HTML')
    await callback.answer()
# ================== –§–£–ù–ö–¶–ò–ò –ú–ê–ì–ê–ó–ò–ù–ê ==================
async def show_catalog(message: types.Message):
    user = get_user(message.from_user.id)
    if not user:
        await message.answer("‚ùå –°–Ω–∞—á–∞–ª–∞ –∑–∞–≤–µ—Ä—à–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é —á–µ—Ä–µ–∑ /start")
        return

    phone, name, language, region, post_office = user

    if language == 'ru':
        text = "üõçÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:"
    else:
        text = "üõçÔ∏è Toifani tanlang:"

    await message.answer(text, reply_markup=get_catalog_keyboard(language))

async def show_category_products(message: types.Message, category_ru: str, category_uz: str):
    user = get_user(message.from_user.id)
    if not user:
        await message.answer("‚ùå –°–Ω–∞—á–∞–ª–∞ –∑–∞–≤–µ—Ä—à–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é —á–µ—Ä–µ–∑ /start")
        return

    phone, name, language, region, post_office = user

    products = get_products_by_category(category_ru, language)

    if products:
        category_name = category_ru if language == 'ru' else category_uz
        if language == 'ru':
            await message.answer(f"üè∑Ô∏è {category_name}:\n\nüëá –í–æ—Ç –Ω–∞—à–∏ —Ç–æ–≤–∞—Ä—ã:")
        else:
            await message.answer(f"üè∑Ô∏è {category_name}:\n\nüëá Bizning mahsulotlarimiz:")

        for product in products:
            await send_product_card(message.chat.id, product, language)
    else:
        if language == 'ru':
            await message.answer(f"üòî –í –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ '{category_ru}' –ø–æ–∫–∞ –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤", reply_markup=get_main_menu(language))
        else:
            await message.answer(f"üòî '{category_uz}' toifasida hozircha mahsulotlar yo'q", reply_markup=get_main_menu(language))

# –í–´–ë–û–† –¢–û–í–ê–†–ê (–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ —Ü–∏—Ñ—Ä–æ–≤–æ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é)
@dp.message(F.text.regexp(r'^\d+$'))
async def handle_product_selection(message: types.Message):
    user = get_user(message.from_user.id)
    if not user:
        await message.answer("‚ùå –°–Ω–∞—á–∞–ª–∞ –∑–∞–≤–µ—Ä—à–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é —á–µ—Ä–µ–∑ /start")
        return

    phone, name, language, region, post_office = user

    try:
        product_id = int(message.text)
        product = get_product_by_id(product_id, language)

        if product:
            product_name, product_price, image_url, description, sizes = product

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–æ–≤–∞—Ä —Ñ–æ—Ä–º–æ–π (–¥–ª—è –∫–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏–∏)
            if any(word in (product_name or "").lower() for word in ['—Ñ–æ—Ä–º–∞', 'formasi']):
                user_selections[message.from_user.id] = {
                    'product_id': product_id,
                    'product_name': product_name,
                    'product_price': product_price,
                    'image_url': image_url,
                    'category': '–§–æ—Ä–º—ã'
                }
                await ask_customization(message, language, product_name, product_price)
            else:
                user_selections[message.from_user.id] = {
                    'product_id': product_id,
                    'product_name': product_name,
                    'product_price': product_price,
                    'image_url': image_url,
                    'category': '–î—Ä—É–≥–æ–µ'
                }
                if language == 'ru':
                    text = f"üõí –í—ã –≤—ã–±—Ä–∞–ª–∏:\n\nüì¶ {product_name}\nüíµ {format_price(product_price, language)}\n\n{get_text('choose_size', language)}"
                else:
                    text = f"üõí Siz tanladingiz:\n\nüì¶ {product_name}\nüíµ {format_price(product_price, language)}\n\n{get_text('choose_size', language)}"
                await message.answer(text, reply_markup=get_size_keyboard(language, '–î—Ä—É–≥–æ–µ'))
        else:
            if language == 'ru':
                await message.answer("‚ùå –¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω")
            else:
                await message.answer("‚ùå Mahsulot topilmadi")

    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –≤—ã–±–æ—Ä–∞ —Ç–æ–≤–∞—Ä–∞: {e}")
        if language == 'ru':
            await message.answer("‚ùå –û—à–∏–±–∫–∞ –≤—ã–±–æ—Ä–∞ —Ç–æ–≤–∞—Ä–∞")
        else:
            await message.answer("‚ùå Mahsulotni tanlashda xato")

# –ö–ê–°–¢–û–ú–ò–ó–ê–¶–ò–Ø
async def ask_customization(message: types.Message, language: str, product_name: str, product_price: int):
    if language == 'ru':
        text = (
            f"üé® <b>–î–æ–±–∞–≤–∏—Ç—å –∏–º—è –∏ –Ω–æ–º–µ—Ä –Ω–∞ —Ñ–æ—Ä–º—É?</b>\n\n"
            f"üì¶ –¢–æ–≤–∞—Ä: {product_name}\n"
            f"üíµ –ë–∞–∑–æ–≤–∞—è —Ü–µ–Ω–∞: {format_price(product_price, language)}\n\n"
            f"‚ú® <b>–ö–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—è (+{format_price(CUSTOMIZATION_PRICE, language)}):</b>\n"
            f"‚Ä¢ –ò–º—è –Ω–∞ —Å–ø–∏–Ω–µ\n‚Ä¢ –ù–æ–º–µ—Ä –Ω–∞ —Å–ø–∏–Ω–µ\n‚Ä¢ –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –ø–µ—á–∞—Ç—å\n\n"
            f"–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç:"
        )
    else:
        text = (
            f"üé® <b>Formaga ism va raqam qo'shilsinmi?</b>\n\n"
            f"üì¶ Mahsulot: {product_name}\n"
            f"üíµ Asosiy narx: {format_price(product_price, language)}\n\n"
            f"‚ú® <b>Be'zash (+{format_price(CUSTOMIZATION_PRICE, language)}):</b>\n"
            f"‚Ä¢ Orqaga ism\n‚Ä¢ Orqaga raqam\n‚Ä¢ Professional bosma\n\n"
            f"Variantni tanlang:"
        )

    await message.answer(text, parse_mode='HTML', reply_markup=get_customization_keyboard(language))

async def handle_customization_choice(message: types.Message, wants_customization: bool):
    user = get_user(message.from_user.id)
    if not user or message.from_user.id not in user_selections:
        return

    language = user[2]
    selection = user_selections[message.from_user.id]

    if wants_customization:
        selection['customization'] = {'price': CUSTOMIZATION_PRICE}

        if language == 'ru':
            text = "‚úçÔ∏è –í–≤–µ–¥–∏—Ç–µ –∏–º—è –∏ –Ω–æ–º–µ—Ä –¥–ª—è –ø–µ—á–∞—Ç–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä: ¬´–†–ê–•–ú–û–ù 7¬ª –∏–ª–∏ ¬´ALI 9¬ª):"
        else:
            text = "‚úçÔ∏è Bosma uchun ism va raqamni kiriting (masalan: ¬´RAHMON 7¬ª yoki ¬´ALI 9¬ª):"

        await message.answer(text, reply_markup=get_back_menu(language))
        user_sessions[message.from_user.id] = {'waiting_customization_text': True}
    else:
        selection['customization'] = None
        category = selection['category']

        if language == 'ru':
            text = f"üõí –í—ã –≤—ã–±—Ä–∞–ª–∏:\n\nüì¶ {selection['product_name']}\nüíµ {format_price(selection['product_price'], language)}\n\n{get_text('choose_size', language)}"
        else:
            text = f"üõí Siz tanladingiz:\n\nüì¶ {selection['product_name']}\nüíµ {format_price(selection['product_price'], language)}\n\n{get_text('choose_size', language)}"

        await message.answer(text, reply_markup=get_size_keyboard(language, category))

async def handle_customization_text(message: types.Message):
    user_id = message.from_user.id
    session = user_sessions.get(user_id, {})

    if not session.get('waiting_customization_text'):
        return

    user = get_user(user_id)
    if not user or user_id not in user_selections:
        return

    language = user[2]
    selection = user_selections[user_id]

    selection['customization'] = {'price': CUSTOMIZATION_PRICE, 'text': message.text}
    user_sessions[user_id] = {}

    category = selection['category']

    if language == 'ru':
        text = f"‚úÖ –ö–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∞: ¬´{message.text}¬ª\n\nüì¶ {selection['product_name']}\nüíµ {format_price(selection['product_price'], language)} + {format_price(CUSTOMIZATION_PRICE, language)}\n\n{get_text('choose_size', language)}"
    else:
        text = f"‚úÖ Be'zash qo'shildi: ¬´{message.text}¬ª\n\nüì¶ {selection['product_name']}\nüíµ {format_price(selection['product_price'], language)} + {format_price(CUSTOMIZATION_PRICE, language)}\n\n{get_text('choose_size', language)}"

    await message.answer(text, reply_markup=get_size_keyboard(language, category))

# –í–´–ë–û–† –†–ê–ó–ú–ï–†–ê
@dp.callback_query(F.data.startswith('size_'))
async def handle_size_selection(callback: types.CallbackQuery):
    user = get_user(callback.from_user.id)
    if not user or callback.from_user.id not in user_selections:
        await callback.answer("‚ùå –°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä")
        return

    language = user[2]
    size = callback.data.replace('size_', '')

    if size == "help":
        if language == 'ru':
            text = (
                "üìè **–¢–ê–ë–õ–ò–¶–ê –†–ê–ó–ú–ï–†–û–í**\n\n"
                "**üëï –§–£–¢–ë–û–õ–ö–ò –ò –§–û–†–ú–´:**\n"
                "‚Ä¢ S (46-48) - –û–±—Ö–≤–∞—Ç –≥—Ä—É–¥–∏: 92-96—Å–º\n"
                "‚Ä¢ M (48-50) - –û–±—Ö–≤–∞—Ç –≥—Ä—É–¥–∏: 96-100—Å–º\n"
                "‚Ä¢ L (50-52) - –û–±—Ö–≤–∞—Ç –≥—Ä—É–¥–∏: 100-104—Å–º\n"
                "‚Ä¢ XL (52-54) - –û–±—Ö–≤–∞—Ç –≥—Ä—É–¥–∏: 104-108—Å–º\n"
                "‚Ä¢ XXL (54-56) - –û–±—Ö–≤–∞—Ç –≥—Ä—É–¥–∏: 108-112—Å–º\n\n"
                "**‚öΩ –ë–£–¢–°–´:**\n"
                "‚Ä¢ 40 EU - –î–ª—è —Å—Ç–æ–ø—ã ~25.5—Å–º\n"
                "‚Ä¢ 41 EU - –î–ª—è —Å—Ç–æ–ø—ã ~26.5—Å–º\n"
                "‚Ä¢ 42 EU - –î–ª—è —Å—Ç–æ–ø—ã ~27—Å–º\n"
                "‚Ä¢ 43 EU - –î–ª—è —Å—Ç–æ–ø—ã ~27.5—Å–º\n"
                "‚Ä¢ 44 EU - –î–ª—è —Å—Ç–æ–ø—ã ~28.5—Å–º\n\n"
                "‚ÑπÔ∏è –ï—Å–ª–∏ —Å–æ–º–Ω–µ–≤–∞–µ—Ç–µ—Å—å –≤ —Ä–∞–∑–º–µ—Ä–µ, –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º!"
            )
        else:
            text = (
                "üìè **O ªLCHAMLAR JADVALI**\n\n"
                "**üëï FUTBOLKALAR VA FORMALAR:**\n"
                "‚Ä¢ S (46-48) - Ko'krak qafasi: 92-96sm\n"
                "‚Ä¢ M (48-50) - Ko'krak qafasi: 96-100sm\n"
                "‚Ä¢ L (50-52) - Ko'krak qafasi: 100-104sm\n"
                "‚Ä¢ XL (52-54) - Ko'krak qafasi: 104-108sm\n"
                "‚Ä¢ XXL (54-56) - Ko'krak qafasi: 108-112sm\n\n"
                "**‚öΩ FUTBOLKALAR:**\n"
                "‚Ä¢ 40 EU - Oyoq uchun ~25.5sm\n"
                "‚Ä¢ 41 EU - Oyoq uchun ~26.5sm\n"
                "‚Ä¢ 42 EU - Oyoq uchun ~27sm\n"
                "‚Ä¢ 43 EU - Oyoq uchun ~27.5sm\n"
                "‚Ä¢ 44 EU - Oyoq uchun ~28.5sm\n\n"
                "‚ÑπÔ∏è O ªlchamda shubhangiz bo ªlsa, bizga yozing!"
            )

        await callback.message.answer(text, parse_mode='HTML')
        await callback.answer()
        return

    selection = user_selections[callback.from_user.id]
    selection['size'] = size

    if callback.from_user.id not in user_carts:
        user_carts[callback.from_user.id] = []

    user_carts[callback.from_user.id].append(selection.copy())

    if language == 'ru':
        await callback.message.answer(f"‚úÖ –¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É! –†–∞–∑–º–µ—Ä: {size}")
    else:
        await callback.message.answer(f"‚úÖ Mahsulot savatga qo'shildi! O ªlcham: {size}")

    await show_cart(callback.from_user.id, language, callback.message)
    await callback.answer()

# –ü–æ–∫–∞–∑–∞—Ç—å –∫–æ—Ä–∑–∏–Ω—É (–∫–æ–º–∞–Ω–¥–∞)
async def show_cart_command(message: types.Message):
    user = get_user(message.from_user.id)
    if not user:
        await message.answer("‚ùå –°–Ω–∞—á–∞–ª–∞ –∑–∞–≤–µ—Ä—à–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é —á–µ—Ä–µ–∑ /start")
        return

    language = user[2]
    await show_cart(message.from_user.id, language, message)

async def add_more_products(message: types.Message):
    user = get_user(message.from_user.id)
    if not user:
        return

    language = user[2]
    await message.answer("üìã –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:" if language == 'ru' else "üìã Toifani tanlang:",
                   reply_markup=get_catalog_keyboard(language))

async def checkout_cart(message: types.Message):
    user = get_user(message.from_user.id)
    if not user:
        return

    language = user[2]
    cart = user_carts.get(message.from_user.id, [])

    if not cart:
        if language == 'ru':
            await message.answer("‚ùå –ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞")
        else:
            await message.answer("‚ùå Savat bo'sh")
        return

    total_price = sum(item['product_price'] + (item.get('customization', {}).get('price', 0) if item.get('customization') else 0) for item in cart)

    if language == 'ru':
        text = f"üõí –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞\n\n–¢–æ–≤–∞—Ä–æ–≤: {len(cart)}\nüí∞ –°—É–º–º–∞: {format_price(total_price, language)}\n\n–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:"
    else:
        text = f"üõí Buyurtma rasmiylashtirish\n\nMahsulotlar: {len(cart)}\nüí∞ Summa: {format_price(total_price, language)}\n\nTo'lov usulini tanlang:"

    user_sessions[message.from_user.id] = {'checkout_cart': cart.copy()}
    await message.answer(text, reply_markup=get_payment_menu(language))

async def clear_cart(message: types.Message):
    user_id = message.from_user.id
    if user_id in user_carts:
        del user_carts[user_id]

    user = get_user(user_id)
    if user:
        language = user[2]
        if language == 'ru':
            await message.answer("‚úÖ –ö–æ—Ä–∑–∏–Ω–∞ –æ—á–∏—â–µ–Ω–∞", reply_markup=get_main_menu(language))
        else:
            await message.answer("‚úÖ Savat tozalandi", reply_markup=get_main_menu(language))

# –û–ü–õ–ê–¢–ê
async def handle_payment(message: types.Message):
    user = get_user(message.from_user.id)
    if not user:
        return

    phone, name, language, region, post_office = user

    if message.text in ["‚ùå –û—Ç–º–µ–Ω–∞", "‚ùå Bekor qilish"]:
        await handle_cancel(message)
        return

    session = user_sessions.get(message.from_user.id, {})
    cart = session.get('checkout_cart', [])
    if not cart:
        if language == 'ru':
            await message.answer("‚ùå –ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞")
        else:
            await message.answer("‚ùå Savat bo'sh")
        return

    total_price = sum(item['product_price'] + (item.get('customization', {}).get('price', 0) if item.get('customization') else 0) for item in cart)

    order_ids = []

    for item in cart:
        order_id = save_order(
            message.from_user.id, phone, name, region, post_office,
            item['product_name'], item['product_price'],
            item.get('size'),
            item.get('customization', {}).get('text') if item.get('customization') else None,
            item.get('customization', {}).get('price', 0) if item.get('customization') else 0,
            'card_pending'
        )
        order_ids.append(order_id)

    if language == 'ru':
        text = (
            f"üí≥ –ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∫–∞—Ä—Ç—É\n\n"
            f"üì¶ –ó–∞–∫–∞–∑–æ–≤: {len(cart)}\n"
            f"üíµ –°—É–º–º–∞: {format_price(total_price, language)}\n\n"
            f"üîÑ –ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ –Ω–∞ –∫–∞—Ä—Ç—É:\n"
            f"<code>{CARD_NUMBER}</code>\n\n"
            f"üì∏ –ü–æ—Å–ª–µ –ø–µ—Ä–µ–≤–æ–¥–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç —á–µ–∫–∞\n"
            f"–ú—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–º –∑–∞–∫–∞–∑—ã –≤ —Ç–µ—á–µ–Ω–∏–µ 15 –º–∏–Ω—É—Ç!"
        )
    else:
        text = (
            f"üí≥ Karta orqali to'lash\n\n"
            f"üì¶ Buyurtmalar: {len(cart)}\n"
            f"üíµ Summa: {format_price(total_price, language)}\n\n"
            f"üîÑ Kartaga o'tkazing:\n"
            f"<code>{CARD_NUMBER}</code>\n\n"
            f"üì∏ O'tkazishdan so'ng chek skrinshotini yuboring\n"
            f"Buyurtmalarni 15 daqiqa ichida tasdiqlaymiz!"
        )

    await message.answer(text, parse_mode='HTML')
    user_sessions[message.from_user.id] = {'waiting_receipt': True, 'order_ids': order_ids, 'checkout_cart': cart.copy()}

# –û–ë–†–ê–ë–û–¢–ö–ê –ß–ï–ö–ê –û–ü–õ–ê–¢–´
@dp.message(F.photo)
async def handle_receipt_photo(message: types.Message):
    user_id = message.from_user.id
    session = user_sessions.get(user_id, {})

    if not session.get('waiting_receipt'):
        return

    user = get_user(user_id)
    if not user:
        return

    language = user[2]
    order_ids = session.get('order_ids', [])
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    phone, name, language, region, post_office = user

    for order_id in order_ids:
        update_order_status(order_id, 'waiting_confirm')

    cart = session.get('checkout_cart', [])
    order_details = []
    total_price = 0

    for item in cart:
        item_price = item['product_price'] + (item.get('customization', {}).get('price', 0) if item.get('customization') else 0)
        total_price += item_price

        item_detail = f"‚Ä¢ {item['product_name']}"
        if item.get('size'):
            item_detail += f" | –†–∞–∑–º–µ—Ä: {item['size']}"
        if item.get('customization'):
            item_detail += f" | –ö–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—è: {item['customization']['text']}"
        item_detail += f" | {format_price(item_price, 'ru')}"
        order_details.append(item_detail)

    admin_text = (
        f"üÜï –ù–û–í–´–ô –ó–ê–ö–ê–ó –° –û–ü–õ–ê–¢–û–ô\n\n"
        f"üë§ {name} (@{message.from_user.username or 'N/A'})\n"
        f"üìû {phone}\n"
        f"üèôÔ∏è {REGIONS['ru'].get(region, region)}\n"
        f"üèôÔ∏è –ì–æ—Ä–æ–¥: {session.get('city', '–ù–µ —É–∫–∞–∑–∞–Ω')}\n"  # ‚Üê –î–û–ë–ê–í–ò–õ–ò –ì–û–†–û–î
        f"üìÆ {post_office}\n\n"
        f"üì¶ –¢–æ–≤–∞—Ä—ã:\n" + "\n".join(order_details) + f"\n\n"
        f"üí∞ –ò—Ç–æ–≥–æ: {format_price(total_price, 'ru')}\n"
        f"üí≥ –û–ø–ª–∞—Ç–∞: –∫–∞—Ä—Ç–æ–π ‚úÖ\n"
        f"üÜî –ó–∞–∫–∞–∑—ã: {', '.join(map(str, order_ids))}\n"
        f"üïí {datetime.now().strftime('%H:%M %d.%m.%Y')}"
    )

    try:
        # üî• –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω–∞–º —Å–Ω–∞—á–∞–ª–∞ —Ç–µ–∫—Å—Ç, –ø–æ—Ç–æ–º —Ñ–æ—Ç–æ —á–µ–∫–∞
        for admin_id in ADMIN_IDS:
            try:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
                await bot.send_message(admin_id, admin_text)
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ —á–µ–∫–∞
                await bot.send_photo(admin_id, message.photo[-1].file_id, 
                                   caption=f"üì∏ –ß–µ–∫ –æ–ø–ª–∞—Ç—ã –¥–ª—è –∑–∞–∫–∞–∑–æ–≤: {', '.join(map(str, order_ids))}")
                
                # üî• –î–û–ü–û–õ–ù–ï–ù–ò–ï: –ï—Å–ª–∏ —ç—Ç–æ –¢–∞—à–∫–µ–Ω—Ç –∏ –µ—Å—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—è - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç—É
               
                        
            except Exception as e:
                logging.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–¥–º–∏–Ω—É {admin_id}: {e}")

        if language == 'ru':
            await message.answer("‚úÖ –ß–µ–∫ –ø–æ–ª—É—á–µ–Ω! –ú—ã –ø—Ä–æ–≤–µ—Ä—è–µ–º –æ–ø–ª–∞—Ç—É –∏ —Å–∫–æ—Ä–æ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–º –≤–∞—à –∑–∞–∫–∞–∑.", reply_markup=get_main_menu(language))
        else:
            await message.answer("‚úÖ Chek qabul qilindi! Biz to'lovni tekshiramiz va tez orada buyurtmangizni tasdiqlaymiz.", reply_markup=get_main_menu(language))

        if user_id in user_carts:
            del user_carts[user_id]
        user_sessions[user_id] = {}

    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —á–µ–∫–∞: {e}")
        if language == 'ru':
            await message.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —á–µ–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")
        else:
            await message.answer("‚ùå Chek yuborishda xatolik. Qayta urinib ko'ring.")

# –°–ò–°–¢–ï–ú–ê –û–¢–ó–´–í–û–í
async def show_reviews_menu(message: types.Message):
    user = get_user(message.from_user.id)
    if not user:
        await message.answer("‚ùå –°–Ω–∞—á–∞–ª–∞ –∑–∞–≤–µ—Ä—à–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é —á–µ—Ä–µ–∑ /start")
        return

    phone, name, language, region, post_office = user
    if language == 'ru':
        text = "‚≠ê –ú–Ω–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–æ–≤\n\n–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç–∑—ã–≤—ã –Ω–∞—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏–ª–∏ –æ—Å—Ç–∞–≤–∏—Ç—å —Å–≤–æ–π –æ—Ç–∑—ã–≤!"
    else:
        text = "‚≠ê Mijozlar fikri\n\nBu yerda mijozlarimiz sharhlarini ko'rishingiz yoki o'z sharhingizni qoldirishingiz mumkin!"

    await message.answer(text, reply_markup=get_reviews_menu(language))

async def show_reviews(message: types.Message):
    user = get_user(message.from_user.id)
    if not user:
        return

    phone, name, language, region, post_office = user

    with get_db_connection() as conn:
        cursor = conn.cursor()
        cursor.execute("SELECT customer_name, review_text_ru, review_text_uz, photo_url, rating FROM reviews ORDER BY created_at DESC LIMIT 10")
        reviews = cursor.fetchall()

    if not reviews:
        if language == 'ru':
            await message.answer("üòî –ü–æ–∫–∞ –Ω–µ—Ç –æ—Ç–∑—ã–≤–æ–≤")
        else:
            await message.answer("üòî Hozircha sharhlar yo'q")
        return

    for review in reviews:
        customer_name, review_text_ru, review_text_uz, photo_url, rating = review

        stars = "‚≠ê" * rating
        review_text = review_text_ru if language == 'ru' else review_text_uz

        caption = f"{stars}\nüë§ {customer_name}\nüí¨ {review_text}"

        try:
            if photo_url:
                await bot.send_photo(
                    chat_id=message.chat.id,
                    photo=photo_url,
                    caption=caption
                )
            else:
                await message.answer(caption)
        except Exception:
            await message.answer(caption)

async def start_review(message: types.Message):
    user = get_user(message.from_user.id)
    if not user:
        return

    phone, name, language, region, post_office = user

    if language == 'ru':
        text = (
            "‚úçÔ∏è –ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –æ—Ç–∑—ã–≤ –æ –Ω–∞—à–µ–º –º–∞–≥–∞–∑–∏–Ω–µ!\n\n"
            "–ú–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å:\n"
            "‚Ä¢ –¢–µ–∫—Å—Ç –æ—Ç–∑—ã–≤–∞\n"
            "‚Ä¢ –§–æ—Ç–æ + —Ç–µ–∫—Å—Ç\n"
            "‚Ä¢ –ü—Ä–æ—Å—Ç–æ —Ñ–æ—Ç–æ\n\n"
            "–ú—ã –¥–æ–±–∞–≤–∏–º –≤–∞—à –æ—Ç–∑—ã–≤ –≤ –Ω–∞—à –∫–∞–Ω–∞–ª!"
        )
    else:
        text = (
            "‚úçÔ∏è Do'konimiz haqida sharhingizni yozing!\n\n"
            "Yuborishingiz mumkin:\n"
            "‚Ä¢ Sharh matni\n"
            "‚Ä¢ Rasm + matn\n"
            "‚Ä¢ Shunchaki rasm\n\n"
            "Biz sharhingizni kanalimizga qo'shamiz!"
        )

    await message.answer(text)
    user_sessions[message.from_user.id] = {'waiting_review': True}

# –ú–û–ò –ó–ê–ö–ê–ó–´
async def show_my_orders(message: types.Message):
    user = get_user(message.from_user.id)
    if not user:
        await message.answer("‚ùå –°–Ω–∞—á–∞–ª–∞ –∑–∞–≤–µ—Ä—à–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é —á–µ—Ä–µ–∑ /start")
        return

    phone, name, language, region, post_office = user
    orders = get_user_orders(message.from_user.id, language)

    if orders:
        if language == 'ru':
            response = "üì¶ –í–∞—à–∏ –∑–∞–∫–∞–∑—ã:\n\n"
        else:
            response = "üì¶ Sizning buyurtmalaringiz:\n\n"

        for i, (product_name, product_price, customization_price, status, payment, created_at) in enumerate(orders, 1):
            total_price = product_price + (customization_price or 0)
            status_icon = "‚úÖ" if status == "confirmed" else "üîÑ" if status == "waiting_confirm" else "üÜï"

            status_text = "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω" if status == "confirmed" else "–û–∂–∏–¥–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è" if status == "waiting_confirm" else "–ù–æ–≤—ã–π"
            if language == 'uz':
                status_text = "Tasdiqlangan" if status == "confirmed" else "Tasdiqlanish kutilmoqda" if status == "waiting_confirm" else "Yangi"

            response += f"{i}. {product_name}\n"
            response += f"üíµ {format_price(total_price, language)}\n"
            response += f"{status_icon} {status_text}\n"
            response += f"üìÖ {created_at[:16]}\n\n"
    else:
        if language == 'ru':
            response = "üì¶ –£ –≤–∞—Å –µ—â–µ –Ω–µ—Ç –∑–∞–∫–∞–∑–æ–≤"
        else:
            response = "üì¶ Sizda hali buyurtmalar yo'q"

    await message.answer(response, reply_markup=get_main_menu(language))

# –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò
async def show_help(message: types.Message):
    user = get_user(message.from_user.id)
    if not user:
        await message.answer("‚ùå –°–Ω–∞—á–∞–ª–∞ –∑–∞–≤–µ—Ä—à–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é —á–µ—Ä–µ–∑ /start")
        return

    phone, name, language, region, post_office = user
    await message.answer(get_text('help_text', language), parse_mode='HTML')
    support_requests[message.from_user.id] = {'waiting_question': True}

async def back_to_main_menu(message: types.Message):
    user = get_user(message.from_user.id)
    if user:
        language = user[2]
        await message.answer("üìã –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:" if language == 'ru' else "üìã Asosiy menyu:",
                           reply_markup=get_main_menu(language))

async def back_to_catalog(message: types.Message):
    user = get_user(message.from_user.id)
    if not user:
        return

    language = user[2]
    await show_catalog(message)

async def handle_cancel(message: types.Message):
    user_id = message.from_user.id
    user = get_user(user_id)
    if user:
        language = user[2]
        if user_id in user_selections:
            del user_selections[user_id]
        if user_id in user_sessions:
            user_sessions[user_id] = {}

        await message.answer(get_text('order_cancelled', language),
                           reply_markup=get_main_menu(language))

# ================== –ê–î–ú–ò–ù –ö–û–ú–ê–ù–î–´ ==================
@dp.message(Command("admin"))
async def admin_panel(message: types.Message):
    if message.from_user.id not in ADMIN_IDS:
        await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏")
        return

    admin_sessions[message.from_user.id] = {'is_admin': True}
    await message.answer("üõ†Ô∏è –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å!", reply_markup=get_admin_menu())

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞–¥–º–∏–Ω-–º–µ–Ω—é
@dp.message(F.text.in_(["üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", "üì¶ –ó–∞–∫–∞–∑—ã", "‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä", "üõçÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞–º–∏", "üìù –û—Ç–∑—ã–≤—ã", "üîô –í—ã–π—Ç–∏ –∏–∑ –∞–¥–º–∏–Ω–∫–∏"]))
async def handle_admin_commands(message: types.Message):
    if message.from_user.id not in ADMIN_IDS:
        return

    if message.text == "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞":
        stats = get_statistics()
        text = (
            f"üìä <b>–°–¢–ê–¢–ò–°–¢–ò–ö–ê –ú–ê–ì–ê–ó–ò–ù–ê</b>\n\n"
            f"üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: <b>{stats['total_users']}</b>\n"
            f"üì¶ –í—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤: <b>{stats['total_orders']}</b>\n"
            f"üí∞ –í—ã—Ä—É—á–∫–∞: <b>{format_price(stats['total_revenue'], 'ru')}</b>\n\n"
            f"<b>–°—Ç–∞—Ç—É—Å—ã –∑–∞–∫–∞–∑–æ–≤:</b>\n"
            f"‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–µ: <b>{stats['status_stats'].get('confirmed', 0)}</b>\n"
            f"üîÑ –û–∂–∏–¥–∞—é—Ç: <b>{stats['status_stats'].get('waiting_confirm', 0)}</b>\n"
            f"üÜï –ù–æ–≤—ã–µ: <b>{stats['status_stats'].get('new', 0)}</b>\n"
            f"‚ùå –û—Ç–∫–ª–æ–Ω–µ–Ω–Ω—ã–µ: <b>{stats['status_stats'].get('cancelled', 0)}</b>"
        )
        await message.answer(text, parse_mode='HTML')

    elif message.text == "üì¶ –ó–∞–∫–∞–∑—ã":
        await message.answer("üì¶ <b>–£–ü–†–ê–í–õ–ï–ù–ò–ï –ó–ê–ö–ê–ó–ê–ú–ò</b>", parse_mode='HTML', reply_markup=get_orders_menu())

    elif message.text == "‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä":
        admin_sessions[message.from_user.id] = {'adding_product': True, 'step': 'category'}
        await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–∞:", reply_markup=get_categories_keyboard())

    elif message.text == "üõçÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞–º–∏":
        await message.answer("üõçÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞–º–∏:", reply_markup=get_products_management_keyboard())

    elif message.text == "üìù –û—Ç–∑—ã–≤—ã":
        reviews = get_all_reviews()
        if not reviews:
            await message.answer("üìù –ü–æ–∫–∞ –Ω–µ—Ç –æ—Ç–∑—ã–≤–æ–≤")
            return

        for review in reviews[:5]:
            customer_name, review_text_ru, review_text_uz, photo_url, rating, created_at = review
            stars = "‚≠ê" * rating
            text = f"{stars}\nüë§ {customer_name}\nüí¨ {review_text_ru}\nüìÖ {created_at[:16]}"

            if photo_url:
                await message.answer_photo(photo_url, caption=text)
            else:
                await message.answer(text)

    elif message.text == "üîô –í—ã–π—Ç–∏ –∏–∑ –∞–¥–º–∏–Ω–∫–∏":
        if message.from_user.id in admin_sessions:
            del admin_sessions[message.from_user.id]
        await message.answer("‚úÖ –í—ã –≤—ã—à–ª–∏ –∏–∑ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏", reply_markup=types.ReplyKeyboardRemove())

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ (–∫–∞—Ç–µ–≥–æ—Ä–∏—è)
@dp.message(F.text.in_(["üëï –§–æ—Ä–º—ã 2024/2025", "üï∞Ô∏è –†–µ—Ç—Ä–æ —Ñ–æ—Ä–º—ã", "‚öΩ –ë—É—Ç—Å—ã", "üéÅ –§—É—Ç. –∞—Ç—Ä–∏–±—É—Ç–∏–∫–∞", "üî• –ê–∫—Ü–∏–∏"]))
async def handle_product_category(message: types.Message):
    if message.from_user.id not in ADMIN_IDS or not admin_sessions.get(message.from_user.id, {}).get('adding_product'):
        return

    category_map = {
        "üëï –§–æ—Ä–º—ã 2024/2025": ("–§–æ—Ä–º—ã 2024/2025", "2024/2025 Formalari"),
        "üï∞Ô∏è –†–µ—Ç—Ä–æ —Ñ–æ—Ä–º—ã": ("–†–µ—Ç—Ä–æ —Ñ–æ—Ä–º—ã", "Retro Formalari"),
        "‚öΩ –ë—É—Ç—Å—ã": ("–ë—É—Ç—Å—ã", "Futbolkalar"),
        "üéÅ –§—É—Ç. –∞—Ç—Ä–∏–±—É—Ç–∏–∫–∞": ("–§—É—Ç–±–æ–ª—å–Ω–∞—è –∞—Ç—Ä–∏–±—É—Ç–∏–∫–∞", "Futbol Aksessuarlari"),
        "üî• –ê–∫—Ü–∏–∏": ("–ê–∫—Ü–∏–∏", "Aksiyalar")
    }

    category_ru, category_uz = category_map[message.text]
    admin_sessions[message.from_user.id].update({
        'step': 'name_ru',
        'category_ru': category_ru,
        'category_uz': category_uz
    })

    await message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –Ω–∞ —Ä—É—Å—Å–∫–æ–º:", reply_markup=types.ReplyKeyboardRemove())

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ (–ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å)
@dp.message(F.text)
async def handle_product_creation(message: types.Message):
    user_id = message.from_user.id
    if user_id not in ADMIN_IDS or not admin_sessions.get(user_id, {}).get('adding_product'):
        return await handle_main_menu(message)

    session = admin_sessions[user_id]
    step = session.get('step')

    if step == 'name_ru':
        session['name_ru'] = message.text
        session['step'] = 'name_uz'
        await message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –Ω–∞ —É–∑–±–µ–∫—Å–∫–æ–º:")

    elif step == 'name_uz':
        session['name_uz'] = message.text
        session['step'] = 'price'
        await message.answer("–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞ (—Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã):")

    elif step == 'price':
        try:
            session['price'] = int(message.text)
            session['step'] = 'description_ru'
            await message.answer("–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –Ω–∞ —Ä—É—Å—Å–∫–æ–º:")
        except ValueError:
            await message.answer("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ü–µ–Ω—ã. –í–≤–µ–¥–∏—Ç–µ —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã:")

    elif step == 'description_ru':
        session['description_ru'] = message.text
        session['step'] = 'description_uz'
        await message.answer("–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –Ω–∞ —É–∑–±–µ–∫—Å–∫–æ–º:")

    elif step == 'description_uz':
        session['description_uz'] = message.text
        session['step'] = 'sizes_ru'
        await message.answer("–í–≤–µ–¥–∏—Ç–µ —Ä–∞–∑–º–µ—Ä—ã –Ω–∞ —Ä—É—Å—Å–∫–æ–º (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é):")

    elif step == 'sizes_ru':
        session['sizes_ru'] = message.text
        session['step'] = 'sizes_uz'
        await message.answer("–í–≤–µ–¥–∏—Ç–µ —Ä–∞–∑–º–µ—Ä—ã –Ω–∞ —É–∑–±–µ–∫—Å–∫–æ–º (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é):")

    elif step == 'sizes_uz':
        session['sizes_uz'] = message.text
        session['step'] = 'image'
        await message.answer("–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞ (–∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ '–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å' —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –±–µ–∑ —Ñ–æ—Ç–æ):")

    elif step == 'image':
        if message.text and message.text.lower() == '–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å':
            product_data = {
                'name_ru': session['name_ru'],
                'name_uz': session['name_uz'],
                'price': session['price'],
                'category_ru': session['category_ru'],
                'category_uz': session['category_uz'],
                'description_ru': session['description_ru'],
                'description_uz': session['description_uz'],
                'sizes_ru': session['sizes_ru'],
                'sizes_uz': session['sizes_uz'],
                'image_url': None
            }

            product_id = add_product(**product_data)
            del admin_sessions[user_id]

            await message.answer(f"‚úÖ –¢–æ–≤–∞—Ä —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω! ID: {product_id}", reply_markup=get_admin_menu())

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞ (–ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏)
@dp.message(F.photo)
async def handle_product_photo(message: types.Message):
    user_id = message.from_user.id
    if user_id not in ADMIN_IDS or not admin_sessions.get(user_id, {}).get('adding_product'):
        return

    session = admin_sessions[user_id]
    if session.get('step') == 'image':
        product_data = {
            'name_ru': session['name_ru'],
            'name_uz': session['name_uz'],
            'price': session['price'],
            'category_ru': session['category_ru'],
            'category_uz': session['category_uz'],
            'description_ru': session['description_ru'],
            'description_uz': session['description_uz'],
            'sizes_ru': session['sizes_ru'],
            'sizes_uz': session['sizes_uz'],
            'image_url': message.photo[-1].file_id
        }

        product_id = add_product(**product_data)
        del admin_sessions[user_id]

        await message.answer(f"‚úÖ –¢–æ–≤–∞—Ä —Å —Ñ–æ—Ç–æ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω! ID: {product_id}", reply_markup=get_admin_menu())

# –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞–º–∏: callback'–∏
@dp.callback_query(F.data.startswith("admin_products_"))
async def handle_products_management_callback(callback: types.CallbackQuery):
    if callback.from_user.id not in ADMIN_IDS:
        return

    action = callback.data

    if action == "admin_products_view":
        products = get_all_products()

        if not products:
            await callback.message.answer("üì¶ –¢–æ–≤–∞—Ä–æ–≤ –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
            return

        for product in products:
            product_id, name_ru, name_uz, price = product
            text = f"üÜî {product_id}\nüè∑Ô∏è {name_ru}\nüíµ {format_price(price, 'ru')}"
            await callback.message.answer(text)

        await callback.message.answer("üì¶ –í—Å–µ —Ç–æ–≤–∞—Ä—ã –ø–æ–∫–∞–∑–∞–Ω—ã –≤—ã—à–µ")

    elif action == "admin_products_delete":
        products = get_all_products()

        if not products:
            await callback.message.answer("üì¶ –¢–æ–≤–∞—Ä–æ–≤ –Ω–µ—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è")
            return

        await callback.message.answer("üóëÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:",
                                    reply_markup=get_products_list_keyboard(products, "delete_product"))

    elif action == "admin_products_back":
        await callback.message.answer("üîô –í–æ–∑–≤—Ä–∞—Ç –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å", reply_markup=get_admin_menu())

    await callback.answer()

@dp.callback_query(F.data.startswith("delete_product_"))
async def handle_delete_product(callback: types.CallbackQuery):
    if callback.from_user.id not in ADMIN_IDS:
        return

    try:
        product_id = int(callback.data.replace("delete_product_", ""))
    except:
        await callback.answer("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π ID")
        return

    if delete_product(product_id):
        await callback.message.answer(f"‚úÖ –¢–æ–≤–∞—Ä #{product_id} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω")
    else:
        await callback.message.answer(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞ #{product_id}")

    await callback.answer()

# –ü—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–∫–∞–∑–æ–≤ (–∞–¥–º–∏–Ω)
@dp.callback_query(F.data.startswith("admin_orders_"))
async def handle_admin_orders(callback: types.CallbackQuery):
    if callback.from_user.id not in ADMIN_IDS:
        return

    status_map = {
        "admin_orders_pending": "waiting_confirm",
        "admin_orders_confirmed": "confirmed",
        "admin_orders_all": None
    }

    status = status_map[callback.data]
    orders = get_all_orders(status)

    if not orders:
        await callback.message.answer("üì¶ –ó–∞–∫–∞–∑—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        return

    for order in orders[:10]:
        order_id, user_id, user_name, user_phone, user_region, user_post_office, product_name, product_price, product_size, customization_text, customization_price, order_status, created_at = order

        status_emoji = {
            'new': 'üÜï',
            'waiting_confirm': 'üîÑ',
            'confirmed': '‚úÖ',
            'cancelled': '‚ùå'
        }.get(order_status, 'üì¶')

        text = (
            f"{status_emoji} <b>–ó–ê–ö–ê–ó #{order_id}</b>\n\n"
            f"üë§ <b>{user_name}</b>\n"
            f"üìû {user_phone}\n"
            f"üèôÔ∏è {REGIONS['ru'].get(user_region, user_region)}\n"
            f"üìÆ {user_post_office}\n\n"
            f"üì¶ <b>{product_name}</b>\n"
            f"üìè –†–∞–∑–º–µ—Ä: {product_size or '–ù–µ —É–∫–∞–∑–∞–Ω'}\n"
        )

        if customization_text:
            text += f"‚ú® –ö–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—è: {customization_text}\n"

        total_price = product_price + (customization_price or 0)
        text += f"üíµ –°—É–º–º–∞: {format_price(total_price, 'ru')}\n"
        text += f"üìÖ {created_at[:16]}\n"
        text += f"üî∞ –°—Ç–∞—Ç—É—Å: {order_status}"

        await callback.message.answer(text, parse_mode='HTML', reply_markup=get_order_actions(order_id))

    await callback.answer()

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–µ–π—Å—Ç–≤–∏–π —Å –∑–∞–∫–∞–∑–∞–º–∏ (–ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å/–æ—Ç–∫–ª–æ–Ω–∏—Ç—å/–∫–æ–Ω—Ç–∞–∫—Ç)
@dp.callback_query(F.data.startswith("confirm_") | F.data.startswith("reject_") | F.data.startswith("contact_"))
async def handle_order_actions(callback: types.CallbackQuery):
    if callback.from_user.id not in ADMIN_IDS:
        return

    data = callback.data
    if "_" not in data:
        await callback.answer("‚ùå –ù–µ–≤–µ—Ä–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ")
        return

    action, order_id_str = data.split("_", 1)
    try:
        order_id = int(order_id_str)
    except:
        await callback.answer("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π ID –∑–∞–∫–∞–∑–∞")
        return

    order = get_order_by_id(order_id)

    if not order:
        await callback.answer("‚ùå –ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return

    if action == "confirm":
        update_order_status(order_id, 'confirmed', callback.from_user.id)
        await callback.message.edit_text(f"‚úÖ –ó–∞–∫–∞–∑ #{order_id} –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω")

        user_id = order[1]
        try:
            await bot.send_message(user_id, f"‚úÖ –í–∞—à –∑–∞–∫–∞–∑ #{order_id} –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω! –°–∫–æ—Ä–æ –º—ã –µ–≥–æ –æ—Ç–ø—Ä–∞–≤–∏–º.")
        except Exception:
            pass

    elif action == "reject":
        update_order_status(order_id, 'cancelled', callback.from_user.id)
        await callback.message.edit_text(f"‚ùå –ó–∞–∫–∞–∑ #{order_id} –æ—Ç–∫–ª–æ–Ω–µ–Ω")

        user_id = order[1]
        try:
            await bot.send_message(user_id, f"‚ùå –í–∞—à –∑–∞–∫–∞–∑ #{order_id} –æ—Ç–∫–ª–æ–Ω–µ–Ω. –î–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏.")
        except Exception:
            pass

    elif action == "contact":
        user_phone = order[3]
        user_name = order[2]
        await callback.message.answer(f"üìû –ö–æ–Ω—Ç–∞–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:\nüë§ {user_name}\nüìû {user_phone}")

    await callback.answer()

# ================== –ó–ê–ü–£–°–ö ==================
async def main():
    try:
        setup_database()
        logger.info("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
        logger.info(f"‚úÖ –¢–æ–∫–µ–Ω: {'*' * 10}{API_TOKEN[-5:]}")
        logger.info(f"üëë –ê–¥–º–∏–Ω—ã: {ADMIN_IDS}")
        logger.info(f"üí≥ –ö–∞—Ä—Ç–∞: {CARD_NUMBER}")
        logger.info("‚≠ê –°–∏—Å—Ç–µ–º–∞ –æ—Ç–∑—ã–≤–æ–≤ –≥–æ—Ç–æ–≤–∞!")
        logger.info("üõçÔ∏è –ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤ –≥–æ—Ç–æ–≤!")
        logger.info("üì± –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —á–µ—Ä–µ–∑ –∫–æ–Ω—Ç–∞–∫—Ç –∏–ª–∏ —Ä—É—á–Ω–æ–π –≤–≤–æ–¥ –Ω–æ–º–µ—Ä–∞")
        logger.info("üìç –°–∏—Å—Ç–µ–º–∞ –¥–æ—Å—Ç–∞–≤–∫–∏ —Å –ø–æ—á—Ç–æ–≤—ã–º–∏ –æ—Ç–¥–µ–ª–µ–Ω–∏—è–º–∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞!")
        logger.info("üõ†Ô∏è –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞!")

               # üî• –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ó–∞–ø—É—Å–∫–∞–µ–º –≤–µ–±-—Å–µ—Ä–≤–µ—Ä –û–¢–î–ï–õ–¨–ù–û
        await start_web_server()
        
        # üî• –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ò—Å–ø–æ–ª—å–∑—É–µ–º polling (–ø—Ä–æ—â–µ –¥–ª—è –Ω–∞—á–∞–ª–∞)
        await dp.start_polling(bot)

    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
    finally:
        await bot.session.close()

if __name__ == "__main__":
    asyncio.run(main())